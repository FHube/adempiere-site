<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://mrhope.site/rss.xml" rel="self" type="application/rss+xml"/>
    <title>Mr.Hope</title>
    <link>https://mrhope.site/</link>
    <description>Where there is light, there is hope.</description>
    <language>zh-CN</language>
    <pubDate>Thu, 17 Mar 2022 13:02:18 GMT</pubDate>
    <lastBuildDate>Thu, 17 Mar 2022 13:02:18 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <category>物理</category>
    <category>Python</category>
    <category>GitHub</category>
    <category>基础</category>
    <category>CSS</category>
    <category>设计</category>
    <category>VS Code</category>
    <category>YAML</category>
    <category>JSON</category>
    <category>硬件</category>
    <category>软件</category>
    <category>Dart</category>
    <item>
      <title>概念</title>
      <link>https://mrhope.site/physics/tsp/definition.html</link>
      <guid>https://mrhope.site/physics/tsp/definition.html</guid>
      <source url="https://mrhope.site/rss.xml">概念</source>
      <category>物理</category>
      <pubDate>Sat, 10 Apr 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="基本概念" tabindex="-1"> 基本概念</h2>
<p>弛豫时间: 系统由其初始状态达到平衡状态所经历的时间。</p>
<p>平衡态: 系统的各种宏观性质长时间内不发生变化，这样的状态成为热力学平衡态。</p>
<ul>
<li>开系: 与外界既有物质交换，又有能量交换的系统</li>
<li>闭系: 与外界没有物质交换，但有能量交换的系统</li>
<li>孤立系: 与其他物体既没有物质交换又没有能量交换的系统</li>
</ul>
<p>热力学温标: 不依赖于任何具体物质特性的温标。</p>
<h2 id="热力学定律" tabindex="-1"> 热力学定律</h2>
<h3 id="热平衡定律-热力学第零定律" tabindex="-1"> 热平衡定律(热力学第零定律)</h3>
<p>如果 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span>A</span></span></span></span> 和 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.05017em;">B</span></span></span></span> 同时与 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.07153em;">C</span></span></span></span> 达到热平衡，则 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span>A</span></span></span></span> 和 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.05017em;">B</span></span></span></span> 也处于热平衡。</p>
<h3 id="热力学第一定律-能量守恒定律" tabindex="-1"> 热力学第一定律(能量守恒定律)</h3>
<p>自然界一切物质都具有能量，能量有各种不同的形式，可以从一种形式转化为另一种形式，从一个物体传递到另一个物体，在传递和优化中能量的数量不变。</p>
<p>另一种表述: 第一类永动机是不可能造成的。</p>
<blockquote>
<p>第一类永动机: 机器不需要外界供给能量而可以不断地对外做功。</p>
</blockquote>
<h3 id="热力学第二定律" tabindex="-1"> 热力学第二定律</h3>
<ul>
<li>克氏表述: 不可能把热量从低温物体传到高温物体而不引起其他变化。</li>
<li>开氏表述: 不可能从单一热源吸热使之完全变成有用的共而不引起其他变化。</li>
</ul>
<div><p>相关信息</p>
<p>开氏说法也可推出: 第二类永动机是不可能造成的。</p>
<blockquote>
<p>第二类永动机: 能供从单一热源吸热，使之完全变成有用的功而不引起其他变化。</p>
</blockquote>
</div>
<h3 id="热力学第三定律-能氏定律" tabindex="-1"> 热力学第三定律(能氏定律)</h3>
<p>凝聚系的熵在等温过程中的改变随热力学温度趋于零，即 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:1.4671em;vertical-align:-0.7171em;"></span><span><span><span><span style="height:0.6944em;"><span style="top:-2.3829em;margin-left:0em;"><span style="height:3em;"></span><span><span><span>x</span><span>→</span><span>0</span></span></span></span><span style="top:-3em;"><span style="height:3em;"></span><span><span>lim</span></span></span></span><span>​</span></span><span><span style="height:0.7171em;"><span></span></span></span></span></span><span>(</span><span>Δ</span><span style="margin-right:0.05764em;">S</span><span><span>)</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6444em;"></span><span>0</span></span></span></span></p>
<h2 id="卡诺定理" tabindex="-1"> 卡诺定理</h2>
<p>所有工作与两个一定温度之间的热机，以可逆机的效率为最高。</p>
<p>推论: 所有工作与两个一定温度之间的可逆热机的效率相等。</p>
<h2 id="等概率原理" tabindex="-1"> 等概率原理</h2>
<p>处在平衡状态的孤立系统，系统的各个可能出现的概率是相等的。既然这些围观都满足具有确定 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.10903em;">N</span></span></span></span>,<span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.05764em;">E</span></span></span></span>,<span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.22222em;">V</span></span></span></span> 的宏观条件，没有理由认为哪一个状态出现的概率应当更大一些，这些微观状态是平权的。</p>
<h2 id="能量均分定理" tabindex="-1"> 能量均分定理</h2>
<p>对于处在温度为 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.13889em;">T</span></span></span></span> 的平衡状态系统，粒子能量中每个平方项的平均值是 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.276em;vertical-align:-0.686em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>2</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.03148em;">k</span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span></p>
]]></content:encoded>
    </item>
    <item>
      <title>面向对象编程</title>
      <link>https://mrhope.site/code/language/python/oop/</link>
      <guid>https://mrhope.site/code/language/python/oop/</guid>
      <source url="https://mrhope.site/rss.xml">面向对象编程</source>
      <category>Python</category>
      <pubDate>Sun, 28 Mar 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="目录" tabindex="-1"> 目录</h2>
<ul>
<li>
<p><a href="/code/language/python/oop/intro.html">介绍</a></p>
</li>
<li>
<p><a href="/code/language/python/oop/instance.html">类和实例</a></p>
</li>
<li>
<p><a href="/code/language/python/oop/extend.html">继承和多态</a></p>
</li>
<li>
<p><a href="/code/language/python/oop/property.html">属性</a></p>
</li>
<li>
<p><a href="/code/language/python/oop/info.html">获取对象信息</a></p>
</li>
<li>
<p><a href="/code/language/python/oop/customize.html">定制类</a></p>
</li>
<li>
<p><a href="/code/language/python/oop/special.html">特殊的 class</a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>定制类</title>
      <link>https://mrhope.site/code/language/python/oop/customize.html</link>
      <guid>https://mrhope.site/code/language/python/oop/customize.html</guid>
      <source url="https://mrhope.site/rss.xml">定制类</source>
      <category>Python</category>
      <pubDate>Sun, 28 Mar 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>看到类似 <code>__slots__</code> 这种形如 <code>__xxx__</code> 的变量或者函数名就要注意，这些在 Python 中是有特殊用途的。</p>
<p><code>__slots__</code> 我们已经知道怎么用了，<code>__len__()</code> 方法我们也知道是为了能让 class 作用于 <code>len()</code> 函数。</p>
<p>除此之外，Python 的 class 中还有许多这样有特殊用途的函数，可以帮助我们定制类。</p>
<h2 id="str" tabindex="-1"> <code>__str__</code></h2>
<p>我们先定义一个 Student 类，打印一个实例:</p>
<div><pre><code><span>>></span><span>></span> <span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> name<span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>         self<span>.</span>name <span>=</span> name
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> <span>print</span><span>(</span>Student<span>(</span><span>'Michael'</span><span>)</span><span>)</span>
<span>&lt;</span>__main__<span>.</span>Student <span>object</span> at <span>0x109afb190</span><span>></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>打印出一堆 <code>&lt;__main__.Student object at 0x109afb190&gt;</code>，不好看。</p>
<p>怎么才能打印得好看呢？只需要定义好 <code>__str__()</code> 方法，返回一个好看的字符串就可以了:</p>
<div><pre><code><span>>></span><span>></span> <span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> name<span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>         self<span>.</span>name <span>=</span> name
<span>.</span><span>.</span><span>.</span>     <span>def</span> <span>__str__</span><span>(</span>self<span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>         <span>return</span> <span>'Student object (name: %s)'</span> <span>%</span> self<span>.</span>name
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> <span>print</span><span>(</span>Student<span>(</span><span>'Michael'</span><span>)</span><span>)</span>
Student <span>object</span> <span>(</span>name<span>:</span> Michael<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>这样打印出来的实例，不但好看，而且容易看出实例内部重要的数据。</p>
<p>但是细心的朋友会发现直接敲变量不用 <code>print</code>，打印出来的实例还是不好看:</p>
<div><pre><code><span>>></span><span>></span> s <span>=</span> Student<span>(</span><span>'Michael'</span><span>)</span>
<span>>></span><span>></span> s
<span>&lt;</span>__main__<span>.</span>Student <span>object</span> at <span>0x109afb310</span><span>></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>这是因为直接显示变量调用的不是 <code>__str__()</code>，而是 <code>__repr__()</code>，两者的区别是 <code>__str__()</code> 返回用户看到的字符串，而 <code>__repr__()</code> 返回程序开发者看到的字符串，也就是说，<code>__repr__()</code> 是为调试服务的。</p>
<p>解决办法是再定义一个 <code>__repr__()</code>。但是通常 <code>__str__()</code> 和 <code>__repr__()</code> 代码都是一样的，所以，有个偷懒的写法:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> name<span>)</span><span>:</span>
        self<span>.</span>name <span>=</span> name
    <span>def</span> <span>__str__</span><span>(</span>self<span>)</span><span>:</span>
        <span>return</span> <span>'Student object (name=%s)'</span> <span>%</span> self<span>.</span>name
    __repr__ <span>=</span> __str__
__iter__
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>如果一个类想被用于 <code>for ... in</code> 循环，类似 list 或 tuple 那样，就必须实现一个 <code>__iter__()</code> 方法，该方法返回一个迭代对象，然后，Python 的 for 循环就会不断调用该迭代对象的 <code>__next__()</code> 方法拿到循环的下一个值，直到遇到 <code>StopIteration</code> 错误时退出循环。</p>
<p>我们以斐波那契数列为例，写一个 <code>Fib</code> 类，可以作用于 for 循环:</p>
<div><pre><code><span>class</span> <span>Fib</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>def</span> <span>__init__</span><span>(</span>self<span>)</span><span>:</span>
        self<span>.</span>a<span>,</span> self<span>.</span>b <span>=</span> <span>0</span><span>,</span> <span>1</span> <span># 初始化两个计数器a，b</span>

    <span>def</span> <span>__iter__</span><span>(</span>self<span>)</span><span>:</span>
        <span>return</span> self <span># 实例本身就是迭代对象，故返回自己</span>

    <span>def</span> <span>__next__</span><span>(</span>self<span>)</span><span>:</span>
        self<span>.</span>a<span>,</span> self<span>.</span>b <span>=</span> self<span>.</span>b<span>,</span> self<span>.</span>a <span>+</span> self<span>.</span>b <span># 计算下一个值</span>
        <span>if</span> self<span>.</span>a <span>></span> <span>100000</span><span>:</span> <span># 退出循环的条件</span>
            <span>raise</span> StopIteration<span>(</span><span>)</span>
        <span>return</span> self<span>.</span>a <span># 返回下一个值</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><p>现在，试试把 <code>Fib</code> 实例作用于 for 循环:</p>
<div><pre><code><span>>></span><span>></span> <span>for</span> n <span>in</span> Fib<span>(</span><span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     <span>print</span><span>(</span>n<span>)</span>
<span>.</span><span>.</span><span>.</span>
<span>1</span>
<span>1</span>
<span>2</span>
<span>3</span>
<span>5</span>
<span>.</span><span>.</span><span>.</span>
<span>46368</span>
<span>75025</span>
__getitem__
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><p><code>Fib</code> 实例虽然能作用于 for 循环，看起来和 <code>list</code> 有点像，但是，把它当成 <code>list</code> 来使用还是不行，比如，取第 5 个元素:</p>
<div><pre><code><span>>></span><span>></span> Fib<span>(</span><span>)</span><span>[</span><span>5</span><span>]</span>
Traceback <span>(</span>most recent call last<span>)</span><span>:</span>
  File <span>"&lt;stdin>"</span><span>,</span> line <span>1</span><span>,</span> <span>in</span> <span>&lt;</span>module<span>></span>
TypeError<span>:</span> <span>'Fib'</span> <span>object</span> does <span>not</span> support indexing
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>要表现得像 list 那样按照下标取出元素，需要实现 <code>__getitem__()</code> 方法:</p>
<div><pre><code><span>class</span> <span>Fib</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>def</span> <span>__getitem__</span><span>(</span>self<span>,</span> n<span>)</span><span>:</span>
        a<span>,</span> b <span>=</span> <span>1</span><span>,</span> <span>1</span>
        <span>for</span> x <span>in</span> <span>range</span><span>(</span>n<span>)</span><span>:</span>
            a<span>,</span> b <span>=</span> b<span>,</span> a <span>+</span> b
        <span>return</span> a
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>现在，就可以按下标访问数列的任意一项了:</p>
<div><pre><code><span>>></span><span>></span> f <span>=</span> Fib<span>(</span><span>)</span>
<span>>></span><span>></span> f<span>[</span><span>0</span><span>]</span>
<span>1</span>
<span>>></span><span>></span> f<span>[</span><span>1</span><span>]</span>
<span>1</span>
<span>>></span><span>></span> f<span>[</span><span>2</span><span>]</span>
<span>2</span>
<span>>></span><span>></span> f<span>[</span><span>3</span><span>]</span>
<span>3</span>
<span>>></span><span>></span> f<span>[</span><span>10</span><span>]</span>
<span>89</span>
<span>>></span><span>></span> f<span>[</span><span>100</span><span>]</span>
<span>573147844013817084101</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><p>但是 <code>list</code> 有个神奇的切片方法:</p>
<div><pre><code><span>>></span><span>></span> <span>list</span><span>(</span><span>range</span><span>(</span><span>100</span><span>)</span><span>)</span><span>[</span><span>5</span><span>:</span><span>10</span><span>]</span>
<span>[</span><span>5</span><span>,</span> <span>6</span><span>,</span> <span>7</span><span>,</span> <span>8</span><span>,</span> <span>9</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>对于 Fib 却报错。原因是 <code>__getitem__()</code> 传入的参数可能是一个 <code>int</code>，也可能是一个切片对象 <code>slice</code>，所以要做判断:</p>
<div><pre><code><span>class</span> <span>Fib</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>def</span> <span>__getitem__</span><span>(</span>self<span>,</span> n<span>)</span><span>:</span>
        <span>if</span> <span>isinstance</span><span>(</span>n<span>,</span> <span>int</span><span>)</span><span>:</span> <span># n是索引</span>
            a<span>,</span> b <span>=</span> <span>1</span><span>,</span> <span>1</span>
            <span>for</span> x <span>in</span> <span>range</span><span>(</span>n<span>)</span><span>:</span>
                a<span>,</span> b <span>=</span> b<span>,</span> a <span>+</span> b
            <span>return</span> a
        <span>if</span> <span>isinstance</span><span>(</span>n<span>,</span> <span>slice</span><span>)</span><span>:</span> <span># n是切片</span>
            start <span>=</span> n<span>.</span>start
            stop <span>=</span> n<span>.</span>stop
            <span>if</span> start <span>is</span> <span>None</span><span>:</span>
                start <span>=</span> <span>0</span>
            a<span>,</span> b <span>=</span> <span>1</span><span>,</span> <span>1</span>
            L <span>=</span> <span>[</span><span>]</span>
            <span>for</span> x <span>in</span> <span>range</span><span>(</span>stop<span>)</span><span>:</span>
                <span>if</span> x <span>>=</span> start<span>:</span>
                    L<span>.</span>append<span>(</span>a<span>)</span>
                a<span>,</span> b <span>=</span> b<span>,</span> a <span>+</span> b
            <span>return</span> L
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><p>现在试试 <code>Fib</code> 的切片:</p>
<div><pre><code><span>>></span><span>></span> f <span>=</span> Fib<span>(</span><span>)</span>
<span>>></span><span>></span> f<span>[</span><span>0</span><span>:</span><span>5</span><span>]</span>
<span>[</span><span>1</span><span>,</span> <span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>5</span><span>]</span>
<span>>></span><span>></span> f<span>[</span><span>:</span><span>10</span><span>]</span>
<span>[</span><span>1</span><span>,</span> <span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>5</span><span>,</span> <span>8</span><span>,</span> <span>13</span><span>,</span> <span>21</span><span>,</span> <span>34</span><span>,</span> <span>55</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>但是没有对 step 参数作处理:</p>
<div><pre><code><span>>></span><span>></span> f<span>[</span><span>:</span><span>10</span><span>:</span><span>2</span><span>]</span>
<span>[</span><span>1</span><span>,</span> <span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>5</span><span>,</span> <span>8</span><span>,</span> <span>13</span><span>,</span> <span>21</span><span>,</span> <span>34</span><span>,</span> <span>55</span><span>,</span> <span>89</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>也没有对负数作处理，所以，要正确实现一个 <code>__getitem__()</code> 还是有很多工作要做的。</p>
<p>此外，如果把对象看成 dict，<code>__getitem__()</code> 的参数也可能是一个可以作 <code>key</code> 的 <code>object</code>，例如 <code>str</code>。</p>
<p>与之对应的是 <code>__setitem__()</code> 方法，把对象视作 <code>list</code> 或 <code>dict</code> 来对集合赋值。最后，还有一个 <code>__delitem__()</code> 方法，用于删除某个元素。</p>
<p>总之，通过上面的方法，我们自己定义的类表现得和 Python 自带的 <code>list</code>、<code>tuple</code>、<code>dict</code> 没什么区别，这完全归功于动态语言的“鸭子类型”，不需要强制继承某个接口。</p>
<h2 id="getattr" tabindex="-1"> <code>__getattr__</code></h2>
<p>正常情况下，当我们调用类的方法或属性时，如果不存在，就会报错。比如定义 <code>Student</code> 类:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>

    <span>def</span> <span>__init__</span><span>(</span>self<span>)</span><span>:</span>
        self<span>.</span>name <span>=</span> <span>'Michael'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>调用 <code>name</code> 属性，没问题，但是，调用不存在的 <code>score</code> 属性，就有问题了:</p>
<div><pre><code><span>>></span><span>></span> s <span>=</span> Student<span>(</span><span>)</span>
<span>>></span><span>></span> <span>print</span><span>(</span>s<span>.</span>name<span>)</span>
Michael
<span>>></span><span>></span> <span>print</span><span>(</span>s<span>.</span>score<span>)</span>
Traceback <span>(</span>most recent call last<span>)</span><span>:</span>
  <span>.</span><span>.</span><span>.</span>
AttributeError<span>:</span> <span>'Student'</span> <span>object</span> has no attribute <span>'score'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>错误信息很清楚地告诉我们，没有找到 <code>score</code> 这个 <code>attribute</code>。</p>
<p>要避免这个错误，除了可以加上一个 <code>score</code> 属性外，Python 还有另一个机制，那就是写一个 <code>__getattr__()</code> 方法，动态返回一个属性。修改如下:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>

    <span>def</span> <span>__init__</span><span>(</span>self<span>)</span><span>:</span>
        self<span>.</span>name <span>=</span> <span>'Michael'</span>

    <span>def</span> <span>__getattr__</span><span>(</span>self<span>,</span> attr<span>)</span><span>:</span>
        <span>if</span> attr<span>==</span><span>'score'</span><span>:</span>
            <span>return</span> <span>99</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>当调用不存在的属性时，比如 <code>score</code>，Python 解释器会试图调用 <code>__getattr__(self, 'score')</code> 来尝试获得属性，这样，我们就有机会返回 <code>score</code> 的值:</p>
<div><pre><code><span>>></span><span>></span> s <span>=</span> Student<span>(</span><span>)</span>
<span>>></span><span>></span> s<span>.</span>name
<span>'Michael'</span>
<span>>></span><span>></span> s<span>.</span>score
<span>99</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>返回函数也是完全可以的:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>

    <span>def</span> <span>__getattr__</span><span>(</span>self<span>,</span> attr<span>)</span><span>:</span>
        <span>if</span> attr<span>==</span><span>'age'</span><span>:</span>
            <span>return</span> <span>lambda</span><span>:</span> <span>25</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>只是调用方式要变为:</p>
<div><pre><code><span>>></span><span>></span> s<span>.</span>age<span>(</span><span>)</span>
<span>25</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>注意，只有在没有找到属性的情况下，才调用 <code>__getattr__</code>，已有的属性，比如 <code>name</code>，不会在 <code>__getattr__</code> 中查找。</p>
<p>此外，注意到任意调用如 <code>s.abc</code> 都会返回 <code>None</code>，这是因为我们定义的 <code>__getattr__</code> 默认返回就是 <code>None</code>。要让 class 只响应特定的几个属性，我们就要按照约定，抛出 <code>AttributeError</code> 的错误:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>

    <span>def</span> <span>__getattr__</span><span>(</span>self<span>,</span> attr<span>)</span><span>:</span>
        <span>if</span> attr<span>==</span><span>'age'</span><span>:</span>
            <span>return</span> <span>lambda</span><span>:</span> <span>25</span>
        <span>raise</span> AttributeError<span>(</span><span>'\'Student\' object has no attribute \'%s\''</span> <span>%</span> attr<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>这实际上可以把一个类的所有属性和方法调用全部动态化处理了，不需要任何特殊手段。</p>
<p>这种完全动态调用的特性有什么实际作用呢？作用就是，可以针对完全动态的情况作调用。</p>
<p>举个例子:</p>
<p>现在很多网站都搞 REST API，比如新浪微博、豆瓣啥的，调用 API 的 URL 类似:</p>
<ul>
<li><code>http://api.server/user/friends</code></li>
<li><code>http://api.server/user/timeline/list</code></li>
</ul>
<p>如果要写 SDK，给每个 URL 对应的 API 都写一个方法，那得累死，而且，API 一旦改动，SDK 也要改。</p>
<p>利用完全动态的 <code>__getattr__</code>，我们可以写出一个链式调用:</p>
<div><pre><code><span>class</span> <span>Chain</span><span>(</span><span>object</span><span>)</span><span>:</span>

    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> path<span>=</span><span>''</span><span>)</span><span>:</span>
        self<span>.</span>_path <span>=</span> path

    <span>def</span> <span>__getattr__</span><span>(</span>self<span>,</span> path<span>)</span><span>:</span>
        <span>return</span> Chain<span>(</span><span>'%s/%s'</span> <span>%</span> <span>(</span>self<span>.</span>_path<span>,</span> path<span>)</span><span>)</span>

    <span>def</span> <span>__str__</span><span>(</span>self<span>)</span><span>:</span>
        <span>return</span> self<span>.</span>_path

    __repr__ <span>=</span> __str__
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><p>试试:</p>
<div><pre><code><span>>></span><span>></span> Chain<span>(</span><span>)</span><span>.</span>status<span>.</span>user<span>.</span>timeline<span>.</span><span>list</span>
<span>'/status/user/timeline/list'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>这样，无论 API 怎么变，SDK 都可以根据 URL 实现完全动态的调用，而且，不随 API 的增加而改变!</p>
<p>还有些 REST API 会把参数放到 URL 中，比如 GitHub 的 API:</p>
<div><pre><code>GET <span>/</span>users<span>/</span><span>:</span>user<span>/</span>repos
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>调用时，需要把 <code>:user</code> 替换为实际用户名。如果我们能写出这样的链式调用:</p>
<div><pre><code>Chain<span>(</span><span>)</span><span>.</span>users<span>(</span><span>'michael'</span><span>)</span><span>.</span>repos
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>就可以非常方便地调用 API 了。有兴趣的童鞋可以试试写出来。</p>
<h2 id="call" tabindex="-1"> <code>__call__</code></h2>
<p>一个对象实例可以有自己的属性和方法，当我们调用实例方法时，我们用 <code>instance.method()</code> 来调用。能不能直接在实例本身上调用呢？在 Python 中，答案是肯定的。</p>
<p>任何类，只需要定义一个 <code>__call__()</code> 方法，就可以直接对实例进行调用。请看示例:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> name<span>)</span><span>:</span>
        self<span>.</span>name <span>=</span> name

    <span>def</span> <span>__call__</span><span>(</span>self<span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'My name is %s.'</span> <span>%</span> self<span>.</span>name<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>调用方式如下:</p>
<div><pre><code><span>>></span><span>></span> s <span>=</span> Student<span>(</span><span>'Michael'</span><span>)</span>
<span>>></span><span>></span> s<span>(</span><span>)</span> <span># self参数不要传入</span>
My name <span>is</span> Michael<span>.</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p><code>__call__()</code> 还可以定义参数。对实例进行直接调用就好比对一个函数进行调用一样，所以您完全可以把对象看成函数，把函数看成对象，因为这两者之间本来就没啥根本的区别。</p>
<p>如果您把对象看成函数，那么函数本身其实也可以在运行期动态创建出来，因为类的实例都是运行期创建出来的，这么一来，我们就模糊了对象和函数的界限。</p>
<p>那么，怎么判断一个变量是对象还是函数呢？其实，更多的时候，我们需要判断一个对象是否能被调用，能被调用的对象就是一个 Callable 对象，比如函数和我们上面定义的带有 <code>__call__()</code> 的类实例:</p>
<div><pre><code><span>>></span><span>></span> <span>callable</span><span>(</span>Student<span>(</span><span>)</span><span>)</span>
<span>True</span>
<span>>></span><span>></span> <span>callable</span><span>(</span><span>max</span><span>)</span>
<span>True</span>
<span>>></span><span>></span> <span>callable</span><span>(</span><span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>]</span><span>)</span>
<span>False</span>
<span>>></span><span>></span> <span>callable</span><span>(</span><span>None</span><span>)</span>
<span>False</span>
<span>>></span><span>></span> <span>callable</span><span>(</span><span>'str'</span><span>)</span>
<span>False</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>通过 <code>callable()</code> 函数，我们就可以判断一个对象是否是“可调用”对象。</p>
<div><p>相关信息</p>
<p>更多可定制的方法，请参考 <a href="http://docs.python.org/3/reference/datamodel.html#special-method-names" target="_blank" rel="noopener noreferrer">Python 的官方文档<ExternalLinkIcon/></a>。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>继承和多态</title>
      <link>https://mrhope.site/code/language/python/oop/extend.html</link>
      <guid>https://mrhope.site/code/language/python/oop/extend.html</guid>
      <source url="https://mrhope.site/rss.xml">继承和多态</source>
      <category>Python</category>
      <pubDate>Sun, 28 Mar 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>在 OOP 程序设计中，当我们定义一个 class 的时候，可以从某个现有的 class 继承，新的 class 称为子类 (Subclass) ，而被继承的 class 称为基类、父类或超类 (Base class、Super class) 。</p>
<p>比如，我们已经编写了一个名为 Animal 的 class，有一个 <code>run()</code> 方法可以直接打印:</p>
<div><pre><code><span>class</span> <span>Animal</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>def</span> <span>run</span><span>(</span>self<span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'Animal is running...'</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>当我们需要编写 Dog 和 Cat 类时，就可以直接从 Animal 类继承:</p>
<div><pre><code><span>class</span> <span>Dog</span><span>(</span>Animal<span>)</span><span>:</span>
    <span>pass</span>

<span>class</span> <span>Cat</span><span>(</span>Animal<span>)</span><span>:</span>
    <span>pass</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>对于 Dog 来说，Animal 就是它的父类，对于 Animal 来说，Dog 就是它的子类。Cat 和 Dog 类似。</p>
<p>继承有什么好处？最大的好处是子类获得了父类的全部功能。由于 Animial 实现了 <code>run()</code> 方法，因此，Dog 和 Cat 作为它的子类，什么事也没干，就自动拥有了 <code>run()</code> 方法:</p>
<div><pre><code>dog <span>=</span> Dog<span>(</span><span>)</span>
dog<span>.</span>run<span>(</span><span>)</span>

cat <span>=</span> Cat<span>(</span><span>)</span>
cat<span>.</span>run<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>运行结果如下:</p>
<div><pre><code>Animal is running...
Animal is running...
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>当然，也可以对子类增加一些方法，比如 Dog 类:</p>
<div><pre><code><span>class</span> <span>Dog</span><span>(</span>Animal<span>)</span><span>:</span>

    <span>def</span> <span>run</span><span>(</span>self<span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'Dog is running...'</span><span>)</span>

    <span>def</span> <span>eat</span><span>(</span>self<span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'Eating meat...'</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>继承的第二个好处需要我们对代码做一点改进。您看到了，无论是 Dog 还是 Cat，它们 <code>run()</code> 的时候，显示的都是 <code>Animal is running...</code>，符合逻辑的做法是分别显示 <code>Dog is running...</code> 和 <code>Cat is running...</code>，因此，对 Dog 和 Cat 类改进如下:</p>
<div><pre><code><span>class</span> <span>Dog</span><span>(</span>Animal<span>)</span><span>:</span>

    <span>def</span> <span>run</span><span>(</span>self<span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'Dog is running...'</span><span>)</span>

<span>class</span> <span>Cat</span><span>(</span>Animal<span>)</span><span>:</span>

    <span>def</span> <span>run</span><span>(</span>self<span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'Cat is running...'</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>再次运行，结果如下:</p>
<div><pre><code>Dog is running...
Cat is running...
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>当子类和父类都存在相同的 <code>run()</code> 方法时，我们说，子类的 <code>run()</code> 覆盖了父类的 <code>run()</code>，在代码运行的时候，总是会调用子类的 <code>run()</code>。这样，我们就获得了继承的另一个好处: 多态。</p>
<p>要理解什么是多态，我们首先要对数据类型再作一点说明。当我们定义一个 class 的时候，我们实际上就定义了一种数据类型。我们定义的数据类型和 Python 自带的数据类型，比如 <code>str</code>、<code>list</code>、<code>dict</code> 没什么两样:</p>
<div><pre><code>a <span>=</span> <span>list</span><span>(</span><span>)</span> <span># a是list类型</span>
b <span>=</span> Animal<span>(</span><span>)</span> <span># b是Animal类型</span>
c <span>=</span> Dog<span>(</span><span>)</span> <span># c是Dog类型</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>判断一个变量是否是某个类型可以用 <code>isinstance()</code> 判断:</p>
<div><pre><code><span>>></span><span>></span> <span>isinstance</span><span>(</span>a<span>,</span> <span>list</span><span>)</span>
<span>True</span>
<span>>></span><span>></span> <span>isinstance</span><span>(</span>b<span>,</span> Animal<span>)</span>
<span>True</span>
<span>>></span><span>></span> <span>isinstance</span><span>(</span>c<span>,</span> Dog<span>)</span>
<span>True</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>看来 a、b、c 确实对应着 <code>list</code>、<code>Animal</code>、<code>Dog</code> 这 3 种类型。</p>
<p>但是等等，试试:</p>
<div><pre><code><span>>></span><span>></span> <span>isinstance</span><span>(</span>c<span>,</span> Animal<span>)</span>
<span>True</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>看来 c 不仅仅是 <code>Dog</code>，c 还是 <code>Animal</code>!</p>
<p>不过仔细想想，这是有道理的，因为 Dog 是从 Animal 继承下来的，当我们创建了一个 Dog 的实例 c 时，我们认为 c 的数据类型是 Dog 没错，但 c 同时也是 Animal 也没错，Dog 本来就是 Animal 的一种!</p>
<p>所以，在继承关系中，如果一个实例的数据类型是某个子类，那它的数据类型也可以被看做是父类。但是，反过来就不行:</p>
<div><pre><code><span>>></span><span>></span> b <span>=</span> Animal<span>(</span><span>)</span>
<span>>></span><span>></span> <span>isinstance</span><span>(</span>b<span>,</span> Dog<span>)</span>
<span>False</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>Dog 可以看成 Animal，但 Animal 不可以看成 Dog。</p>
<p>要理解多态的好处，我们还需要再编写一个函数，这个函数接受一个 Animal 类型的变量:</p>
<div><pre><code><span>def</span> <span>run_twice</span><span>(</span>animal<span>)</span><span>:</span>
    animal<span>.</span>run<span>(</span><span>)</span>
    animal<span>.</span>run<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>当我们传入 Animal 的实例时，<code>run_twice()</code> 就打印出:</p>
<div><pre><code><span>>></span><span>></span> run_twice<span>(</span>Animal<span>(</span><span>))</span>
Animal is running<span>..</span>.
Animal is running<span>..</span>.
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>当我们传入 Dog 的实例时，<code>run_twice()</code> 就打印出:</p>
<div><pre><code><span>>></span><span>></span> run_twice<span>(</span>Dog<span>(</span><span>))</span>
Dog is running<span>..</span>.
Dog is running<span>..</span>.
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>当我们传入 Cat 的实例时，<code>run_twice()</code> 就打印出:</p>
<div><pre><code><span>>></span><span>></span> run_twice<span>(</span>Cat<span>(</span><span>))</span>
Cat is running<span>..</span>.
Cat is running<span>..</span>.
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>看上去没啥意思，但是仔细想想，现在，如果我们再定义一个 <code>Tortoise</code> 类型，也从 <code>Animal</code> 派生:</p>
<div><pre><code><span>class</span> <span>Tortoise</span><span>(</span>Animal<span>)</span><span>:</span>
    <span>def</span> <span>run</span><span>(</span>self<span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'Tortoise is running slowly...'</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>当我们调用 <code>run_twice()</code> 时，传入 <code>Tortoise</code> 的实例:</p>
<div><pre><code><span>>></span><span>></span> run_twice<span>(</span>Tortoise<span>(</span><span>))</span>
Tortoise is running slowly<span>..</span>.
Tortoise is running slowly<span>..</span>.
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>您会发现，新增一个 Animal 的子类，不必对 <code>run_twice()</code> 做任何修改，实际上，任何依赖 Animal 作为参数的函数或者方法都可以不加修改地正常运行，原因就在于多态。</p>
<p>多态的好处就是，当我们需要传入 Dog、Cat、Tortoise……时，我们只需要接收 Animal 类型就可以了，因为 Dog、Cat、Tortoise……都是 Animal 类型，然后，按照 Animal 类型进行操作即可。由于 Animal 类型有 <code>run()</code> 方法，因此，传入的任意类型，只要是 Animal 类或者子类，就会自动调用实际类型的 <code>run()</code> 方法，这就是多态的意思:</p>
<p>对于一个变量，我们只需要知道它是 Animal 类型，无需确切地知道它的子类型，就可以放心地调用 <code>run()</code> 方法，而具体调用的 <code>run()</code> 方法是作用在 Animal、Dog、Cat 还是 Tortoise 对象上，由运行时该对象的确切类型决定，这就是多态真正的威力: 调用方只管调用，不管细节，而当我们新增一种 Animal 的子类时，只要确保 <code>run()</code> 方法编写正确，不用管原来的代码是如何调用的。这就是著名的“开闭”原则:</p>
<p>对扩展开放: 允许新增 Animal 子类；</p>
<p>对修改封闭: 不需要修改依赖 Animal 类型的 <code>run_twice()</code> 等函数。</p>
<p>继承还可以一级一级地继承下来，就好比从爷爷到爸爸、再到儿子这样的关系。而任何类，最终都可以追溯到根类 object，这些继承关系看上去就像一颗倒着的树。比如如下的继承树:</p>
<div><pre><code>                ┌───────────────┐
                │    object     │
                └───────────────┘
                        │
           ┌────────────┴────────────┐
           │                         │
           ▼                         ▼
    ┌─────────────┐           ┌─────────────┐
    │   Animal    │           │    Plant    │
    └─────────────┘           └─────────────┘
           │                         │
     ┌─────┴──────┐            ┌─────┴──────┐
     │            │            │            │
     ▼            ▼            ▼            ▼
┌─────────┐  ┌─────────┐  ┌─────────┐  ┌─────────┐
│   Dog   │  │   Cat   │  │  Tree   │  │ Flower  │
└─────────┘  └─────────┘  └─────────┘  └─────────┘
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><h2 id="静态语言-vs-动态语言" tabindex="-1"> 静态语言 vs 动态语言</h2>
<p>对于静态语言 (例如 Java) 来说，如果需要传入 Animal 类型，则传入的对象必须是 Animal 类型或者它的子类，否则，将无法调用 <code>run()</code> 方法。</p>
<p>对于 Python 这样的动态语言来说，则不一定需要传入 Animal 类型。我们只需要保证传入的对象有一个 <code>run()</code> 方法就可以了:</p>
<div><pre><code><span>class</span> <span>Timer</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>def</span> <span>run</span><span>(</span>self<span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'Start...'</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>这就是动态语言的“鸭子类型”，它并不要求严格的继承体系，一个对象只要“看起来像鸭子，走起路来像鸭子”，那它就可以被看做是鸭子。</p>
<p>Python 的 “file-like object“ 就是一种鸭子类型。对真正的文件对象，它有一个 <code>read()</code> 方法，返回其内容。但是，许多对象，只要有 <code>read()</code> 方法，都被视为 “file-like object“。许多函数接收的参数就是 “file-like object“，您不一定要传入真正的文件对象，完全可以传入任何实现了 <code>read()</code> 方法的对象。</p>
<h2 id="多重继承" tabindex="-1"> 多重继承</h2>
<p>继承是面向对象编程的一个重要的方式，因为通过继承，子类就可以扩展父类的功能。</p>
<p>回忆一下 <code>Animal</code> 类层次的设计，假设我们要实现以下 4 种动物:</p>
<ul>
<li>Dog - 狗狗；</li>
<li>Bat - 蝙蝠；</li>
<li>Parrot - 鹦鹉；</li>
<li>Ostrich - 鸵鸟。</li>
</ul>
<p>如果按照哺乳动物和鸟类归类，我们可以设计出这样的类的层次:</p>
<div><pre><code>                ┌───────────────┐
                │    Animal     │
                └───────────────┘
                        │
           ┌────────────┴────────────┐
           │                         │
           ▼                         ▼
    ┌─────────────┐           ┌─────────────┐
    │   Mammal    │           │    Bird     │
    └─────────────┘           └─────────────┘
           │                         │
     ┌─────┴──────┐            ┌─────┴──────┐
     │            │            │            │
     ▼            ▼            ▼            ▼
┌─────────┐  ┌─────────┐  ┌─────────┐  ┌─────────┐
│   Dog   │  │   Bat   │  │ Parrot  │  │ Ostrich │
└─────────┘  └─────────┘  └─────────┘  └─────────┘
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><p>但是如果按照“能跑”和“能飞”来归类，我们就应该设计出这样的类的层次:</p>
<div><pre><code>                ┌───────────────┐
                │    Animal     │
                └───────────────┘
                        │
           ┌────────────┴────────────┐
           │                         │
           ▼                         ▼
    ┌─────────────┐           ┌─────────────┐
    │  Runnable   │           │   Flyable   │
    └─────────────┘           └─────────────┘
           │                         │
     ┌─────┴──────┐            ┌─────┴──────┐
     │            │            │            │
     ▼            ▼            ▼            ▼
┌─────────┐  ┌─────────┐  ┌─────────┐  ┌─────────┐
│   Dog   │  │ Ostrich │  │ Parrot  │  │   Bat   │
└─────────┘  └─────────┘  └─────────┘  └─────────┘
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><p>如果要把上面的两种分类都包含进来，我们就得设计更多的层次:</p>
<ul>
<li>哺乳类: 能跑的哺乳类，能飞的哺乳类；</li>
<li>鸟类: 能跑的鸟类，能飞的鸟类。</li>
</ul>
<p>这么一来，类的层次就复杂了:</p>
<div><pre><code>                ┌───────────────┐
                │    Animal     │
                └───────────────┘
                        │
           ┌────────────┴────────────┐
           │                         │
           ▼                         ▼
    ┌─────────────┐           ┌─────────────┐
    │   Mammal    │           │    Bird     │
    └─────────────┘           └─────────────┘
           │                         │
     ┌─────┴──────┐            ┌─────┴──────┐
     │            │            │            │
     ▼            ▼            ▼            ▼
┌─────────┐  ┌─────────┐  ┌─────────┐  ┌─────────┐
│  MRun   │  │  MFly   │  │  BRun   │  │  BFly   │
└─────────┘  └─────────┘  └─────────┘  └─────────┘
     │            │            │            │
     │            │            │            │
     ▼            ▼            ▼            ▼
┌─────────┐  ┌─────────┐  ┌─────────┐  ┌─────────┐
│   Dog   │  │   Bat   │  │ Ostrich │  │ Parrot  │
└─────────┘  └─────────┘  └─────────┘  └─────────┘
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div><p>如果要再增加“宠物类”和“非宠物类”，这么搞下去，类的数量会呈指数增长，很明显这样设计是不行的。</p>
<p>正确的做法是采用多重继承。首先，主要的类层次仍按照哺乳类和鸟类设计:</p>
<div><pre><code><span>class</span> <span>Animal</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>pass</span>

<span># 大类:</span>
<span>class</span> <span>Mammal</span><span>(</span>Animal<span>)</span><span>:</span>
    <span>pass</span>

<span>class</span> <span>Bird</span><span>(</span>Animal<span>)</span><span>:</span>
    <span>pass</span>

<span># 各种动物:</span>
<span>class</span> <span>Dog</span><span>(</span>Mammal<span>)</span><span>:</span>
    <span>pass</span>

<span>class</span> <span>Bat</span><span>(</span>Mammal<span>)</span><span>:</span>
    <span>pass</span>

<span>class</span> <span>Parrot</span><span>(</span>Bird<span>)</span><span>:</span>
    <span>pass</span>

<span>class</span> <span>Ostrich</span><span>(</span>Bird<span>)</span><span>:</span>
    <span>pass</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div><p>现在，我们要给动物再加上 <code>Runnable</code> 和 <code>Flyable</code> 的功能，只需要先定义好 <code>Runnable</code> 和 <code>Flyable</code> 的类:</p>
<div><pre><code><span>class</span> <span>Runnable</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>def</span> <span>run</span><span>(</span>self<span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'Running...'</span><span>)</span>

<span>class</span> <span>Flyable</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>def</span> <span>fly</span><span>(</span>self<span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'Flying...'</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>对于需要 <code>Runnable</code> 功能的动物，就多继承一个 <code>Runnable</code>，例如 <code>Dog</code>:</p>
<div><pre><code><span>class</span> <span>Dog</span><span>(</span>Mammal<span>,</span> Runnable<span>)</span><span>:</span>
    <span>pass</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>对于需要 <code>Flyable</code> 功能的动物，就多继承一个 <code>Flyable</code>，例如 <code>Bat</code>:</p>
<div><pre><code><span>class</span> <span>Bat</span><span>(</span>Mammal<span>,</span> Flyable<span>)</span><span>:</span>
    <span>pass</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>通过多重继承，一个子类就可以同时获得多个父类的所有功能。</p>
<h2 id="mixin" tabindex="-1"> MixIn</h2>
<p>在设计类的继承关系时，通常，主线都是单一继承下来的，例如，<code>Ostrich</code> 继承自 <code>Bird</code>。但是，如果需要“混入”额外的功能，通过多重继承就可以实现，比如，让 <code>Ostrich</code> 除了继承自 <code>Bird</code> 外，再同时继承 <code>Runnable</code>。这种设计通常称之为 MixIn。</p>
<p>为了更好地看出继承关系，我们把 <code>Runnable</code> 和 <code>Flyable</code> 改为 <code>RunnableMixIn</code> 和 <code>FlyableMixIn</code>。类似的，您还可以定义出肉食动物<code>CarnivorousMixIn</code> 和植食动物 <code>HerbivoresMixIn</code>，让某个动物同时拥有好几个 MixIn:</p>
<div><pre><code><span>class</span> <span>Dog</span><span>(</span>Mammal<span>,</span> RunnableMixIn<span>,</span> CarnivorousMixIn<span>)</span><span>:</span>
    <span>pass</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>MixIn 的目的就是给一个类增加多个功能，这样，在设计类的时候，我们优先考虑通过多重继承来组合多个 MixIn 的功能，而不是设计多层次的复杂的继承关系。</p>
<p>Python 自带的很多库也使用了 MixIn。举个例子，Python 自带了 TCPServer 和 UDPServer 这两类网络服务，而要同时服务多个用户就必须使用多进程或多线程模型，这两种模型由 ForkingMixIn 和 ThreadingMixIn 提供。通过组合，我们就可以创造出合适的服务来。</p>
<p>比如，编写一个多进程模式的 TCP 服务，定义如下:</p>
<div><pre><code><span>class</span> <span>MyTCPServer</span><span>(</span>TCPServer<span>,</span> ForkingMixIn<span>)</span><span>:</span>
    <span>pass</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>编写一个多线程模式的 UDP 服务，定义如下:</p>
<div><pre><code><span>class</span> <span>MyUDPServer</span><span>(</span>UDPServer<span>,</span> ThreadingMixIn<span>)</span><span>:</span>
    <span>pass</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>如果您打算搞一个更先进的协程模型，可以编写一个 CoroutineMixIn:</p>
<div><pre><code><span>class</span> <span>MyTCPServer</span><span>(</span>TCPServer<span>,</span> CoroutineMixIn<span>)</span><span>:</span>
    <span>pass</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>这样一来，我们不需要复杂而庞大的继承链，只要选择组合不同的类的功能，就可以快速构造出所需的子类。</p>
<h2 id="小结" tabindex="-1"> 小结</h2>
<p>继承可以把父类的所有功能都直接拿过来，这样就不必重零做起，子类只需要新增自己特有的方法，也可以把父类不适合的方法覆盖重写。</p>
<p>动态语言的鸭子类型特点决定了继承不像静态语言那样是必须的。</p>
<p>由于 Python 允许使用多重继承，因此，MixIn 就是一种常见的设计。</p>
<p>只允许单一继承的语言 (如 Java) 不能使用 MixIn 的设计。</p>
]]></content:encoded>
    </item>
    <item>
      <title>获取对象信息</title>
      <link>https://mrhope.site/code/language/python/oop/info.html</link>
      <guid>https://mrhope.site/code/language/python/oop/info.html</guid>
      <source url="https://mrhope.site/rss.xml">获取对象信息</source>
      <category>Python</category>
      <pubDate>Sun, 28 Mar 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>当我们拿到一个对象的引用时，如何知道这个对象是什么类型、有哪些方法呢？</p>
<h2 id="使用-type" tabindex="-1"> 使用 <code>type()</code></h2>
<p>首先，我们来判断对象类型，使用 <code>type()</code> 函数:</p>
<p>基本类型都可以用 <code>type()</code> 判断:</p>
<div><pre><code><span>>></span><span>></span> <span>type</span><span>(</span><span>123</span><span>)</span>
<span>&lt;</span><span>class</span> <span>'int'</span><span>></span>
<span>>></span><span>></span> <span>type</span><span>(</span><span>'str'</span><span>)</span>
<span>&lt;</span><span>class</span> <span>'str'</span><span>></span>
<span>>></span><span>></span> <span>type</span><span>(</span><span>None</span><span>)</span>
<span>&lt;</span><span>type</span><span>(</span><span>None</span><span>)</span> <span>'NoneType'</span><span>></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>如果一个变量指向函数或者类，也可以用 <code>type()</code> 判断:</p>
<div><pre><code><span>>></span><span>></span> <span>type</span><span>(</span><span>abs</span><span>)</span>
<span>&lt;</span><span>class</span> <span>'builtin_function_or_method'</span><span>></span>
<span>>></span><span>></span> <span>type</span><span>(</span>a<span>)</span>
<span>&lt;</span><span>class</span> <span>'__main__.Animal'</span><span>></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>但是 <code>type()</code> 函数返回的是什么类型呢？它返回对应的 Class 类型。如果我们要在 if 语句中判断，就需要比较两个变量的 type 类型是否相同:</p>
<div><pre><code><span>>></span><span>></span> <span>type</span><span>(</span><span>123</span><span>)</span><span>==</span><span>type</span><span>(</span><span>456</span><span>)</span>
<span>True</span>
<span>>></span><span>></span> <span>type</span><span>(</span><span>123</span><span>)</span><span>==</span><span>int</span>
<span>True</span>
<span>>></span><span>></span> <span>type</span><span>(</span><span>'abc'</span><span>)</span><span>==</span><span>type</span><span>(</span><span>'123'</span><span>)</span>
<span>True</span>
<span>>></span><span>></span> <span>type</span><span>(</span><span>'abc'</span><span>)</span><span>==</span><span>str</span>
<span>True</span>
<span>>></span><span>></span> <span>type</span><span>(</span><span>'abc'</span><span>)</span><span>==</span><span>type</span><span>(</span><span>123</span><span>)</span>
<span>False</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>判断基本数据类型可以直接写 <code>int</code>，<code>str</code> 等，但如果要判断一个对象是否是函数怎么办？可以使用 <code>types</code> 模块中定义的常量:</p>
<div><pre><code><span>>></span><span>></span> <span>import</span> types
<span>>></span><span>></span> <span>def</span> <span>fn</span><span>(</span><span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     <span>pass</span>
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> <span>type</span><span>(</span>fn<span>)</span><span>==</span>types<span>.</span>FunctionType
<span>True</span>
<span>>></span><span>></span> <span>type</span><span>(</span><span>abs</span><span>)</span><span>==</span>types<span>.</span>BuiltinFunctionType
<span>True</span>
<span>>></span><span>></span> <span>type</span><span>(</span><span>lambda</span> x<span>:</span> x<span>)</span><span>==</span>types<span>.</span>LambdaType
<span>True</span>
<span>>></span><span>></span> <span>type</span><span>(</span><span>(</span>x <span>for</span> x <span>in</span> <span>range</span><span>(</span><span>10</span><span>)</span><span>)</span><span>)</span><span>==</span>types<span>.</span>GeneratorType
<span>True</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><h2 id="使用-isinstance" tabindex="-1"> 使用 <code>isinstance()</code></h2>
<p>对于 class 的继承关系来说，使用 <code>type()</code> 就很不方便。我们要判断 class 的类型，可以使用 <code>isinstance()</code> 函数。</p>
<p>我们回顾上次的例子，如果继承关系是:</p>
<div><pre><code>object -> Animal -> Dog -> Husky
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>那么，<code>isinstance()</code> 就可以告诉我们，一个对象是否是某种类型。先创建 3 种类型的对象:</p>
<div><pre><code><span>>></span><span>></span> a <span>=</span> Animal<span>(</span><span>)</span>
<span>>></span><span>></span> d <span>=</span> Dog<span>(</span><span>)</span>
<span>>></span><span>></span> h <span>=</span> Husky<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>然后，判断:</p>
<div><pre><code><span>>></span><span>></span> <span>isinstance</span><span>(</span>h<span>,</span> Husky<span>)</span>
<span>True</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>没有问题，因为 <code>h</code> 变量指向的就是 <code>Husky</code> 对象。</p>
<p>再判断:</p>
<div><pre><code><span>>></span><span>></span> <span>isinstance</span><span>(</span>h<span>,</span> Dog<span>)</span>
<span>True</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p><code>h</code> 虽然自身是 <code>Husky</code> 类型，但由于 <code>Husky</code> 是从 <code>Dog</code> 继承下来的，所以，<code>h</code> 也还是 <code>Dog</code> 类型。换句话说，<code>isinstance()</code> 判断的是一个对象是否是该类型本身，或者位于该类型的父继承链上。</p>
<p>因此，我们可以确信，<code>h</code> 还是 <code>Animal</code> 类型:</p>
<div><pre><code><span>>></span><span>></span> <span>isinstance</span><span>(</span>h<span>,</span> Animal<span>)</span>
<span>True</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>同理，实际类型是 <code>Dog</code> 的 <code>d</code> 也是 <code>Animal</code> 类型:</p>
<div><pre><code><span>>></span><span>></span> <span>isinstance</span><span>(</span>d<span>,</span> Dog<span>)</span> <span>and</span> <span>isinstance</span><span>(</span>d<span>,</span> Animal<span>)</span>
<span>True</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>但是，<code>d</code> 不是 <code>Husky</code> 类型:</p>
<div><pre><code><span>>></span><span>></span> <span>isinstance</span><span>(</span>d<span>,</span> Husky<span>)</span>
<span>False</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>能用 <code>type()</code> 判断的基本类型也可以用 <code>isinstance()</code> 判断:</p>
<div><pre><code><span>>></span><span>></span> <span>isinstance</span><span>(</span><span>'a'</span><span>,</span> <span>str</span><span>)</span>
<span>True</span>
<span>>></span><span>></span> <span>isinstance</span><span>(</span><span>123</span><span>,</span> <span>int</span><span>)</span>
<span>True</span>
<span>>></span><span>></span> <span>isinstance</span><span>(</span><span>b'a'</span><span>,</span> <span>bytes</span><span>)</span>
<span>True</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>并且还可以判断一个变量是否是某些类型中的一种，比如下面的代码就可以判断是否是 <code>list</code> 或者 <code>tuple</code>:</p>
<div><pre><code><span>>></span><span>></span> <span>isinstance</span><span>(</span><span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>]</span><span>,</span> <span>(</span><span>list</span><span>,</span> <span>tuple</span><span>)</span><span>)</span>
<span>True</span>
<span>>></span><span>></span> <span>isinstance</span><span>(</span><span>(</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>)</span><span>,</span> <span>(</span><span>list</span><span>,</span> <span>tuple</span><span>)</span><span>)</span>
<span>True</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><div><p>提示</p>
<p>总是优先使用 <code>isinstance()</code> 判断类型，可以将指定类型及其子类“一网打尽”。</p>
</div>
<h2 id="使用-dir" tabindex="-1"> 使用 <code>dir()</code></h2>
<p>如果要获得一个对象的所有属性和方法，可以使用 <code>dir()</code> 函数，它返回一个包含字符串的 <code>list</code>，比如，获得一个 <code>str</code> 对象的所有属性和方法:</p>
<div><pre><code><span>>></span><span>></span> <span>dir</span><span>(</span><span>'ABC'</span><span>)</span>
<span>[</span><span>'__add__'</span><span>,</span> <span>'__class__'</span><span>,</span><span>.</span><span>.</span><span>.</span><span>,</span> <span>'__subclasshook__'</span><span>,</span> <span>'capitalize'</span><span>,</span> <span>'casefold'</span><span>,</span><span>.</span><span>.</span><span>.</span><span>,</span> <span>'zfill'</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>类似 <code>__xxx__</code> 的属性和方法在 Python 中都是有特殊用途的，比如 <code>__len__</code> 方法返回长度。在 Python 中，如果您调用 <code>len()</code> 函数试图获取一个对象的长度，实际上，在 len()函数内部，它自动去调用该对象的 <code>__len__()</code> 方法，所以，下面的代码是等价的:</p>
<div><pre><code><span>>></span><span>></span> <span>len</span><span>(</span><span>'ABC'</span><span>)</span>
<span>3</span>
<span>>></span><span>></span> <span>'ABC'</span><span>.</span>__len__<span>(</span><span>)</span>
<span>3</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>我们自己写的类，如果也想用 <code>len(myObj)</code> 的话，就自己写一个 <code>__len__()</code> 方法:</p>
<div><pre><code><span>>></span><span>></span> <span>class</span> <span>MyDog</span><span>(</span><span>object</span><span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     <span>def</span> <span>__len__</span><span>(</span>self<span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>         <span>return</span> <span>100</span>
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> dog <span>=</span> MyDog<span>(</span><span>)</span>
<span>>></span><span>></span> <span>len</span><span>(</span>dog<span>)</span>
<span>100</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>剩下的都是普通属性或方法，比如 <code>lower()</code> 返回小写的字符串:</p>
<div><pre><code><span>>></span><span>></span> <span>'ABC'</span><span>.</span>lower<span>(</span><span>)</span>
<span>'abc'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>仅仅把属性和方法列出来是不够的，配合 <code>getattr()</code>、<code>setattr()</code> 以及 <code>hasattr()</code>，我们可以直接操作一个对象的状态:</p>
<div><pre><code><span>>></span><span>></span> <span>class</span> <span>MyObject</span><span>(</span><span>object</span><span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     <span>def</span> <span>__init__</span><span>(</span>self<span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>         self<span>.</span>x <span>=</span> <span>9</span>
<span>.</span><span>.</span><span>.</span>     <span>def</span> <span>power</span><span>(</span>self<span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>         <span>return</span> self<span>.</span>x <span>*</span> self<span>.</span>x
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> obj <span>=</span> MyObject<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>紧接着，可以测试该对象的属性:</p>
<div><pre><code><span>>></span><span>></span> <span>hasattr</span><span>(</span>obj<span>,</span> <span>'x'</span><span>)</span> <span># 有属性'x'吗？</span>
<span>True</span>
<span>>></span><span>></span> obj<span>.</span>x
<span>9</span>
<span>>></span><span>></span> <span>hasattr</span><span>(</span>obj<span>,</span> <span>'y'</span><span>)</span> <span># 有属性'y'吗？</span>
<span>False</span>
<span>>></span><span>></span> <span>setattr</span><span>(</span>obj<span>,</span> <span>'y'</span><span>,</span> <span>19</span><span>)</span> <span># 设置一个属性'y'</span>
<span>>></span><span>></span> <span>hasattr</span><span>(</span>obj<span>,</span> <span>'y'</span><span>)</span> <span># 有属性'y'吗？</span>
<span>True</span>
<span>>></span><span>></span> <span>getattr</span><span>(</span>obj<span>,</span> <span>'y'</span><span>)</span> <span># 获取属性'y'</span>
<span>19</span>
<span>>></span><span>></span> obj<span>.</span>y <span># 获取属性'y'</span>
<span>19</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><p>如果试图获取不存在的属性，会抛出 <code>AttributeError</code> 的错误:</p>
<div><pre><code><span>>></span><span>></span> <span>getattr</span><span>(</span>obj<span>,</span> <span>'z'</span><span>)</span> <span># 获取属性'z'</span>
Traceback <span>(</span>most recent call last<span>)</span><span>:</span>
  File <span>"&lt;stdin>"</span><span>,</span> line <span>1</span><span>,</span> <span>in</span> <span>&lt;</span>module<span>></span>
AttributeError<span>:</span> <span>'MyObject'</span> <span>object</span> has no attribute <span>'z'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>可以传入一个 <code>default</code> 参数，如果属性不存在，就返回默认值:</p>
<div><pre><code><span>>></span><span>></span> <span>getattr</span><span>(</span>obj<span>,</span> <span>'z'</span><span>,</span> <span>404</span><span>)</span> <span># 获取属性'z'，如果不存在，返回默认值404</span>
<span>404</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>也可以获得对象的方法:</p>
<div><pre><code><span>>></span><span>></span> <span>hasattr</span><span>(</span>obj<span>,</span> <span>'power'</span><span>)</span> <span># 有属性'power'吗？</span>
<span>True</span>
<span>>></span><span>></span> <span>getattr</span><span>(</span>obj<span>,</span> <span>'power'</span><span>)</span> <span># 获取属性'power'</span>
<span>&lt;</span>bound method MyObject<span>.</span>power of <span>&lt;</span>__main__<span>.</span>MyObject <span>object</span> at <span>0x10077a6a0</span><span>>></span>
<span>>></span><span>></span> fn <span>=</span> <span>getattr</span><span>(</span>obj<span>,</span> <span>'power'</span><span>)</span> <span># 获取属性'power'并赋值到变量fn</span>
<span>>></span><span>></span> fn <span># fn指向obj.power</span>
<span>&lt;</span>bound method MyObject<span>.</span>power of <span>&lt;</span>__main__<span>.</span>MyObject <span>object</span> at <span>0x10077a6a0</span><span>>></span>
<span>>></span><span>></span> fn<span>(</span><span>)</span> <span># 调用fn()与调用obj.power()是一样的</span>
<span>81</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><h2 id="小结" tabindex="-1"> 小结</h2>
<p>通过内置的一系列函数，我们可以对任意一个 Python 对象进行剖析，拿到其内部的数据。要注意的是，只有在不知道对象信息的时候，我们才会去获取对象信息。如果可以直接写:</p>
<div><pre><code><span>sum</span> <span>=</span> obj<span>.</span>x <span>+</span> obj<span>.</span>y
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>就不要写:</p>
<div><pre><code><span>sum</span> <span>=</span> <span>getattr</span><span>(</span>obj<span>,</span> <span>'x'</span><span>)</span> <span>+</span> <span>getattr</span><span>(</span>obj<span>,</span> <span>'y'</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>一个正确的用法的例子如下:</p>
<div><pre><code><span>def</span> <span>readImage</span><span>(</span>fp<span>)</span><span>:</span>
    <span>if</span> <span>hasattr</span><span>(</span>fp<span>,</span> <span>'read'</span><span>)</span><span>:</span>
        <span>return</span> readData<span>(</span>fp<span>)</span>
    <span>return</span> <span>None</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>假设我们希望从文件流 <code>fp</code> 中读取图像，我们首先要判断该 <code>fp</code> 对象是否存在 <code>read</code> 方法，如果存在，则该对象是一个流，如果不存在，则无法读取。<code>hasattr()</code> 就派上了用场。</p>
<p>请注意，在 Python 这类动态语言中，根据鸭子类型，有 <code>read()</code> 方法，不代表该 fp 对象就是一个文件流，它也可能是网络流，也可能是内存中的一个字节流，但只要 <code>read()</code> 方法返回的是有效的图像数据，就不影响读取图像的功能。</p>
]]></content:encoded>
    </item>
    <item>
      <title>类和实例</title>
      <link>https://mrhope.site/code/language/python/oop/instance.html</link>
      <guid>https://mrhope.site/code/language/python/oop/instance.html</guid>
      <source url="https://mrhope.site/rss.xml">类和实例</source>
      <description>面向对象最重要的概念就是类 (Class) 和实例 (Instance) ，必须牢记类是抽象的模板，比如 Student 类，而实例是根据类创建出来的一个个具体的“对象”，每个对象都拥有相同的方法，但各自的数据可能不同。
</description>
      <category>Python</category>
      <pubDate>Sun, 28 Mar 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>面向对象最重要的概念就是类 (Class) 和实例 (Instance) ，必须牢记类是抽象的模板，比如 <code>Student</code> 类，而实例是根据类创建出来的一个个具体的“对象”，每个对象都拥有相同的方法，但各自的数据可能不同。</p>

<p>仍以 <code>Student</code> 类为例，在 Python 中，定义类是通过 class 关键字:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>pass</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>class 后面紧接着是类名，即 <code>Student</code>，类名通常是大写开头的单词，紧接着是(object)，表示该类是从哪个类继承下来的，继承的概念我们后面再讲，通常，如果没有合适的继承类，就使用 object 类，这是所有类最终都会继承的类。</p>
<p>定义好了 <code>Student</code> 类，就可以根据 <code>Student</code> 类创建出 <code>Student</code> 的实例，创建实例是通过 <code>className()</code> 实现的:</p>
<div><pre><code><span>>></span><span>></span> bart <span>=</span> Student<span>(</span><span>)</span>
<span>>></span><span>></span> bart
<span>&lt;</span>__main__<span>.</span>Student <span>object</span> at <span>0x10a67a590</span><span>></span>
<span>>></span><span>></span> Student
<span>&lt;</span><span>class</span> <span>'__main__.Student'</span><span>></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>可以看到，变量 <code>bart</code> 指向的就是一个 Student 的实例，后面的 <code>0x10a67a590</code> 是内存地址，每个 object 的地址都不一样，而 <code>Student</code> 本身则是一个类。</p>
<p>可以自由地给一个实例变量绑定属性，比如，给实例 <code>bart</code> 绑定一个 <code>name</code> 属性:</p>
<div><pre><code><span>>></span><span>></span> bart<span>.</span>name <span>=</span> <span>'Bart Simpson'</span>
<span>>></span><span>></span> bart<span>.</span>name
<span>'Bart Simpson'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>由于类可以起到模板的作用，因此，可以在创建实例的时候，把一些我们认为必须绑定的属性强制填写进去。通过定义一个特殊的 <strong>init</strong> 方法，在创建实例的时候，就把 <code>name</code>，<code>score</code> 等属性绑上去:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>

    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> name<span>,</span> score<span>)</span><span>:</span>
        self<span>.</span>name <span>=</span> name
        self<span>.</span>score <span>=</span> score
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><p>注意</p>
<p>特殊方法 <code>__init__</code> 前后分别有两个下划线!!!</p>
</div>
<p>由于 <strong>init</strong> 方法的第一个参数永远是 <code>self</code>，表示创建的实例本身，因此，在 <strong>init</strong> 方法内部，就可以把各种属性绑定到 <code>self</code>，因为 <code>self</code> 就指向创建的实例本身。</p>
<p>有了 <strong>init</strong> 方法，在创建实例的时候，就不能传入空的参数了，必须传入与 <strong>init</strong> 方法匹配的参数，但 self 不需要传，Python 解释器自己会把实例变量传进去:</p>
<div><pre><code>&gt;&gt;&gt; bart = Student('Bart Simpson', 59)
&gt;&gt;&gt; bart.name
'Bart Simpson'
&gt;&gt;&gt; bart.score
59
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>和普通的函数相比，在类中定义的函数只有一点不同，就是第一个参数永远是实例变量 self，并且，调用时，不用传递该参数。除此之外，类的方法和普通函数没有什么区别，所以，您仍然可以用默认参数、可变参数、关键字参数和命名关键字参数。</p>
<h2 id="数据封装" tabindex="-1"> 数据封装</h2>
<p>面向对象编程的一个重要特点就是数据封装。在上面的 Student 类中，每个实例就拥有各自的 name 和 score 这些数据。我们可以通过函数来访问这些数据，比如打印一个学生的成绩:</p>
<div><pre><code><span>>></span><span>></span> <span>def</span> <span>print_score</span><span>(</span>std<span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     <span>print</span><span>(</span><span>'%s: %s'</span> <span>%</span> <span>(</span>std<span>.</span>name<span>,</span> std<span>.</span>score<span>)</span><span>)</span>
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> print_score<span>(</span>bart<span>)</span>
Bart Simpson<span>:</span> <span>59</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>但是，既然 Student 实例本身就拥有这些数据，要访问这些数据，就没有必要从外面的函数去访问，可以直接在 Student 类的内部定义访问数据的函数，这样，就把“数据”给封装起来了。这些封装数据的函数是和 Student 类本身是关联起来的，我们称之为类的方法:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>

    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> name<span>,</span> score<span>)</span><span>:</span>
        self<span>.</span>name <span>=</span> name
        self<span>.</span>score <span>=</span> score

    <span>def</span> <span>print_score</span><span>(</span>self<span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'%s: %s'</span> <span>%</span> <span>(</span>self<span>.</span>name<span>,</span> self<span>.</span>score<span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>要定义一个方法，除了第一个参数是 self 外，其他和普通函数一样。要调用一个方法，只需要在实例变量上直接调用，除了 self 不用传递，其他参数正常传入:</p>
<div><pre><code><span>>></span><span>></span> bart<span>.</span>print_score<span>(</span><span>)</span>
Bart Simpson<span>:</span> <span>59</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>这样一来，我们从外部看 Student 类，就只需要知道，创建实例需要给出 name 和 score，而如何打印，都是在 Student 类的内部定义的，这些数据和逻辑被“封装”起来了，调用很容易，但却不用知道内部实现的细节。</p>
<p>封装的另一个好处是可以给 Student 类增加新的方法，比如 get_grade:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>.</span><span>.</span><span>.</span>

    <span>def</span> <span>get_grade</span><span>(</span>self<span>)</span><span>:</span>
        <span>if</span> self<span>.</span>score <span>>=</span> <span>90</span><span>:</span>
            <span>return</span> <span>'A'</span>
        <span>elif</span> self<span>.</span>score <span>>=</span> <span>60</span><span>:</span>
            <span>return</span> <span>'B'</span>
        <span>else</span><span>:</span>
            <span>return</span> <span>'C'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>同样的，get_grade 方法可以直接在实例变量上调用，不需要知道内部实现细节:</p>
<div><pre><code><span># -*- coding: utf-8 -*-</span>
<span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> name<span>,</span> score<span>)</span><span>:</span>
        self<span>.</span>name <span>=</span> name
        self<span>.</span>score <span>=</span> score

    <span>def</span> <span>get_grade</span><span>(</span>self<span>)</span><span>:</span>
        <span>if</span> self<span>.</span>score <span>>=</span> <span>90</span><span>:</span>
            <span>return</span> <span>'A'</span>
        <span>elif</span> self<span>.</span>score <span>>=</span> <span>60</span><span>:</span>
            <span>return</span> <span>'B'</span>
        <span>else</span><span>:</span>
            <span>return</span> <span>'C'</span>

lisa <span>=</span> Student<span>(</span><span>'Lisa'</span><span>,</span> <span>99</span><span>)</span>
bart <span>=</span> Student<span>(</span><span>'Bart'</span><span>,</span> <span>59</span><span>)</span>
<span>print</span><span>(</span>lisa<span>.</span>name<span>,</span> lisa<span>.</span>get_grade<span>(</span><span>)</span><span>)</span>
<span># Lisa A</span>
<span>print</span><span>(</span>bart<span>.</span>name<span>,</span> bart<span>.</span>get_grade<span>(</span><span>)</span><span>)</span>
<span># Bart C</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><h2 id="实例属性和类属性" tabindex="-1"> 实例属性和类属性</h2>
<p>由于 Python 是动态语言，根据类创建的实例可以任意绑定属性。</p>
<p>给实例绑定属性的方法是通过实例变量，或者通过 <code>self</code> 变量:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> name<span>)</span><span>:</span>
        self<span>.</span>name <span>=</span> name

s <span>=</span> Student<span>(</span><span>'Bob'</span><span>)</span>
s<span>.</span>score <span>=</span> <span>90</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>但是，如果 <code>Student</code> 类本身需要绑定一个属性呢？可以直接在 class 中定义属性，这种属性是类属性，归 <code>Student</code> 类所有:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>
    name <span>=</span> <span>'Student'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>当我们定义了一个类属性后，这个属性虽然归类所有，但类的所有实例都可以访问到。来测试一下:</p>
<div><pre><code><span>>></span><span>></span> <span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     name <span>=</span> <span>'Student'</span>
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> s <span>=</span> Student<span>(</span><span>)</span> <span># 创建实例s</span>
<span>>></span><span>></span> <span>print</span><span>(</span>s<span>.</span>name<span>)</span> <span># 打印name属性，因为实例并没有name属性，所以会继续查找class的name属性</span>
Student
<span>>></span><span>></span> <span>print</span><span>(</span>Student<span>.</span>name<span>)</span> <span># 打印类的name属性</span>
Student
<span>>></span><span>></span> s<span>.</span>name <span>=</span> <span>'Michael'</span> <span># 给实例绑定name属性</span>
<span>>></span><span>></span> <span>print</span><span>(</span>s<span>.</span>name<span>)</span> <span># 由于实例属性优先级比类属性高，因此，它会屏蔽掉类的name属性</span>
Michael
<span>>></span><span>></span> <span>print</span><span>(</span>Student<span>.</span>name<span>)</span> <span># 但是类属性并未消失，用Student.name仍然可以访问</span>
Student
<span>>></span><span>></span> <span>del</span> s<span>.</span>name <span># 如果删除实例的name属性</span>
<span>>></span><span>></span> <span>print</span><span>(</span>s<span>.</span>name<span>)</span> <span># 再次调用s.name，由于实例的name属性没有找到，类的name属性就显示出来了</span>
Student
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><p>从上面的例子可以看出，在编写程序的时候，千万<strong>不要对实例属性和类属性使用相同的名字</strong>，因为相同名称的实例属性将屏蔽掉类属性，但是当您删除实例属性后，再使用相同的名称，访问到的将是类属性。</p>
<h2 id="小结" tabindex="-1"> 小结</h2>
<ul>
<li>
<p>类是创建实例的模板，而实例则是一个一个具体的对象，各个实例拥有的数据都互相独立，互不影响；</p>
</li>
<li>
<p>方法就是与实例绑定的函数，和普通函数不同，方法可以直接访问实例的数据；</p>
</li>
<li>
<p>通过在实例上调用方法，我们就直接操作了对象内部的数据，但无需知道方法内部的实现细节。</p>
</li>
<li>
<p>和静态语言不同，Python 允许对实例变量绑定任何数据，也就是说，对于两个实例变量，虽然它们都是同一个类的不同实例，但拥有的变量名称都可能不同:</p>
<div><pre><code><span>>></span><span>></span> bart <span>=</span> Student<span>(</span><span>'Bart Simpson'</span><span>,</span> <span>59</span><span>)</span>
<span>>></span><span>></span> lisa <span>=</span> Student<span>(</span><span>'Lisa Simpson'</span><span>,</span> <span>87</span><span>)</span>
<span>>></span><span>></span> bart<span>.</span>age <span>=</span> <span>8</span>
<span>>></span><span>></span> bart<span>.</span>age
<span>8</span>
<span>>></span><span>></span> lisa<span>.</span>age
Traceback <span>(</span>most recent call last<span>)</span><span>:</span>
  File <span>"&lt;stdin>"</span><span>,</span> line <span>1</span><span>,</span> <span>in</span> <span>&lt;</span>module<span>></span>
AttributeError<span>:</span> <span>'Student'</span> <span>object</span> has no attribute <span>'age'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div></li>
<li>
<p>实例属性属于各个实例所有，互不干扰；</p>
</li>
<li>
<p>类属性属于类所有，所有实例共享一个属性；</p>
</li>
<li>
<p>不要对实例属性和类属性使用相同的名字，否则将产生难以发现的错误。</p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>面向对象编程</title>
      <link>https://mrhope.site/code/language/python/oop/intro.html</link>
      <guid>https://mrhope.site/code/language/python/oop/intro.html</guid>
      <source url="https://mrhope.site/rss.xml">面向对象编程</source>
      <category>Python</category>
      <pubDate>Sun, 28 Mar 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>面向对象编程——Object Oriented Programming，简称 OOP，是一种程序设计思想。OOP 把对象作为程序的基本单元，一个对象包含了数据和操作数据的函数。</p>
<p>面向过程的程序设计把计算机程序视为一系列的命令集合，即一组函数的顺序执行。为了简化程序设计，面向过程把函数继续切分为子函数，即把大块函数通过切割成小块函数来降低系统的复杂度。</p>
<p>而面向对象的程序设计把计算机程序视为一组对象的集合，而每个对象都可以接收其他对象发过来的消息，并处理这些消息，计算机程序的执行就是一系列消息在各个对象之间传递。</p>
<p>在 Python 中，所有数据类型都可以视为对象，当然也可以自定义对象。自定义的对象数据类型就是面向对象中的类 (Class) 的概念。</p>
<p>我们以一个例子来说明面向过程和面向对象在程序流程上的不同之处。</p>
<p>假设我们要处理学生的成绩表，为了表示一个学生的成绩，面向过程的程序可以用一个 dict 表示:</p>
<div><pre><code>std1 <span>=</span> <span>{</span> <span>'name'</span><span>:</span> <span>'Michael'</span><span>,</span> <span>'score'</span><span>:</span> <span>98</span> <span>}</span>
std2 <span>=</span> <span>{</span> <span>'name'</span><span>:</span> <span>'Bob'</span><span>,</span> <span>'score'</span><span>:</span> <span>81</span> <span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>而处理学生成绩可以通过函数实现，比如打印学生的成绩:</p>
<div><pre><code><span>def</span> <span>print_score</span><span>(</span>std<span>)</span><span>:</span>
    <span>print</span><span>(</span><span>'%s: %s'</span> <span>%</span> <span>(</span>std<span>[</span><span>'name'</span><span>]</span><span>,</span> std<span>[</span><span>'score'</span><span>]</span><span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>如果采用面向对象的程序设计思想，我们首选思考的不是程序的执行流程，而是 <code>Student</code> 这种数据类型应该被视为一个对象，这个对象拥有 <code>name</code> 和 <code>score</code> 这两个属性 (Property) 。如果要打印一个学生的成绩，首先必须创建出这个学生对应的对象，然后，给对象发一个 <code>print_score</code> 消息，让对象自己把自己的数据打印出来。</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>

    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> name<span>,</span> score<span>)</span><span>:</span>
        self<span>.</span>name <span>=</span> name
        self<span>.</span>score <span>=</span> score

    <span>def</span> <span>print_score</span><span>(</span>self<span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'%s: %s'</span> <span>%</span> <span>(</span>self<span>.</span>name<span>,</span> self<span>.</span>score<span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>给对象发消息实际上就是调用对象对应的关联函数，我们称之为对象的方法 (Method) 。面向对象的程序写出来就像这样:</p>
<div><pre><code>bart <span>=</span> Student<span>(</span><span>'Bart Simpson'</span><span>,</span> <span>59</span><span>)</span>
lisa <span>=</span> Student<span>(</span><span>'Lisa Simpson'</span><span>,</span> <span>87</span><span>)</span>
bart<span>.</span>print_score<span>(</span><span>)</span>
lisa<span>.</span>print_score<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>面向对象的设计思想是从自然界中来的，因为在自然界中，类 (Class) 和实例 (Instance) 的概念是很自然的。Class 是一种抽象概念，比如我们定义的 Class——Student，是指学生这个概念，而实例 (Instance) 则是一个个具体的 Student，比如，<code>Bart Simpson</code> 和 <code>Lisa Simpson</code> 是两个具体的 Student。</p>
<p>所以，面向对象的设计思想是抽象出 Class，根据 Class 创建 Instance。</p>
<p>面向对象的抽象程度又比函数要高，因为一个 Class 既包含数据，又包含操作数据的方法。</p>
]]></content:encoded>
    </item>
    <item>
      <title>属性</title>
      <link>https://mrhope.site/code/language/python/oop/property.html</link>
      <guid>https://mrhope.site/code/language/python/oop/property.html</guid>
      <source url="https://mrhope.site/rss.xml">属性</source>
      <category>Python</category>
      <pubDate>Sun, 28 Mar 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="私有属性" tabindex="-1"> 私有属性</h2>
<p>在 Class 内部，可以有属性和方法，而外部代码可以通过直接调用实例变量的方法来操作数据，这样，就隐藏了内部的复杂逻辑。</p>
<p>但是，从前面 Student 类的定义来看，外部代码还是可以自由地修改一个实例的 <code>name</code>、<code>score</code> 属性:</p>
<div><pre><code><span>>></span><span>></span> bart <span>=</span> Student<span>(</span><span>'Bart Simpson'</span><span>,</span> <span>59</span><span>)</span>
<span>>></span><span>></span> bart<span>.</span>score
<span>59</span>
<span>>></span><span>></span> bart<span>.</span>score <span>=</span> <span>99</span>
<span>>></span><span>></span> bart<span>.</span>score
<span>99</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>如果要让内部属性不被外部访问，可以把属性的名称前加上两个下划线 <code>__</code>，在 Python 中，实例的变量名如果以 <code>__</code> 开头，就变成了一个私有变量 (private) ，只有内部可以访问，外部不能访问，所以，我们把 <code>Student</code> 类改一改:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>

    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> name<span>,</span> score<span>)</span><span>:</span>
        self<span>.</span>__name <span>=</span> name
        self<span>.</span>__score <span>=</span> score

    <span>def</span> <span>print_score</span><span>(</span>self<span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'%s: %s'</span> <span>%</span> <span>(</span>self<span>.</span>__name<span>,</span> self<span>.</span>__score<span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>改完后，对于外部代码来说，没什么变动，但是已经无法从外部访问实例变量. <code>__name</code> 和实例变量 <code>__score</code> 了:</p>
<div><pre><code><span>>></span><span>></span> bart <span>=</span> Student<span>(</span><span>'Bart Simpson'</span><span>,</span> <span>59</span><span>)</span>
<span>>></span><span>></span> bart<span>.</span>__name
Traceback <span>(</span>most recent call last<span>)</span><span>:</span>
  File <span>"&lt;stdin>"</span><span>,</span> line <span>1</span><span>,</span> <span>in</span> <span>&lt;</span>module<span>></span>
AttributeError<span>:</span> <span>'Student'</span> <span>object</span> has no attribute <span>'__name'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>这样就确保了外部代码不能随意修改对象内部的状态，这样通过访问限制的保护，代码更加健壮。</p>
<p>但是如果外部代码要获取 <code>name</code> 和 <code>score</code> 怎么办？可以给 Student 类增加 <code>get_name</code> 和 <code>get_score</code> 这样的方法:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>.</span><span>.</span><span>.</span>

    <span>def</span> <span>get_name</span><span>(</span>self<span>)</span><span>:</span>
        <span>return</span> self<span>.</span>__name

    <span>def</span> <span>get_score</span><span>(</span>self<span>)</span><span>:</span>
        <span>return</span> self<span>.</span>__score
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>如果又要允许外部代码修改 score 怎么办？可以再给 Student 类增加 <code>set_score</code> 方法:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>.</span><span>.</span><span>.</span>

    <span>def</span> <span>set_score</span><span>(</span>self<span>,</span> score<span>)</span><span>:</span>
        self<span>.</span>__score <span>=</span> score
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>您也许会问，原先那种直接通过 bart.score = 99 也可以修改啊，为什么要定义一个方法大费周折？因为在方法中，可以对参数做检查，避免传入无效的参数:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>.</span><span>.</span><span>.</span>

    <span>def</span> <span>set_score</span><span>(</span>self<span>,</span> score<span>)</span><span>:</span>
        <span>if</span> <span>0</span> <span>&lt;=</span> score <span>&lt;=</span> <span>100</span><span>:</span>
            self<span>.</span>__score <span>=</span> score
        <span>else</span><span>:</span>
            <span>raise</span> ValueError<span>(</span><span>'bad score'</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>需要注意的是，在 Python 中，变量名类似 <code>__xxx__</code> 的，也就是以双下划线开头，并且以双下划线结尾的，是特殊变量，特殊变量是可以直接访问的，不是 private 变量，所以，不能用 <code>__name__</code>、<code>__score__</code> 这样的变量名。</p>
<p>有些时候，您会看到以一个下划线开头的实例变量名，比如 <code>_name</code>，这样的实例变量外部是可以访问的，但是，按照约定俗成的规定，当您看到这样的变量时，意思就是，“虽然我可以被访问，但是，请把我视为私有变量，不要随意访问”。</p>
<p>双下划线开头的实例变量是不是一定不能从外部访问呢？其实也不是。不能直接访问 <code>__name</code> 是因为 Python 解释器对外把 <code>__name</code> 变量改成了 <code>_Student__name</code>，所以，仍然可以通过 <code>_Student__name</code> 来访问 <code>__name</code> 变量:</p>
<div><pre><code><span>>></span><span>></span> bart<span>.</span>_Student__name
<span>'Bart Simpson'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>但是强烈建议您不要这么干，因为不同版本的 Python 解释器可能会把 <code>__name</code> 改成不同的变量名。</p>
<p>总的来说就是，Python 本身没有任何机制阻止您干坏事，一切全靠自觉。</p>
<div><p>错误写法</p>
<div><pre><code><span>>></span><span>></span> bart <span>=</span> Student<span>(</span><span>'Bart Simpson'</span><span>,</span> <span>59</span><span>)</span>
<span>>></span><span>></span> bart<span>.</span>get_name<span>(</span><span>)</span>
<span>'Bart Simpson'</span>
<span>>></span><span>></span> bart<span>.</span>__name <span>=</span> <span>'New Name'</span> <span># 设置__name变量!</span>
<span>>></span><span>></span> bart<span>.</span>__name
<span>'New Name'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>表面上看，外部代码“成功”地设置了 <code>__name</code> 变量，但实际上这个 <code>__name</code> 变量和 class 内部的 <code>__name</code> 变量不是一个变量! 内部的 <code>__name</code> 变量已经被 Python 解释器自动改成了 <code>_Student__name</code>，而外部代码给 bart 新增了一个 <code>__name</code> 变量。</p>
<div><pre><code><span>>></span><span>></span> bart<span>.</span>get_name<span>(</span><span>)</span> <span># get_name()内部返回self.__name</span>
<span>'Bart Simpson'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div></div>
<h2 id="slots" tabindex="-1"> <code>__slots__</code></h2>
<p>Python 允许在定义 class 的时候，定义一个特殊的 <code>__slots__</code> 变量，来限制该 class 实例能添加的属性。</p>
<h3 id="不受限制的属性" tabindex="-1"> 不受限制的属性</h3>
<p>正常情况下，当我们定义了一个 class，创建了一个 class 的实例后，我们可以给该实例绑定任何属性和方法，这就是动态语言的灵活性。先定义 class:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>pass</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>然后，尝试给实例绑定一个属性:</p>
<div><pre><code><span>>></span><span>></span> s <span>=</span> Student<span>(</span><span>)</span>
<span>>></span><span>></span> s<span>.</span>name <span>=</span> <span>'Michael'</span> <span># 动态给实例绑定一个属性</span>
<span>>></span><span>></span> <span>print</span><span>(</span>s<span>.</span>name<span>)</span>
Michael
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>还可以尝试给实例绑定一个方法:</p>
<div><pre><code><span>>></span><span>></span> <span>def</span> <span>set_age</span><span>(</span>self<span>,</span> age<span>)</span><span>:</span> <span># 定义一个函数作为实例方法</span>
<span>.</span><span>.</span><span>.</span>     self<span>.</span>age <span>=</span> age
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> <span>from</span> types <span>import</span> MethodType
<span>>></span><span>></span> s<span>.</span>set_age <span>=</span> MethodType<span>(</span>set_age<span>,</span> s<span>)</span> <span># 给实例绑定一个方法</span>
<span>>></span><span>></span> s<span>.</span>set_age<span>(</span><span>25</span><span>)</span> <span># 调用实例方法</span>
<span>>></span><span>></span> s<span>.</span>age <span># 测试结果</span>
<span>25</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>但是，给一个实例绑定的方法，对另一个实例是不起作用的:</p>
<div><pre><code><span>>></span><span>></span> s2 <span>=</span> Student<span>(</span><span>)</span> <span># 创建新的实例</span>
<span>>></span><span>></span> s2<span>.</span>set_age<span>(</span><span>25</span><span>)</span> <span># 尝试调用方法</span>
Traceback <span>(</span>most recent call last<span>)</span><span>:</span>
  File <span>"&lt;stdin>"</span><span>,</span> line <span>1</span><span>,</span> <span>in</span> <span>&lt;</span>module<span>></span>
AttributeError<span>:</span> <span>'Student'</span> <span>object</span> has no attribute <span>'set_age'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>为了给所有实例都绑定方法，可以给 class 绑定方法:</p>
<div><pre><code><span>>></span><span>></span> <span>def</span> <span>set_score</span><span>(</span>self<span>,</span> score<span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     self<span>.</span>score <span>=</span> score
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> Student<span>.</span>set_score <span>=</span> set_score
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>给 class 绑定方法后，所有实例均可调用:</p>
<div><pre><code><span>>></span><span>></span> s<span>.</span>set_score<span>(</span><span>100</span><span>)</span>
<span>>></span><span>></span> s<span>.</span>score
<span>100</span>
<span>>></span><span>></span> s2<span>.</span>set_score<span>(</span><span>99</span><span>)</span>
<span>>></span><span>></span> s2<span>.</span>score
<span>99</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>通常情况下，上面的 <code>set_score</code> 方法可以直接定义在 class 中，但动态绑定允许我们在程序运行的过程中动态给 class 加上功能，这在静态语言中很难实现。</p>
<h3 id="使用-slots" tabindex="-1"> 使用 <code>__slots__</code></h3>
<p>想要限制实例的属性，比如只允许对 <code>Student</code> 实例添加 <code>name</code> 和 <code>age</code> 属性，就要使用 <code>__slots__</code>。Python 允许在定义 class 的时候，定义一个特殊的 <code>__slots__</code> 变量，来限制该 class 实例能添加的属性:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>
    __slots__ <span>=</span> <span>(</span><span>'name'</span><span>,</span> <span>'age'</span><span>)</span> <span># 用tuple定义允许绑定的属性名称</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>然后，我们试试:</p>
<div><pre><code><span>>></span><span>></span> s <span>=</span> Student<span>(</span><span>)</span> <span># 创建新的实例</span>
<span>>></span><span>></span> s<span>.</span>name <span>=</span> <span>'Michael'</span> <span># 绑定属性'name'</span>
<span>>></span><span>></span> s<span>.</span>age <span>=</span> <span>25</span> <span># 绑定属性'age'</span>
<span>>></span><span>></span> s<span>.</span>score <span>=</span> <span>99</span> <span># 绑定属性'score'</span>
Traceback <span>(</span>most recent call last<span>)</span><span>:</span>
  File <span>"&lt;stdin>"</span><span>,</span> line <span>1</span><span>,</span> <span>in</span> <span>&lt;</span>module<span>></span>
AttributeError<span>:</span> <span>'Student'</span> <span>object</span> has no attribute <span>'score'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>由于 <code>'score'</code> 没有被放到 <code>__slots__</code> 中，所以不能绑定 score 属性，试图绑定 score 将得到 <code>AttributeError</code> 的错误。</p>
<p>使用 <code>__slots__</code> 要注意，<code>__slots__</code> 定义的属性仅对当前类实例起作用，对继承的子类是不起作用的:</p>
<div><pre><code><span>>></span><span>></span> <span>class</span> <span>GraduateStudent</span><span>(</span>Student<span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     <span>pass</span>
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> g <span>=</span> GraduateStudent<span>(</span><span>)</span>
<span>>></span><span>></span> g<span>.</span>score <span>=</span> <span>9999</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>除非在子类中也定义 <code>__slots__</code>，这样，子类实例允许定义的属性就是自身的 <code>__slots__</code> 加上父类的 <code>__slots__</code>。</p>
<h2 id="property" tabindex="-1"> @property</h2>
<p><code>@property</code> 广泛应用在类的定义中，可以让调用者写出简短的代码，同时保证对参数进行必要的检查，这样，程序运行时就减少了出错的可能性。</p>
<p>在绑定属性时，若直接暴露属性，虽然写起来很简单，但是，没办法检查参数，导致可以把成绩随便改:</p>
<div><pre><code>s <span>=</span> Student<span>(</span><span>)</span>
s<span>.</span>score <span>=</span> <span>9999</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>这显然不合逻辑。为了限制 <code>score</code> 的范围，可以通过一个 <code>set_score()</code> 方法来设置成绩，再通过一个 <code>get_score()</code> 来获取成绩，这样，在 <code>set_score()</code> 方法里，就可以检查参数:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>

    <span>def</span> <span>get_score</span><span>(</span>self<span>)</span><span>:</span>
         <span>return</span> self<span>.</span>_score

    <span>def</span> <span>set_score</span><span>(</span>self<span>,</span> value<span>)</span><span>:</span>
        <span>if</span> <span>not</span> <span>isinstance</span><span>(</span>value<span>,</span> <span>int</span><span>)</span><span>:</span>
            <span>raise</span> ValueError<span>(</span><span>'score must be an integer!'</span><span>)</span>
        <span>if</span> value <span>&lt;</span> <span>0</span> <span>or</span> value <span>></span> <span>100</span><span>:</span>
            <span>raise</span> ValueError<span>(</span><span>'score must between 0 ~ 100!'</span><span>)</span>
        self<span>.</span>_score <span>=</span> value
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>现在，对任意的 <code>Student</code> 实例进行操作，就不能随心所欲地设置 <code>score</code> 了:</p>
<div><pre><code><span>>></span><span>></span> s <span>=</span> Student<span>(</span><span>)</span>
<span>>></span><span>></span> s<span>.</span>set_score<span>(</span><span>60</span><span>)</span> <span># ok!</span>
<span>>></span><span>></span> s<span>.</span>get_score<span>(</span><span>)</span>
<span>60</span>
<span>>></span><span>></span> s<span>.</span>set_score<span>(</span><span>9999</span><span>)</span>
Traceback <span>(</span>most recent call last<span>)</span><span>:</span>
  <span>.</span><span>.</span><span>.</span>
ValueError<span>:</span> score must between <span>0</span> <span>~</span> <span>100</span>!
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>但是，上面的调用方法又略显复杂，没有直接用属性这么直接简单。</p>
<p>有没有既能检查参数，又可以用类似属性这样简单的方式来访问类的变量呢？对于追求完美的 Python 程序员来说，这是必须要做到的!</p>
<p>还记得装饰器 (decorator) 可以给函数动态加上功能吗？对于类的方法，装饰器一样起作用。Python 内置的 <code>@property</code> 装饰器就是负责把一个方法变成属性调用的:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>

    <span>@property</span>
    <span>def</span> <span>score</span><span>(</span>self<span>)</span><span>:</span>
        <span>return</span> self<span>.</span>_score

    <span>@score<span>.</span>setter</span>
    <span>def</span> <span>score</span><span>(</span>self<span>,</span> value<span>)</span><span>:</span>
        <span>if</span> <span>not</span> <span>isinstance</span><span>(</span>value<span>,</span> <span>int</span><span>)</span><span>:</span>
            <span>raise</span> ValueError<span>(</span><span>'score must be an integer!'</span><span>)</span>
        <span>if</span> value <span>&lt;</span> <span>0</span> <span>or</span> value <span>></span> <span>100</span><span>:</span>
            <span>raise</span> ValueError<span>(</span><span>'score must between 0 ~ 100!'</span><span>)</span>
        self<span>.</span>_score <span>=</span> value
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><p><code>@property</code> 的实现比较复杂，我们先考察如何使用。把一个 <code>getter</code> 方法变成属性，只需要加上 <code>@property</code> 就可以了，此时，<code>@property</code> 本身又创建了另一个装饰器 <code>@score.setter</code>，负责把一个 <code>setter</code> 方法变成属性赋值，于是，我们就拥有一个可控的属性操作:</p>
<div><pre><code><span>>></span><span>></span> s <span>=</span> Student<span>(</span><span>)</span>
<span>>></span><span>></span> s<span>.</span>score <span>=</span> <span>60</span> <span># OK，实际转化为s.set_score(60)</span>
<span>>></span><span>></span> s<span>.</span>score <span># OK，实际转化为s.get_score()</span>
<span>60</span>
<span>>></span><span>></span> s<span>.</span>score <span>=</span> <span>9999</span>
Traceback <span>(</span>most recent call last<span>)</span><span>:</span>
  <span>.</span><span>.</span><span>.</span>
ValueError<span>:</span> score must between <span>0</span> <span>~</span> <span>100</span>!
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>注意到这个神奇的 <code>@property</code>，我们在对实例属性操作的时候，就知道该属性很可能不是直接暴露的，而是通过 <code>getter</code> 和 <code>setter</code> 方法来实现的。</p>
<p>还可以定义只读属性，只定义 <code>getter</code> 方法，不定义 <code>setter</code> 方法就是一个只读属性:</p>
<div><pre><code><span>class</span> <span>Student</span><span>(</span><span>object</span><span>)</span><span>:</span>

    <span>@property</span>
    <span>def</span> <span>birth</span><span>(</span>self<span>)</span><span>:</span>
        <span>return</span> self<span>.</span>_birth

    <span>@birth<span>.</span>setter</span>
    <span>def</span> <span>birth</span><span>(</span>self<span>,</span> value<span>)</span><span>:</span>
        self<span>.</span>_birth <span>=</span> value

    <span>@property</span>
    <span>def</span> <span>age</span><span>(</span>self<span>)</span><span>:</span>
        <span>return</span> <span>2015</span> <span>-</span> self<span>.</span>_birth
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><p>上面的 <code>birth</code> 是可读写属性，而 <code>age</code> 就是一个只读属性，因为 <code>age</code> 可以根据 <code>birth</code> 和当前时间计算出来。</p>
]]></content:encoded>
    </item>
    <item>
      <title>特殊的 class</title>
      <link>https://mrhope.site/code/language/python/oop/special.html</link>
      <guid>https://mrhope.site/code/language/python/oop/special.html</guid>
      <source url="https://mrhope.site/rss.xml">特殊的 class</source>
      <category>Python</category>
      <pubDate>Sun, 28 Mar 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="type" tabindex="-1"> <code>type()</code></h2>
<p>动态语言和静态语言最大的不同，就是函数和类的定义，不是编译时定义的，而是运行时动态创建的。</p>
<p>比方说我们要定义一个 <code>Hello</code> 的 class，就写一个 <code>hello.py</code> 模块:</p>
<div><pre><code><span>class</span> <span>Hello</span><span>(</span><span>object</span><span>)</span><span>:</span>
    <span>def</span> <span>hello</span><span>(</span>self<span>,</span> name<span>=</span><span>'world'</span><span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'Hello, %s.'</span> <span>%</span> name<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>当 Python 解释器载入 <code>hello</code> 模块时，就会依次执行该模块的所有语句，执行结果就是动态创建出一个 <code>Hello</code> 的 class 对象，测试如下:</p>
<div><pre><code><span>>></span><span>></span> <span>from</span> hello <span>import</span> Hello
<span>>></span><span>></span> h <span>=</span> Hello<span>(</span><span>)</span>
<span>>></span><span>></span> h<span>.</span>hello<span>(</span><span>)</span>
Hello<span>,</span> world<span>.</span>
<span>>></span><span>></span> <span>print</span><span>(</span><span>type</span><span>(</span>Hello<span>)</span><span>)</span>
<span>&lt;</span><span>class</span> <span>'type'</span><span>></span>
<span>>></span><span>></span> <span>print</span><span>(</span><span>type</span><span>(</span>h<span>)</span><span>)</span>
<span>&lt;</span><span>class</span> <span>'hello.Hello'</span><span>></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p><code>type()</code> 函数可以查看一个类型或变量的类型，<code>Hello</code> 是一个 class，它的类型就是 type，而 <code>h</code> 是一个实例，它的类型就是 <code>class Hello</code>。</p>
<p>我们说 class 的定义是运行时动态创建的，而创建 class 的方法就是使用 <code>type()</code> 函数。</p>
<p><code>type()</code> 函数既可以返回一个对象的类型，又可以创建出新的类型，比如，我们可以通过 <code>type()</code> 函数创建出 Hello 类，而无需通过 <code>class Hello(object)...</code> 的定义:</p>
<div><pre><code><span>>></span><span>></span> <span>def</span> <span>fn</span><span>(</span>self<span>,</span> name<span>=</span><span>'world'</span><span>)</span><span>:</span> <span># 先定义函数</span>
<span>.</span><span>.</span><span>.</span>     <span>print</span><span>(</span><span>'Hello, %s.'</span> <span>%</span> name<span>)</span>
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> Hello <span>=</span> <span>type</span><span>(</span><span>'Hello'</span><span>,</span> <span>(</span><span>object</span><span>,</span><span>)</span><span>,</span> <span>dict</span><span>(</span>hello<span>=</span>fn<span>)</span><span>)</span> <span># 创建Hello class</span>
<span>>></span><span>></span> h <span>=</span> Hello<span>(</span><span>)</span>
<span>>></span><span>></span> h<span>.</span>hello<span>(</span><span>)</span>
Hello<span>,</span> world<span>.</span>
<span>>></span><span>></span> <span>print</span><span>(</span><span>type</span><span>(</span>Hello<span>)</span><span>)</span>
<span>&lt;</span><span>class</span> <span>'type'</span><span>></span>
<span>>></span><span>></span> <span>print</span><span>(</span><span>type</span><span>(</span>h<span>)</span><span>)</span>
<span>&lt;</span><span>class</span> <span>'__main__.Hello'</span><span>></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>要创建一个 class 对象，<code>type()</code> 函数依次传入 3 个参数:</p>
<ol>
<li>class 的名称；</li>
<li>继承的父类集合，注意 Python 支持多重继承，如果只有一个父类，别忘了 <code>tuple</code> 的单元素写法；</li>
<li>class 的方法名称与函数绑定，这里我们把函数 <code>fn</code> 绑定到方法名 <code>hello</code> 上。</li>
</ol>
<p>通过 <code>type()</code> 函数创建的类和直接写 class 是完全一样的，因为 Python 解释器遇到 class 定义时，仅仅是扫描一下 class 定义的语法，然后调用 <code>type()</code> 函数创建出 class。</p>
<p>正常情况下，我们都用 <code>class Xxx...</code> 来定义类，但是，<code>type()</code> 函数也允许我们动态创建出类来，也就是说，动态语言本身支持运行期动态创建类，这和静态语言有非常大的不同，要在静态语言运行期创建类，必须构造源代码字符串再调用编译器，或者借助一些工具生成字节码实现，本质上都是动态编译，会非常复杂。</p>
<h2 id="enum" tabindex="-1"> Enum</h2>
<p><code>Enum</code> 可以把一组相关常量定义在一个 class 中，且 class 不可变，而且成员可以直接比较。</p>
<p>当我们需要定义常量时，一个办法是用大写变量通过整数来定义，例如月份:</p>
<div><pre><code>JAN = 1
FEB = 2
MAR = 3
...
NOV = 11
DEC = 12
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>好处是简单，缺点是类型是 <code>int</code>，并且仍然是变量。</p>
<p>更好的方法是为这样的枚举类型定义一个 class 类型，然后，每个常量都是 class 的一个唯一实例。Python 提供了 <code>Enum</code> 类来实现这个功能:</p>
<div><pre><code><span>from</span> enum <span>import</span> Enum

Month <span>=</span> Enum<span>(</span><span>'Month'</span><span>,</span> <span>(</span><span>'Jan'</span><span>,</span> <span>'Feb'</span><span>,</span> <span>'Mar'</span><span>,</span> <span>'Apr'</span><span>,</span> <span>'May'</span><span>,</span> <span>'Jun'</span><span>,</span> <span>'Jul'</span><span>,</span> <span>'Aug'</span><span>,</span> <span>'Sep'</span><span>,</span> <span>'Oct'</span><span>,</span> <span>'Nov'</span><span>,</span> <span>'Dec'</span><span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>这样我们就获得了 <code>Month</code> 类型的枚举类，可以直接使用 <code>Month.Jan</code> 来引用一个常量，或者枚举它的所有成员:</p>
<div><pre><code><span>for</span> name<span>,</span> member <span>in</span> Month<span>.</span>__members__<span>.</span>items<span>(</span><span>)</span><span>:</span>
    <span>print</span><span>(</span>name<span>,</span> <span>'=>'</span><span>,</span> member<span>,</span> <span>','</span><span>,</span> member<span>.</span>value<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p><code>value</code> 属性则是自动赋给成员的 <code>int</code> 常量，默认从 <code>1</code> 开始计数。</p>
<p>如果需要更精确地控制枚举类型，可以从 <code>Enum</code> 派生出自定义类:</p>
<div><pre><code><span>from</span> enum <span>import</span> Enum<span>,</span> unique

<span>@unique</span>
<span>class</span> <span>Weekday</span><span>(</span>Enum<span>)</span><span>:</span>
    Sun <span>=</span> <span>0</span> <span># Sun的value被设定为0</span>
    Mon <span>=</span> <span>1</span>
    Tue <span>=</span> <span>2</span>
    Wed <span>=</span> <span>3</span>
    Thu <span>=</span> <span>4</span>
    Fri <span>=</span> <span>5</span>
    Sat <span>=</span> <span>6</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p><code>@unique</code> 装饰器可以帮助我们检查保证没有重复值。</p>
<p>访问这些枚举类型可以有若干种方法:</p>
<div><pre><code><span>>></span><span>></span> day1 <span>=</span> Weekday<span>.</span>Mon
<span>>></span><span>></span> <span>print</span><span>(</span>day1<span>)</span>
Weekday<span>.</span>Mon
<span>>></span><span>></span> <span>print</span><span>(</span>Weekday<span>.</span>Tue<span>)</span>
Weekday<span>.</span>Tue
<span>>></span><span>></span> <span>print</span><span>(</span>Weekday<span>[</span><span>'Tue'</span><span>]</span><span>)</span>
Weekday<span>.</span>Tue
<span>>></span><span>></span> <span>print</span><span>(</span>Weekday<span>.</span>Tue<span>.</span>value<span>)</span>
<span>2</span>
<span>>></span><span>></span> <span>print</span><span>(</span>day1 <span>==</span> Weekday<span>.</span>Mon<span>)</span>
<span>True</span>
<span>>></span><span>></span> <span>print</span><span>(</span>day1 <span>==</span> Weekday<span>.</span>Tue<span>)</span>
<span>False</span>
<span>>></span><span>></span> <span>print</span><span>(</span>Weekday<span>(</span><span>1</span><span>)</span><span>)</span>
Weekday<span>.</span>Mon
<span>>></span><span>></span> <span>print</span><span>(</span>day1 <span>==</span> Weekday<span>(</span><span>1</span><span>)</span><span>)</span>
<span>True</span>
<span>>></span><span>></span> Weekday<span>(</span><span>7</span><span>)</span>
Traceback <span>(</span>most recent call last<span>)</span><span>:</span>
  <span>.</span><span>.</span><span>.</span>
ValueError<span>:</span> <span>7</span> <span>is</span> <span>not</span> a valid Weekday
<span>>></span><span>></span> <span>for</span> name<span>,</span> member <span>in</span> Weekday<span>.</span>__members__<span>.</span>items<span>(</span><span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     <span>print</span><span>(</span>name<span>,</span> <span>'=>'</span><span>,</span> member<span>)</span>
<span>.</span><span>.</span><span>.</span>
Sun <span>=</span><span>></span> Weekday<span>.</span>Sun
Mon <span>=</span><span>></span> Weekday<span>.</span>Mon
Tue <span>=</span><span>></span> Weekday<span>.</span>Tue
Wed <span>=</span><span>></span> Weekday<span>.</span>Wed
Thu <span>=</span><span>></span> Weekday<span>.</span>Thu
Fri <span>=</span><span>></span> Weekday<span>.</span>Fri
Sat <span>=</span><span>></span> Weekday<span>.</span>Sat
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br></div></div><p>可见，既可以用成员名称引用枚举常量，又可以直接根据 <code>value</code> 的值获得枚举常量。</p>
<h2 id="metaclass" tabindex="-1"> metaclass</h2>
<p>除了使用 <code>type()</code> 动态创建类以外，要控制类的创建行为，还可以使用 metaclass。</p>
<p>metaclass 是 Python 中非常具有魔术性的对象，它可以改变类创建时的行为。这种强大的功能使用起来务必小心。</p>
<p>metaclass，直译为元类，简单的解释就是: 当我们定义了类以后，就可以根据这个类创建出实例，所以先定义类，然后创建实例。</p>
<p>但是如果我们想创建出类呢？那就必须根据 metaclass 创建出类，所以: 先定义 metaclass，然后创建类。</p>
<p>连接起来就是: 先定义 metaclass，就可以创建类，最后创建实例。</p>
<p>所以，metaclass 允许您创建类或者修改类。换句话说，您可以把类看成是 metaclass 创建出来的“实例”。</p>
<div><p>提示</p>
<p>metaclass 是 Python 面向对象里最难理解，也是最难使用的魔术代码。正常情况下，您不会碰到需要使用 metaclass 的情况，所以，以下内容看不懂也没关系，因为基本上您不会用到。</p>
</div>
<p>我们先看一个简单的例子，这个 metaclass 可以给我们自定义的 <code>MyList</code> 增加一个 <code>add</code> 方法:</p>
<p>定义 <code>ListMetaclass</code>，按照默认习惯，metaclass 的类名总是以 <code>Metaclass</code> 结尾，以便清楚地表示这是一个 metaclass:</p>
<div><pre><code><span># metaclass是类的模板，所以必须从`type`类型派生:</span>
<span>class</span> <span>ListMetaclass</span><span>(</span><span>type</span><span>)</span><span>:</span>
    <span>def</span> <span>__new__</span><span>(</span>cls<span>,</span> name<span>,</span> bases<span>,</span> attrs<span>)</span><span>:</span>
        attrs<span>[</span><span>'add'</span><span>]</span> <span>=</span> <span>lambda</span> self<span>,</span> value<span>:</span> self<span>.</span>append<span>(</span>value<span>)</span>
        <span>return</span> <span>type</span><span>.</span>__new__<span>(</span>cls<span>,</span> name<span>,</span> bases<span>,</span> attrs<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>有了 <code>ListMetaclass</code>，我们在定义类的时候还要指示使用 <code>ListMetaclass</code> 来定制类，传入关键字参数 metaclass:</p>
<div><pre><code><span>class</span> <span>MyList</span><span>(</span><span>list</span><span>,</span> metaclass<span>=</span>ListMetaclass<span>)</span><span>:</span>
    <span>pass</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>当我们传入关键字参数 metaclass 时，魔术就生效了，它指示 Python 解释器在创建 MyList 时，要通过 <code>ListMetaclass.__new__()</code> 来创建，在此，我们可以修改类的定义，比如，加上新的方法，然后，返回修改后的定义。</p>
<p><code>__new__()</code> 方法接收到的参数依次是:</p>
<ol>
<li>当前准备创建的类的对象</li>
<li>类的名字</li>
<li>类继承的父类集合</li>
<li>类的方法集合</li>
</ol>
<p>测试一下 <code>MyList</code> 是否可以调用 <code>add()</code> 方法:</p>
<div><pre><code><span>>></span><span>></span> L <span>=</span> MyList<span>(</span><span>)</span>
<span>>></span><span>></span> L<span>.</span>add<span>(</span><span>1</span><span>)</span>
<span>>></span> L
<span>[</span><span>1</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>而普通的 list 没有 <code>add()</code> 方法:</p>
<div><pre><code><span>>></span><span>></span> L2 <span>=</span> <span>list</span><span>(</span><span>)</span>
<span>>></span><span>></span> L2<span>.</span>add<span>(</span><span>1</span><span>)</span>
Traceback <span>(</span>most recent call last<span>)</span><span>:</span>
  File <span>"&lt;stdin>"</span><span>,</span> line <span>1</span><span>,</span> <span>in</span> <span>&lt;</span>module<span>></span>
AttributeError<span>:</span> <span>'list'</span> <span>object</span> has no attribute <span>'add'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>动态修改有什么意义？直接在 <code>MyList</code> 定义中写上 <code>add()</code> 方法不是更简单吗？正常情况下，确实应该直接写，通过 metaclass 修改纯属变态。</p>
<p>但是，总会遇到需要通过 metaclass 修改类定义的。ORM 就是一个典型的例子。</p>
<p>ORM 全称“Object Relational Mapping”，即对象-关系映射，就是把关系数据库的一行映射为一个对象，也就是一个类对应一个表，这样，写代码更简单，不用直接操作 SQL 语句。</p>
<p>要编写一个 ORM 框架，所有的类都只能动态定义，因为只有使用者才能根据表的结构定义出对应的类来。</p>
<p>让我们来尝试编写一个 ORM 框架。</p>
<p>编写底层模块的第一步，就是先把调用接口写出来。比如，使用者如果使用这个 ORM 框架，想定义一个 <code>User</code> 类来操作对应的数据库表 <code>User</code>，我们期待他写出这样的代码:</p>
<div><pre><code><span>class</span> <span>User</span><span>(</span>Model<span>)</span><span>:</span>
    <span># 定义类的属性到列的映射:</span>
    <span>id</span> <span>=</span> IntegerField<span>(</span><span>'id'</span><span>)</span>
    name <span>=</span> StringField<span>(</span><span>'username'</span><span>)</span>
    email <span>=</span> StringField<span>(</span><span>'email'</span><span>)</span>
    password <span>=</span> StringField<span>(</span><span>'password'</span><span>)</span>

<span># 创建一个实例:</span>
u <span>=</span> User<span>(</span><span>id</span><span>=</span><span>12345</span><span>,</span> name<span>=</span><span>'Michael'</span><span>,</span> email<span>=</span><span>'test@orm.org'</span><span>,</span> password<span>=</span><span>'my-pwd'</span><span>)</span>
<span># 保存到数据库:</span>
u<span>.</span>save<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>其中，父类 <code>Model</code> 和属性类型 <code>StringField</code>、<code>IntegerField</code> 是由 ORM 框架提供的，剩下的魔术方法比如 <code>save()</code> 全部由 metaclass 自动完成。虽然 metaclass 的编写会比较复杂，但 ORM 的使用者用起来却异常简单。</p>
<p>现在，我们就按上面的接口来实现该 ORM。</p>
<p>首先来定义 <code>Field</code> 类，它负责保存数据库表的字段名和字段类型:</p>
<div><pre><code><span>class</span> <span>Field</span><span>(</span><span>object</span><span>)</span><span>:</span>

    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> name<span>,</span> column_type<span>)</span><span>:</span>
        self<span>.</span>name <span>=</span> name
        self<span>.</span>column_type <span>=</span> column_type

    <span>def</span> <span>__str__</span><span>(</span>self<span>)</span><span>:</span>
        <span>return</span> <span>'&lt;%s:%s>'</span> <span>%</span> <span>(</span>self<span>.</span>__class__<span>.</span>__name__<span>,</span> self<span>.</span>name<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>在 <code>Field</code> 的基础上，进一步定义各种类型的 <code>Field</code>，比如 <code>StringField</code>，<code>IntegerField</code> 等等:</p>
<div><pre><code><span>class</span> <span>StringField</span><span>(</span>Field<span>)</span><span>:</span>

    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> name<span>)</span><span>:</span>
        <span>super</span><span>(</span>StringField<span>,</span> self<span>)</span><span>.</span>__init__<span>(</span>name<span>,</span> <span>'varchar(100)'</span><span>)</span>

<span>class</span> <span>IntegerField</span><span>(</span>Field<span>)</span><span>:</span>

    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> name<span>)</span><span>:</span>
        <span>super</span><span>(</span>IntegerField<span>,</span> self<span>)</span><span>.</span>__init__<span>(</span>name<span>,</span> <span>'bigint'</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>下一步，就是编写最复杂的 <code>ModelMetaclass</code> 了:</p>
<div><pre><code><span>class</span> <span>ModelMetaclass</span><span>(</span><span>type</span><span>)</span><span>:</span>

    <span>def</span> <span>__new__</span><span>(</span>cls<span>,</span> name<span>,</span> bases<span>,</span> attrs<span>)</span><span>:</span>
        <span>if</span> name<span>==</span><span>'Model'</span><span>:</span>
            <span>return</span> <span>type</span><span>.</span>__new__<span>(</span>cls<span>,</span> name<span>,</span> bases<span>,</span> attrs<span>)</span>
        <span>print</span><span>(</span><span>'Found model: %s'</span> <span>%</span> name<span>)</span>
        mappings <span>=</span> <span>dict</span><span>(</span><span>)</span>
        <span>for</span> k<span>,</span> v <span>in</span> attrs<span>.</span>items<span>(</span><span>)</span><span>:</span>
            <span>if</span> <span>isinstance</span><span>(</span>v<span>,</span> Field<span>)</span><span>:</span>
                <span>print</span><span>(</span><span>'Found mapping: %s ==> %s'</span> <span>%</span> <span>(</span>k<span>,</span> v<span>)</span><span>)</span>
                mappings<span>[</span>k<span>]</span> <span>=</span> v
        <span>for</span> k <span>in</span> mappings<span>.</span>keys<span>(</span><span>)</span><span>:</span>
            attrs<span>.</span>pop<span>(</span>k<span>)</span>
        attrs<span>[</span><span>'__mappings__'</span><span>]</span> <span>=</span> mappings <span># 保存属性和列的映射关系</span>
        attrs<span>[</span><span>'__table__'</span><span>]</span> <span>=</span> name <span># 假设表名和类名一致</span>
        <span>return</span> <span>type</span><span>.</span>__new__<span>(</span>cls<span>,</span> name<span>,</span> bases<span>,</span> attrs<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><p>以及基类 <code>Model</code>:</p>
<div><pre><code><span>class</span> <span>Model</span><span>(</span><span>dict</span><span>,</span> metaclass<span>=</span>ModelMetaclass<span>)</span><span>:</span>

    <span>def</span> <span>__init__</span><span>(</span>self<span>,</span> <span>**</span>kw<span>)</span><span>:</span>
        <span>super</span><span>(</span>Model<span>,</span> self<span>)</span><span>.</span>__init__<span>(</span><span>**</span>kw<span>)</span>

    <span>def</span> <span>__getattr__</span><span>(</span>self<span>,</span> key<span>)</span><span>:</span>
        <span>try</span><span>:</span>
            <span>return</span> self<span>[</span>key<span>]</span>
        <span>except</span> KeyError<span>:</span>
            <span>raise</span> AttributeError<span>(</span><span>r"'Model' object has no attribute '%s'"</span> <span>%</span> key<span>)</span>

    <span>def</span> <span>__setattr__</span><span>(</span>self<span>,</span> key<span>,</span> value<span>)</span><span>:</span>
        self<span>[</span>key<span>]</span> <span>=</span> value

    <span>def</span> <span>save</span><span>(</span>self<span>)</span><span>:</span>
        fields <span>=</span> <span>[</span><span>]</span>
        params <span>=</span> <span>[</span><span>]</span>
        args <span>=</span> <span>[</span><span>]</span>
        <span>for</span> k<span>,</span> v <span>in</span> self<span>.</span>__mappings__<span>.</span>items<span>(</span><span>)</span><span>:</span>
            fields<span>.</span>append<span>(</span>v<span>.</span>name<span>)</span>
            params<span>.</span>append<span>(</span><span>'?'</span><span>)</span>
            args<span>.</span>append<span>(</span><span>getattr</span><span>(</span>self<span>,</span> k<span>,</span> <span>None</span><span>)</span><span>)</span>
        sql <span>=</span> <span>'insert into %s (%s) values (%s)'</span> <span>%</span> <span>(</span>self<span>.</span>__table__<span>,</span> <span>','</span><span>.</span>join<span>(</span>fields<span>)</span><span>,</span> <span>','</span><span>.</span>join<span>(</span>params<span>)</span><span>)</span>
        <span>print</span><span>(</span><span>'SQL: %s'</span> <span>%</span> sql<span>)</span>
        <span>print</span><span>(</span><span>'ARGS: %s'</span> <span>%</span> <span>str</span><span>(</span>args<span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div><p>当用户定义一个 <code>class User(Model)</code> 时，Python 解释器首先在当前类 <code>User</code> 的定义中查找 metaclass，如果没有找到，就继续在父类 <code>Model</code> 中查找 metaclass，找到了，就使用 <code>Model</code> 中定义的 metaclass 的 <code>ModelMetaclass</code> 来创建 <code>User</code> 类，也就是说，metaclass 可以隐式地继承到子类，但子类自己却感觉不到。</p>
<p>在 <code>ModelMetaclass</code> 中，一共做了几件事情:</p>
<ol>
<li>排除掉对 <code>Model</code> 类的修改；</li>
<li>在当前类 (比如 User) 中查找定义的类的所有属性，如果找到一个 <code>Field</code> 属性，就把它保存到一个 <code>__mappings__</code> 的 dict 中，同时从类属性中删除该 <code>Field</code> 属性，否则，容易造成运行时错误 (实例的属性会遮盖类的同名属性) ；</li>
<li>把表名保存到 <code>__table__</code> 中，这里简化为表名默认为类名。</li>
</ol>
<p>在 <code>Model</code> 类中，就可以定义各种操作数据库的方法，比如 <code>save()</code>，<code>delete()</code>，<code>find()</code>，<code>update()</code> 等等。</p>
<p>我们实现了 <code>save()</code> 方法，把一个实例保存到数据库中。因为有表名，属性到字段的映射和属性值的集合，就可以构造出 <code>INSERT</code> 语句。</p>
<p>编写代码试试:</p>
<div><pre><code>u <span>=</span> User<span>(</span><span>id</span><span>=</span><span>12345</span><span>,</span> name<span>=</span><span>'Michael'</span><span>,</span> email<span>=</span><span>'test@orm.org'</span><span>,</span> password<span>=</span><span>'my-pwd'</span><span>)</span>
u<span>.</span>save<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>输出如下:</p>
<div><pre><code>Found model<span>:</span> User
Found mapping<span>:</span> email <span>==</span><span>></span> <span>&lt;</span>StringField<span>:</span>email<span>></span>
Found mapping<span>:</span> password <span>==</span><span>></span> <span>&lt;</span>StringField<span>:</span>password<span>></span>
Found mapping<span>:</span> <span>id</span> <span>==</span><span>></span> <span>&lt;</span>IntegerField<span>:</span>uid<span>></span>
Found mapping<span>:</span> name <span>==</span><span>></span> <span>&lt;</span>StringField<span>:</span>username<span>></span>
SQL<span>:</span> insert into User <span>(</span>password<span>,</span>email<span>,</span>username<span>,</span><span>id</span><span>)</span> values <span>(</span>?<span>,</span>?<span>,</span>?<span>,</span>?<span>)</span>
ARGS<span>:</span> <span>[</span><span>'my-pwd'</span><span>,</span> <span>'test@orm.org'</span><span>,</span> <span>'Michael'</span><span>,</span> <span>12345</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>可以看到，<code>save()</code> 方法已经打印出了可执行的 SQL 语句，以及参数列表，只需要真正连接到数据库，执行该 SQL 语句，就可以完成真正的功能。</p>
<p>不到 100 行代码，我们就通过 metaclass 实现了一个精简的 ORM 框架，是不是非常简单？</p>
]]></content:encoded>
    </item>
    <item>
      <title>模块</title>
      <link>https://mrhope.site/code/language/python/module/</link>
      <guid>https://mrhope.site/code/language/python/module/</guid>
      <source url="https://mrhope.site/rss.xml">模块</source>
      <category>Python</category>
      <pubDate>Sat, 27 Mar 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="目录" tabindex="-1"> 目录</h2>
<ul>
<li>
<p><a href="/code/language/python/module/intro.html">介绍</a></p>
</li>
<li>
<p><a href="/code/language/python/module/usage.html">使用模块</a></p>
</li>
<li>
<p><a href="/code/language/python/module/install.html">安装第三方模块</a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>安装第三方模块</title>
      <link>https://mrhope.site/code/language/python/module/install.html</link>
      <guid>https://mrhope.site/code/language/python/module/install.html</guid>
      <source url="https://mrhope.site/rss.xml">安装第三方模块</source>
      <category>Python</category>
      <pubDate>Sat, 27 Mar 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>在 Python 中，安装第三方模块，是通过包管理工具 pip 完成的。</p>
<p>如果您正在使用 Mac 或 Linux，安装 pip 本身这个步骤就可以跳过了。</p>
<p>如果您正在使用 Windows，请参考 <a href="/code/language/python/intro/install.html">安装 Python</a> 一节的内容，确保安装时勾选了 <code>pip</code> 和 <code>Add python.exe to Path</code>。</p>
<p>在命令提示符窗口下尝试运行 pip，如果 Windows 提示未找到命令，可以重新运行安装程序添加 pip。</p>
<div><p>注意</p>
<p>Mac 或 Linux 上有可能并存 Python 3.x 和 Python 2.x，因此对应的 pip 命令是 pip3。</p>
</div>
<p>例如，我们要安装一个第三方库——Python Imaging Library，这是 Python 下非常强大的处理图像的工具库。不过，PIL 目前只支持到 Python 2.7，并且有年头没有更新了，因此，基于 PIL 的 Pillow 项目开发非常活跃，并且支持最新的 Python 3。</p>
<p>一般来说，第三方库都会在 Python 官方的 &lt;pypi.python.org&gt; 网站注册，要安装一个第三方库，必须先知道该库的名称，可以在官网或者 pypi 上搜索，比如 Pillow 的名称叫 <a href="https://pypi.python.org/pypi/Pillow/" target="_blank" rel="noopener noreferrer">Pillow<ExternalLinkIcon/></a>，因此，安装 Pillow 的命令就是:</p>
<div><pre><code>pip <span>install</span> Pillow
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>耐心等待下载并安装后，就可以使用 Pillow 了。</p>
<h2 id="安装常用模块" tabindex="-1"> 安装常用模块</h2>
<p>在使用 Python 时，我们经常需要用到很多第三方库，例如，上面提到的 Pillow，以及 MySQL 驱动程序，Web 框架 Flask，科学计算 Numpy 等。用 pip 一个一个安装费时费力，还需要考虑兼容性。我们推荐直接使用 <a href="https://www.anaconda.com/" target="_blank" rel="noopener noreferrer">Anaconda<ExternalLinkIcon/></a>，这是一个基于 Python 的数据处理和科学计算平台，它已经内置了许多非常有用的第三方库，我们装上 Anaconda，就相当于把数十个第三方模块自动安装好了，非常简单易用。</p>
<p>可以从 <a href="https://www.anaconda.com/download/" target="_blank" rel="noopener noreferrer">Anaconda 官网<ExternalLinkIcon/></a> 下载 GUI 安装包，安装包有 500~600M，所以需要耐心等待下载。下载后直接安装，Anaconda 会把系统 Path 中的 python 指向自己自带的 Python，并且，Anaconda 安装的第三方模块会安装在 Anaconda 自己的路径下，不影响系统已安装的 Python 目录。</p>
<p>安装好 Anaconda 后，重新打开命令行窗口，输入 python，可以看到 Anaconda 的信息:</p>
<div><pre><code>┌────────────────────────────────────────────────────────┐
│Command Prompt - python                           - □ x │
├────────────────────────────────────────────────────────┤
│Microsoft Windows [Version 10.0.0]                      │
│(c) 2015 Microsoft Corporation. All rights reserved.    │
│                                                        │
│C:\> python                                             │
│Python 3.9.2 |Anaconda, Inc.| ... on win32              │
│Type "help", ... for more information.                  │
│>>> import numpy                                        │
│>>> _                                                   │
│                                                        │
│                                                        │
│                                                        │
└────────────────────────────────────────────────────────┘
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><p>可以尝试直接 <code>import numpy</code> 等已安装的第三方模块。</p>
<h2 id="模块搜索路径" tabindex="-1"> 模块搜索路径</h2>
<p>当我们试图加载一个模块时，Python 会在指定的路径下搜索对应的.py 文件，如果找不到，就会报错:</p>
<div><pre><code><span>>></span><span>></span> <span>import</span> mymodule
Traceback <span>(</span>most recent call last<span>)</span>:
  File <span>"&lt;stdin>"</span>, line <span>1</span>, <span>in</span> <span>&lt;</span>module<span>></span>
ImportError: No module named mymodule
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>默认情况下，Python 解释器会搜索当前目录、所有已安装的内置模块和第三方模块，搜索路径存放在 sys 模块的 path 变量中:</p>
<div><pre><code><span>>></span><span>></span> <span>import</span> sys
<span>>></span><span>></span> sys.path
<span>[</span><span>''</span>, <span>'/Library/Frameworks/Python.framework/Versions/3.9/lib/python36.zip'</span>, <span>'/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9'</span>, <span>..</span>., <span>'/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages'</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>如果我们要添加自己的搜索目录，有两种方法:</p>
<p>一是直接修改 <code>sys.path</code>，添加要搜索的目录:</p>
<div><pre><code><span>>></span><span>></span> <span>import</span> sys
<span>>></span><span>></span> sys.path.append<span>(</span><span>'/Users/michael/my_py_scripts'</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>这种方法是在运行时修改，运行结束后失效。</p>
<p>第二种方法是设置环境变量 <code>PYTHONPATH</code>，该环境变量的内容会被自动添加到模块搜索路径中。设置方式与 <a href="/code/windows/add-path.html">设置 Path 环境变量</a> 类似。注意只需要添加您自己的搜索路径，Python 自己本身的搜索路径不受影响。</p>
]]></content:encoded>
    </item>
    <item>
      <title>模块</title>
      <link>https://mrhope.site/code/language/python/module/intro.html</link>
      <guid>https://mrhope.site/code/language/python/module/intro.html</guid>
      <source url="https://mrhope.site/rss.xml">模块</source>
      <description>在计算机程序的开发过程中，随着程序代码越写越多，在一个文件里代码就会越来越长，越来越不容易维护。为了编写可维护的代码，我们把很多函数分组，分别放到不同的文件里，这样，每个文件包含的代码就相对较少，很多编程语言都采用这种组织代码的方式。在 Python 中，一个 .py 文件就称之为一个模块 (Module) 。
</description>
      <category>Python</category>
      <pubDate>Sat, 27 Mar 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>在计算机程序的开发过程中，随着程序代码越写越多，在一个文件里代码就会越来越长，越来越不容易维护。为了编写可维护的代码，我们把很多函数分组，分别放到不同的文件里，这样，每个文件包含的代码就相对较少，很多编程语言都采用这种组织代码的方式。在 Python 中，一个 <code>.py</code> 文件就称之为一个模块 (Module) 。</p>

<h2 id="优点" tabindex="-1"> 优点</h2>
<ol>
<li>
<p>使用模块大大提高了代码的可维护性。当一个模块编写完毕，就可以被其他地方引用。我们在编写程序的时候，也经常引用其他模块，包括 Python 内置的模块和来自第三方的模块。</p>
</li>
<li>
<p>使用模块可以避免函数名和变量名冲突。相同名字的函数和变量完全可以分别存在不同的模块中，因此，我们自己在编写模块时，不必考虑名字会与其他模块冲突。但是也要注意，尽量不要与内置函数名字冲突。</p>
</li>
</ol>
<div><p>相关信息</p>
<p><a href="http://docs.python.org/3/library/functions.html" target="_blank" rel="noopener noreferrer">Python 的所有内置函数<ExternalLinkIcon/></a></p>
</div>
<h2 id="包" tabindex="-1"> 包</h2>
<p>为了避免模块名冲突，Python 引入了按目录来组织模块的方法，称为包 (Package) 。</p>
<p>举个例子，一个 <code>abc.py</code> 的文件就是一个名字叫 abc 的模块，一个 <code>xyz.py</code> 的文件就是一个名字叫 xyz 的模块。</p>
<p>现在，假设我们的 abc 和 xyz 这两个模块名字与其他模块冲突了，于是我们可以通过包来组织模块，避免冲突。方法是选择一个顶层包名，比如 hopestudio，按照如下目录存放:</p>
<div><pre><code>hopestudio
├─ __init__.py
├─ abc.py
└─ xyz.py
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>引入了包以后，只要顶层的包名不与别人冲突，那所有模块都不会与别人冲突。现在，<code>abc.py</code> 模块的名字就变成了 <code>hopestudio.abc</code>，类似的，<code>xyz.py</code> 的模块名变成了 <code>hopestudio.xyz</code>。</p>
<p>请注意，每一个包目录下面都会有一个 <code>__init__.py</code> 的文件，这个文件是必须存在的，否则，Python 就把这个目录当成普通目录，而不是一个包。<code>__init__.py</code>可以是空文件，也可以有 Python 代码，因为 <code>__init__.py</code> 本身就是一个模块，而它的模块名就是 hopestudio。</p>
<p>类似的，可以有多级目录，组成多级层次的包结构。比如如下的目录结构:</p>
<div><pre><code>hopestudio
 ├─ web
 │  ├─ __init__.py
 │  ├─ utils.py
 │  └─ www.py
 ├─ __init__.py
 ├─ abc.py
 └─ utils.py
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>文件 <code>www.py</code> 的模块名就是 <code>hopestudio.web.www</code>，两个文件 <code>utils.py</code> 的模块名分别是 <code>hopestudio.utils</code> 和 <code>hopestudio.web.utils</code>。</p>
<div><p>注意</p>
<p>自己创建模块时要注意命名，不能和 Python 自带的模块名称冲突。例如，系统自带了 sys 模块，自己的模块就不可命名为 <code>sys.py</code>，否则将无法导入系统自带的 sys 模块。</p>
</div>
<h2 id="总结" tabindex="-1"> 总结</h2>
<ul>
<li>
<p>模块是一组 Python 代码的集合，可以使用其他模块，也可以被其他模块使用。</p>
</li>
<li>
<p>创建自己的模块时，要注意:</p>
<ol>
<li>模块名要遵循 Python 变量命名规范，不要使用中文、特殊字符；</li>
<li>模块名不要和系统模块名冲突，最好先查看系统是否已存在该模块，检查方法是在 Python 交互环境执行 <code>import abc</code>，若成功则说明系统存在此模块。</li>
</ol>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>使用模块</title>
      <link>https://mrhope.site/code/language/python/module/usage.html</link>
      <guid>https://mrhope.site/code/language/python/module/usage.html</guid>
      <source url="https://mrhope.site/rss.xml">使用模块</source>
      <description>Python 本身就内置了很多非常有用的模块，只要安装完毕，这些模块就可以立刻使用。
</description>
      <category>Python</category>
      <pubDate>Sat, 27 Mar 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Python 本身就内置了很多非常有用的模块，只要安装完毕，这些模块就可以立刻使用。</p>

<p>我们以内建的 sys 模块为例，编写一个 hello 的模块:</p>
<div><pre><code><span>#!/usr/bin/env python3</span>
<span># -*- coding: utf-8 -*-</span>

<span>' a test module '</span>

__author__ <span>=</span> <span>'Mr.Hope'</span>

<span>import</span> sys

<span>def</span> <span>test</span><span>(</span><span>)</span><span>:</span>
    args <span>=</span> sys<span>.</span>argv
    <span>if</span> <span>len</span><span>(</span>args<span>)</span><span>==</span><span>1</span><span>:</span>
        <span>print</span><span>(</span><span>'Hello, world!'</span><span>)</span>
    <span>elif</span> <span>len</span><span>(</span>args<span>)</span><span>==</span><span>2</span><span>:</span>
        <span>print</span><span>(</span><span>'Hello, %s!'</span> <span>%</span> args<span>[</span><span>1</span><span>]</span><span>)</span>
    <span>else</span><span>:</span>
        <span>print</span><span>(</span><span>'Too many arguments!'</span><span>)</span>

<span>if</span> __name__<span>==</span><span>'__main__'</span><span>:</span>
    test<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><p>第 1 行和第 2 行是标准注释，第 1 行注释可以让这个 <code>hello.py</code> 文件直接在 <code>Unix/Linux/Mac</code> 上运行，第 2 行注释表示 <code>.py</code> 文件本身使用标准 UTF-8 编码；</p>
<p>第 4 行是一个字符串，表示模块的文档注释，任何模块代码的第一个字符串都被视为模块的文档注释；</p>
<p>第 6 行使用 <code>__author__</code> 变量把作者写进去，这样当您公开源代码后别人就可以瞻仰您的大名；</p>
<p>以上就是 Python 模块的标准文件模板，当然也可以全部删掉不写，但是，按标准办事肯定没错。</p>
<p>后面开始就是真正的代码部分。</p>
<p>您可能注意到了，使用 <code>sys</code> 模块的第一步，就是导入该模块:</p>
<div><pre><code><span>import</span> sys
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>导入 sys 模块后，我们就有了变量 sys 指向该模块，利用 sys 这个变量，就可以访问 sys 模块的所有功能。</p>
<p>sys 模块有一个 <code>argv</code> 变量，用 list 存储了命令行的所有参数。<code>argv</code> 至少有一个元素，因为第一个参数永远是该.py 文件的名称，例如:</p>
<p>运行 <code>python3 hello.py</code> 获得的 <code>sys.argv</code> 就是 <code>['hello.py']</code>；</p>
<p>运行 <code>python3 hello.py Mr.Hope</code> 获得的 <code>sys.argv</code> 就是 <code>['hello.py', 'Mr.Hope']</code>。</p>
<p>最后，注意到这两行代码:</p>
<div><pre><code><span>if</span> __name__<span>==</span><span>'__main__'</span><span>:</span>
    test<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>当我们在命令行运行 hello 模块文件时，Python 解释器把一个特殊变量 <code>__name__</code> 置为 <code>__main__</code>，而如果在其他地方导入该 hello 模块时，if 判断将失败，因此，这种 if 测试可以让一个模块通过命令行运行时执行一些额外的代码，最常见的就是运行测试。</p>
<p>我们可以用命令行运行 hello.py 看看效果:</p>
<div><pre><code>$ python3 hello.py
Hello, world<span>!</span>
$ python hello.py Michael
Hello, Michael<span>!</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>如果启动 Python 交互环境，再导入 hello 模块:</p>
<div><pre><code>$ python3
Python <span>3.4</span>.3 <span>(</span>v3.4.3:9b73f1c3e601, Feb <span>23</span> <span>2015</span>, 02:52:03<span>)</span>
<span>[</span>GCC <span>4.2</span>.1 <span>(</span>Apple Inc. build <span>5666</span><span>)</span> <span>(</span>dot <span>3</span><span>)</span><span>]</span> on darwin
Type <span>"help"</span>, <span>"copyright"</span>, <span>"credits"</span> or <span>"license"</span> <span>for</span> <span>more</span> information.
<span>>></span><span>></span> <span>import</span> hello
<span>>></span><span>></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>导入时，没有打印 <code>Hello, word!</code>，因为没有执行 <code>test()</code> 函数。</p>
<p>调用 <code>hello.test()</code> 时，才能打印出 <code>Hello, word!</code> :</p>
<div><pre><code><span>>></span><span>></span> hello.test<span>(</span><span>)</span>
Hello, world<span>!</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><h2 id="作用域" tabindex="-1"> 作用域</h2>
<p>在一个模块中，我们可能会定义很多函数和变量，但有的函数和变量我们希望给别人使用，有的函数和变量我们希望仅仅在模块内部使用。在 Python 中，是通过_前缀来实现的。</p>
<p>正常的函数和变量名是公开的 (public) ，可以被直接引用，比如: <code>abc</code>，<code>x123</code>，<code>PI</code> 等；</p>
<p>类似 <code>__xxx__</code> 这样的变量是特殊变量，可以被直接引用，但是有特殊用途，比如上面的 <code>__author__</code>，<code>__name__</code> 就是特殊变量，hello 模块定义的文档注释也可以用特殊变量 <code>__doc__</code> 访问，我们自己的变量一般不要用这种变量名；</p>
<p>类似 <code>_xxx</code> 和 <code>__xxx</code> 这样的函数或变量就是非公开的 (private) ，不应该被直接引用，比如 <code>_abc</code>，<code>__abc</code> 等；</p>
<p>之所以我们说，private 函数和变量“不应该”被直接引用，而不是“不能”被直接引用，是因为 Python 并没有一种方法可以完全限制访问 private 函数或变量，但是，从编程习惯上不应该引用 private 函数或变量。</p>
<p>private 函数或变量不应该被别人引用，那它们有什么用呢？请看例子:</p>
<div><pre><code><span>def</span> <span>_private_1</span><span>(</span>name<span>)</span><span>:</span>
    <span>return</span> <span>'Hello, %s'</span> <span>%</span> name

<span>def</span> <span>_private_2</span><span>(</span>name<span>)</span><span>:</span>
    <span>return</span> <span>'Hi, %s'</span> <span>%</span> name

<span>def</span> <span>greeting</span><span>(</span>name<span>)</span><span>:</span>
    <span>if</span> <span>len</span><span>(</span>name<span>)</span> <span>></span> <span>3</span><span>:</span>
        <span>return</span> _private_1<span>(</span>name<span>)</span>
    <span>else</span><span>:</span>
        <span>return</span> _private_2<span>(</span>name<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>我们在模块里公开 <code>greeting()</code> 函数，而把内部逻辑用 private 函数隐藏起来了，这样，调用 <code>greeting()</code> 函数不用关心内部的 private 函数细节，这也是一种非常有用的代码封装和抽象的方法，即:</p>
<p>外部不需要引用的函数全部定义成 private，只有外部需要引用的函数才定义为 public。</p>
]]></content:encoded>
    </item>
    <item>
      <title>匿名函数</title>
      <link>https://mrhope.site/code/language/python/functional-programming/anonymous-function.html</link>
      <guid>https://mrhope.site/code/language/python/functional-programming/anonymous-function.html</guid>
      <source url="https://mrhope.site/rss.xml">匿名函数</source>
      <category>Python</category>
      <pubDate>Mon, 15 Mar 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>当我们在传入函数时，有些时候，不需要显式地定义函数，直接传入匿名函数更方便。</p>
<p>在 Python 中，对匿名函数提供了有限支持。还是以 <code>map()</code> 函数为例，计算 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:1em;vertical-align:-0.25em;"></span><span style="margin-right:0.10764em;">f</span><span>(</span><span>x</span><span>)</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.8141em;"></span><span><span>x</span><span><span><span><span style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span> 时，除了定义一个 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:1em;vertical-align:-0.25em;"></span><span style="margin-right:0.10764em;">f</span><span>(</span><span>x</span><span>)</span></span></span></span> 的函数外，还可以直接传入匿名函数:</p>
<div><pre><code><span>>></span><span>></span> <span>list</span><span>(</span><span>map</span><span>(</span><span>lambda</span> x<span>:</span> x <span>*</span>x<span>,</span> <span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>,</span> <span>5</span><span>,</span> <span>6</span><span>,</span> <span>7</span><span>,</span> <span>8</span><span>,</span> <span>9</span><span>]</span><span>)</span><span>)</span>
<span>[</span><span>1</span><span>,</span> <span>4</span><span>,</span> <span>9</span><span>,</span> <span>16</span><span>,</span> <span>25</span><span>,</span> <span>36</span><span>,</span> <span>49</span><span>,</span> <span>64</span><span>,</span> <span>81</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>通过对比可以看出，匿名函数 <code>lambda x: x* x</code> 实际上就是:</p>
<div><pre><code><span>def</span> <span>f</span><span>(</span>x<span>)</span><span>:</span>
    <span>return</span> x <span>*</span> x
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>关键字 <code>lambda</code> 表示匿名函数，冒号前面的 <code>x</code> 表示函数参数。</p>
<p>匿名函数有个限制，就是只能有一个表达式，不用写 <code>return</code>，返回值就是该表达式的结果。</p>
<p>用匿名函数有个好处，因为函数没有名字，不必担心函数名冲突。此外，匿名函数也是一个函数对象，也可以把匿名函数赋值给一个变量，再利用变量来调用该函数:</p>
<div><pre><code><span>>></span><span>></span> f <span>=</span> <span>lambda</span> x<span>:</span> x <span>*</span> x
<span>>></span><span>></span> f
<span>&lt;</span>function <span>&lt;</span><span>lambda</span><span>></span> at <span>0x101c6ef28</span><span>></span>
<span>>></span><span>></span> f<span>(</span><span>5</span><span>)</span>
<span>25</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>同样，也可以把匿名函数作为返回值返回，比如:</p>
<div><pre><code><span>def</span> <span>build</span><span>(</span>x<span>,</span> y<span>)</span><span>:</span>
    <span>return</span> <span>lambda</span><span>:</span> x <span>*</span>x <span>+</span> y<span>*</span> y
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><h2 id="小结" tabindex="-1"> 小结</h2>
<p>Python 对匿名函数的支持有限，只有一些简单的情况下可以使用匿名函数。</p>
]]></content:encoded>
    </item>
    <item>
      <title>装饰器</title>
      <link>https://mrhope.site/code/language/python/functional-programming/decorator.html</link>
      <guid>https://mrhope.site/code/language/python/functional-programming/decorator.html</guid>
      <source url="https://mrhope.site/rss.xml">装饰器</source>
      <category>Python</category>
      <pubDate>Mon, 15 Mar 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>由于函数也是一个对象，而且函数对象可以被赋值给变量，所以，通过变量也能调用该函数。</p>
<div><pre><code><span>>></span><span>></span> <span>def</span> <span>now</span><span>(</span><span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     <span>print</span><span>(</span><span>'2021-3-15'</span><span>)</span>
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> f <span>=</span> now
<span>>></span><span>></span> f<span>(</span><span>)</span>
<span>2021</span><span>-</span><span>3</span><span>-</span><span>15</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>函数对象有一个 <code>__name__</code> 属性，可以拿到函数的名字:</p>
<div><pre><code><span>>></span><span>></span> now<span>.</span>__name__
<span>'now'</span>
<span>>></span><span>></span> f<span>.</span>__name__
<span>'now'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>现在，假设我们要增强 <code>now()</code> 函数的功能，比如，在函数调用前后自动打印日志，但又不希望修改 <code>now()</code> 函数的定义，这种在代码运行期间动态增加功能的方式，称之为“装饰器” (Decorator) 。</p>
<p>本质上，decorator 就是一个返回函数的高阶函数。所以，我们要定义一个能打印日志的 decorator，可以定义如下:</p>
<div><pre><code><span>def</span> <span>log</span><span>(</span>func<span>)</span><span>:</span>
    <span>def</span> <span>wrapper</span><span>(</span><span>*</span>args<span>,</span> <span>**</span>kw<span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'call %s():'</span> <span>%</span> func<span>.</span>__name__<span>)</span>
<span>return</span> func<span>(</span><span>*</span>args<span>,</span><span>**</span>kw<span>)</span>
    <span>return</span> wrapper
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>观察上面的 <code>log</code>，因为它是一个 decorator，所以接受一个函数作为参数，并返回一个函数。我们要借助 Python 的 <code>@</code> 语法，把 decorator 置于函数的定义处:</p>
<div><pre><code><span>@log</span>
<span>def</span> <span>now</span><span>(</span><span>)</span><span>:</span>
    <span>print</span><span>(</span><span>'2021-3-15'</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>调用 <code>now()</code> 函数，不仅会运行 <code>now()</code> 函数本身，还会在运行 <code>now()</code> 函数前打印一行日志:</p>
<div><pre><code><span>>></span><span>></span> now<span>(</span><span>)</span>
call now<span>(</span><span>)</span><span>:</span>
<span>2021</span><span>-</span><span>3</span><span>-</span><span>15</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>把 <code>@log</code> 放到 <code>now()</code> 函数的定义处，相当于执行了语句:</p>
<div><pre><code>now <span>=</span> log<span>(</span>now<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>由于 <code>log()</code> 是一个 decorator，返回一个函数，所以，原来的 <code>now()</code> 函数仍然存在，只是现在同名的 <code>now</code> 变量指向了新的函数，于是调用 <code>now()</code> 将执行新函数，即在 <code>log()</code> 函数中返回的 <code>wrapper()</code> 函数。</p>
<p><code>wrapper()</code> 函数的参数定义是 <code>(*args, **kw)</code>，因此，<code>wrapper()</code> 函数可以接受任意参数的调用。在 <code>wrapper()</code> 函数内，首先打印日志，再紧接着调用原始函数。</p>
<p>如果 decorator 本身需要传入参数，那就需要编写一个返回 decorator 的高阶函数，写出来会更复杂。比如，要自定义 <code>log</code> 的文本:</p>
<div><pre><code><span>def</span> <span>log</span><span>(</span>text<span>)</span><span>:</span>
    <span>def</span> <span>decorator</span><span>(</span>func<span>)</span><span>:</span>
        <span>def</span> <span>wrapper</span><span>(</span><span>*</span>args<span>,</span> <span>**</span>kw<span>)</span><span>:</span>
            <span>print</span><span>(</span><span>'%s %s():'</span> <span>%</span> <span>(</span>text<span>,</span> func<span>.</span>__name__<span>)</span><span>)</span>
<span>return</span> func<span>(</span><span>*</span>args<span>,</span><span>**</span>kw<span>)</span>
        <span>return</span> wrapper
    <span>return</span> decorator
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>这个 3 层嵌套的 decorator 用法如下:</p>
<div><pre><code><span>@log</span><span>(</span><span>'execute'</span><span>)</span>
<span>def</span> <span>now</span><span>(</span><span>)</span><span>:</span>
    <span>print</span><span>(</span><span>'2021-3-15'</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>执行结果如下:</p>
<div><pre><code><span>>></span><span>></span> now<span>(</span><span>)</span>
execute now<span>(</span><span>)</span><span>:</span>
<span>2021</span><span>-</span><span>3</span><span>-</span><span>15</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>和两层嵌套的 decorator 相比，3 层嵌套的效果是这样的:</p>
<div><pre><code><span>>></span><span>></span> now <span>=</span> log<span>(</span><span>'execute'</span><span>)</span><span>(</span>now<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>我们来剖析上面的语句，首先执行 <code>log('execute')</code>，返回的是 decorator 函数，再调用返回的函数，参数是 <code>now</code> 函数，返回值最终是 <code>wrapper</code> 函数。</p>
<p>以上两种 decorator 的定义都没有问题，但还差最后一步。因为我们讲了函数也是对象，它有 <code>__name__</code>等属性，但您去看经过 decorator 装饰之后的函数，它们的 <code>__name__</code> 已经从原来的 <code>'now'</code> 变成了 <code>'wrapper'</code>:</p>
<div><pre><code><span>>></span><span>></span> now<span>.</span>__name__
<span>'wrapper'</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>因为返回的那个 <code>wrapper()</code> 函数名字就是 <code>'wrapper'</code>，所以，需要把原始函数的 <code>__name__</code> 等属性复制到 <code>wrapper()</code> 函数中，否则，有些依赖函数签名的代码执行就会出错。</p>
<p>不需要编写 <code>wrapper.__name__ = func.__name__</code> 这样的代码，Python 内置的 <code>functools.wraps</code> 就是干这个事的，所以，一个完整的 decorator 的写法如下:</p>
<div><pre><code><span>import</span> functools

<span>def</span> <span>log</span><span>(</span>func<span>)</span><span>:</span>
    <span>@functools<span>.</span>wraps</span><span>(</span>func<span>)</span>
    <span>def</span> <span>wrapper</span><span>(</span><span>*</span>args<span>,</span> <span>**</span>kw<span>)</span><span>:</span>
        <span>print</span><span>(</span><span>'call %s():'</span> <span>%</span> func<span>.</span>__name__<span>)</span>
<span>return</span> func<span>(</span><span>*</span>args<span>,</span><span>**</span>kw<span>)</span>
    <span>return</span> wrapper
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>或者针对带参数的 decorator:</p>
<div><pre><code><span>import</span> functools

<span>def</span> <span>log</span><span>(</span>text<span>)</span><span>:</span>
    <span>def</span> <span>decorator</span><span>(</span>func<span>)</span><span>:</span>
        <span>@functools<span>.</span>wraps</span><span>(</span>func<span>)</span>
        <span>def</span> <span>wrapper</span><span>(</span><span>*</span>args<span>,</span> <span>**</span>kw<span>)</span><span>:</span>
            <span>print</span><span>(</span><span>'%s %s():'</span> <span>%</span> <span>(</span>text<span>,</span> func<span>.</span>__name__<span>)</span><span>)</span>
<span>return</span> func<span>(</span><span>*</span>args<span>,</span><span>**</span>kw<span>)</span>
        <span>return</span> wrapper
    <span>return</span> decorator
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p><code>import functools</code> 是导入 <code>functools</code> 模块。模块的概念稍候讲解。现在，只需记住在定义 <code>wrapper()</code> 的前面加上 <code>@functools.wraps(func)</code> 即可。</p>
<h2 id="小结" tabindex="-1"> 小结</h2>
<p>在面向对象 (OOP) 的设计模式中，decorator 被称为装饰模式。OOP 的装饰模式需要通过继承和组合来实现，而 Python 除了能支持 OOP 的 decorator 外，直接从语法层次支持 decorator。Python 的 decorator 可以用函数实现，也可以用类实现。</p>
<p>decorator 可以增强函数的功能，定义起来虽然有点复杂，但使用起来非常灵活和方便。</p>
<p>请编写一个 decorator，能在函数调用的前后打印出 <code>'begin call'</code> 和 <code>'end call'</code> 的日志。</p>
<p>再思考一下能否写出一个 <code>@log</code> 的 decorator，使它既支持:</p>
<div><pre><code><span>@log</span>
<span>def</span> <span>f</span><span>(</span><span>)</span><span>:</span>
    <span>pass</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>又支持:</p>
<div><pre><code><span>@log</span><span>(</span><span>'execute'</span><span>)</span>
<span>def</span> <span>f</span><span>(</span><span>)</span><span>:</span>
    <span>pass</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>偏函数</title>
      <link>https://mrhope.site/code/language/python/functional-programming/parital-function.html</link>
      <guid>https://mrhope.site/code/language/python/functional-programming/parital-function.html</guid>
      <source url="https://mrhope.site/rss.xml">偏函数</source>
      <category>Python</category>
      <pubDate>Mon, 15 Mar 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Python 的 <code>functools</code> 模块提供了很多有用的功能，其中一个就是偏函数 (Partial function) 。</p>
<div><p>提示</p>
<p>要注意，这里的偏函数和数学意义上的偏函数不一样。</p>
</div>
<p>在介绍函数参数的时候，我们讲到，通过设定参数的默认值，可以降低函数调用的难度。而偏函数也可以做到这一点。举例如下:</p>
<p><code>int()</code> 函数可以把字符串转换为整数，当仅传入字符串时，<code>int()</code> 函数默认按十进制转换:</p>
<div><pre><code><span>>></span><span>></span> <span>int</span><span>(</span><span>'12345'</span><span>)</span>
<span>12345</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>但 <code>int()</code> 函数还提供额外的 <code>base</code> 参数，默认值为 <code>10</code>。如果传入 <code>base</code> 参数，就可以做 N 进制的转换:</p>
<div><pre><code><span>>></span><span>></span> <span>int</span><span>(</span><span>'12345'</span><span>,</span> base<span>=</span><span>8</span><span>)</span>
<span>5349</span>
<span>>></span><span>></span> <span>int</span><span>(</span><span>'12345'</span><span>,</span> <span>16</span><span>)</span>
<span>74565</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>假设要转换大量的二进制字符串，每次都传入 <code>int(x, base=2)</code> 非常麻烦，于是，我们想到，可以定义一个 <code>int2()</code> 的函数，默认把 <code>base=2</code> 传进去:</p>
<div><pre><code><span>def</span> <span>int2</span><span>(</span>x<span>,</span> base<span>=</span><span>2</span><span>)</span><span>:</span>
    <span>return</span> <span>int</span><span>(</span>x<span>,</span> base<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>这样，我们转换二进制就非常方便了:</p>
<div><pre><code><span>>></span><span>></span> int2<span>(</span><span>'1000000'</span><span>)</span>
<span>64</span>
<span>>></span><span>></span> int2<span>(</span><span>'1010101'</span><span>)</span>
<span>85</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p><code>functools.partial</code> 就是帮助我们创建一个偏函数的，不需要我们自己定义 <code>int2()</code>，可以直接使用下面的代码创建一个新的函数 <code>int2</code>:</p>
<div><pre><code><span>>></span><span>></span> <span>import</span> functools
<span>>></span><span>></span> int2 <span>=</span> functools<span>.</span>partial<span>(</span><span>int</span><span>,</span> base<span>=</span><span>2</span><span>)</span>
<span>>></span><span>></span> int2<span>(</span><span>'1000000'</span><span>)</span>
<span>64</span>
<span>>></span><span>></span> int2<span>(</span><span>'1010101'</span><span>)</span>
<span>85</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>所以，简单总结 <code>functools.partial</code> 的作用就是，把一个函数的某些参数给固定住 (也就是设置默认值) ，返回一个新的函数，调用这个新函数会更简单。</p>
<p>注意到上面的新的 <code>int2</code> 函数，仅仅是把 <code>base</code> 参数重新设定默认值为 <code>2</code>，但也可以在函数调用时传入其他值:</p>
<div><pre><code><span>>></span><span>></span> int2<span>(</span><span>'1000000'</span><span>,</span> base<span>=</span><span>10</span><span>)</span>
<span>1000000</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>最后，创建偏函数时，实际上可以接收函数对象、<code>*args</code> 和 <code>**kw</code> 这 3 个参数，当传入:</p>
<div><pre><code>int2 <span>=</span> functools<span>.</span>partial<span>(</span><span>int</span><span>,</span> base<span>=</span><span>2</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>实际上固定了 <code>int()</code> 函数的关键字参数 <code>base</code>，也就是:</p>
<div><pre><code>int2<span>(</span><span>'10010'</span><span>)</span>
相当于<span>:</span>

kw <span>=</span> <span>{</span> <span>'base'</span><span>:</span> <span>2</span> <span>}</span>
<span>int</span><span>(</span><span>'10010'</span><span>,</span> <span>**</span>kw<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>当传入:</p>
<div><pre><code>max2 <span>=</span> functools<span>.</span>partial<span>(</span><span>max</span><span>,</span> <span>10</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>实际上会把 10 作为 <code>*args</code> 的一部分自动加到左边，也就是:</p>
<div><pre><code>max2<span>(</span><span>5</span><span>,</span> <span>6</span><span>,</span> <span>7</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>相当于:</p>
<div><pre><code>args <span>=</span> <span>(</span><span>10</span><span>,</span> <span>5</span><span>,</span> <span>6</span><span>,</span> <span>7</span><span>)</span>
<span>max</span><span>(</span><span>*</span>args<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>结果为 <code>10</code>。</p>
<h2 id="小结" tabindex="-1"> 小结</h2>
<p>当函数的参数个数太多，需要简化时，使用 <code>functools.partial</code> 可以创建一个新的函数，这个新函数可以固定住原函数的部分参数，从而在调用时更简单。</p>
]]></content:encoded>
    </item>
    <item>
      <title>GitHub Pages</title>
      <link>https://mrhope.site/code/github/pages.html</link>
      <guid>https://mrhope.site/code/github/pages.html</guid>
      <source url="https://mrhope.site/rss.xml">GitHub Pages</source>
      <description>GitHub Pages 是静态站点托管服务，可直接从 GitHub 上的存储库中获取 HTML，CSS 和 JavaScript 文件，还可以选择在构建过程中运行这些文件并发布网站。
您可以将站点托管在 GitHub 的 github.io 域名或您自己的自定义域名上。
</description>
      <category>GitHub</category>
      <pubDate>Sat, 20 Feb 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>GitHub Pages 是静态站点托管服务，可直接从 GitHub 上的存储库中获取 HTML，CSS 和 JavaScript 文件，还可以选择在构建过程中运行这些文件并发布网站。</p>
<p>您可以将站点托管在 GitHub 的 <code>github.io</code> 域名或您自己的自定义域名上。</p>

<h2 id="简介" tabindex="-1"> 简介</h2>
<p>GitHub Pages 站点共有三种类型: 项目，用户和组织。</p>
<p>项目站点连接到 GitHub 上托管的特定项目，而用户和组织站点已连接到特定的 GitHub 帐户。</p>
<ul>
<li>要发布用户站点，您必须创建一个名为的用户帐户拥有的存储库 <code>&lt;username&gt;.github.io</code>。</li>
<li>要发布组织站点，您必须创建一个名为的组织所拥有的存储库 <code>&lt;organization&gt;.github.io</code>。</li>
</ul>
<p>除非您使用自定义域名，否则用户站点和组织站点均位于 <code>http(s)://&lt;username&gt;.github.io</code> 或 <code>http(s)://&lt;organization&gt;.github.io</code>。</p>
<p>项目站点的源文件与其项目存储在同一存储库中。除非您使用自定义域，否则项目站点可在 <code>http(s)://&lt;username&gt;.github.io/&lt;repository&gt;</code> 或 <code>http(s)://&lt;organization&gt;.github.io/&lt;repository&gt;</code> 访问。</p>
<p>虽然您只能在 GitHub 上为每个帐户创建一个用户或组织站点。但无论是组织还是用户帐户拥有的项目站点都是无限的。</p>
<h2 id="发布源文件到-github-pages" tabindex="-1"> 发布源文件到 GitHub Pages</h2>
<div><p>警告</p>
<p>GitHub Pages 站点 默认在互联网上公开，即使站点的仓库是私有的。</p>
</div>
<p>如果您的存储库中存在默认发布源，则 GitHub Pages 将自动从该源发布网站。用户和组织站点的默认发布源是存储库的默认分支的根目录。项目站点的默认发布源是 gh-pages 分支的根目录。</p>
<p>您需要跳转到 Settings (设置) 选项卡，下来找到 GitHub Pages 的配置部分。</p>
<div><p>提示</p>
<p>您只能在根目录 (<code>/</code>) 和 文档目录 (<code>/docs</code>) 之间进行选择，而不能将仓库内的任意文件夹作为发布源。</p>
</div>
<h3 id="静态站点" tabindex="-1"> 静态站点</h3>
<p>GitHub Pages 发布您推送到存储库的所有静态文件，这意味它不支持服务器端语言，例如 PHP，Ruby 或 Python。也就是您只能通过 GitHub Pages 发布 “无后端” 的纯静态站点。</p>
<h3 id="限制" tabindex="-1"> 限制</h3>
<ul>
<li>
<p>GitHub Pages 网站不得超过 1 GB。</p>
</li>
<li>
<p>GitHub Pages 站点的带宽限制为每月 100GB。</p>
</li>
<li>
<p>GitHub Pages 站点限制为每小时最多构建 10 次。</p>
</li>
</ul>
<h3 id="子模块" tabindex="-1"> 子模块</h3>
<p>如果 GitHub Pages 站点的仓库包含子模块，则在构建站点时会自动拉取其内容。</p>
<p>只能使用指向公共仓库的子模块，因为 GitHub Pages 服务器无法访问私有仓库。</p>
<p>对子模块 (包括嵌套子模块) 使用 <code>https://</code> 只读 URL。 您可以在 .gitmodules 文件中进行此更改。</p>
<h2 id="取消发布" tabindex="-1"> 取消发布</h2>
<h3 id="取消发布项目站点" tabindex="-1"> 取消发布项目站点</h3>
<ol>
<li>在 GitHub 上，导航到仓库的主页面。</li>
<li>如果仓库中存在 gh-pages 分支，请删除 gh-pages 分支。</li>
<li>在仓库名称下，单击 Settings (设置) 。</li>
<li>在“ GitHub Pages”下，使用 Source (源) 下拉菜单并选择 None (无) 。</li>
</ol>
<h3 id="取消发布用户或组织站点" tabindex="-1"> 取消发布用户或组织站点</h3>
<ol>
<li>在 GitHub 上，导航到仓库的主页面。</li>
<li>删除用作发布源的分支，或删除整个仓库。</li>
</ol>
<h2 id="自定义域名" tabindex="-1"> 自定义域名</h2>
<p>您可以在对应仓库的 Settings (设置) 选项卡设置自定义域名，同时您需要将自定义域名的 CNAME 记录指向 <code>&lt;用户名&gt;.github.io</code>。</p>
<div><p>提示</p>
<p>自定义域名的控制是由发布源文件夹下的 CNAME 文件控制的，您可以直接创建这个文件写入链接。</p>
<p>同时，GitHub Pages 要求这个文件一直存在，否则自定义域名会失效。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>cache</title>
      <link>https://mrhope.site/code/github/actions/cache.html</link>
      <guid>https://mrhope.site/code/github/actions/cache.html</guid>
      <source url="https://mrhope.site/rss.xml">cache</source>
      <description>这个 Action 允许您缓存依赖项和构建输出内容以缩短 Workflow 执行时间。
日常最多使用的就是缓存依赖项，在每个工作流程中，将安装后的依赖通过安装后生成的依赖版本文件的哈希值进行缓存。
当前工作流程的版本文件哈希值与历史缓存中的某一项完全相同时，直接载入这些依赖项缓存，这样就可以免去安装步骤。
缓存依赖
关于缓存依赖的文档，详见 缓存依赖项以加快工作流程


</description>
      <category>GitHub</category>
      <pubDate>Sat, 20 Feb 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>这个 Action 允许您缓存依赖项和构建输出内容以缩短 Workflow 执行时间。</p>
<p>日常最多使用的就是缓存依赖项，在每个工作流程中，将安装后的依赖通过安装后生成的依赖版本文件的哈希值进行缓存。</p>
<p>当前工作流程的版本文件哈希值与历史缓存中的某一项完全相同时，直接载入这些依赖项缓存，这样就可以免去安装步骤。</p>
<div><p>缓存依赖</p>
<p>关于缓存依赖的文档，详见 <a href="https://docs.github.com/cn/actions/guides/caching-dependencies-to-speed-up-workflows" target="_blank" rel="noopener noreferrer">缓存依赖项以加快工作流程
<ExternalLinkIcon/></a></p>
</div>

<h2 id="配置项" tabindex="-1"> 配置项</h2>
<h3 id="path" tabindex="-1"> path</h3>
<p>要缓存和还原的文件，目录和通配符模式的列表。</p>
<div><p>相关信息</p>
<p>支持的 glob 模式，请参见 <a href="https://github.com/actions/toolkit/tree/main/packages/glob" target="_blank" rel="noopener noreferrer">@actions/glob<ExternalLinkIcon/></a>。</p>
</div>
<h3 id="key" tabindex="-1"> key</h3>
<p>用于保存缓存与还原缓存的的密钥</p>
<h3 id="restore-keys" tabindex="-1"> restore-keys</h3>
<p>当 key 没有命中缓存是用于恢复缓存键值的有序列表</p>
<h2 id="输出" tabindex="-1"> 输出</h2>
<p><code>cache-hit</code>: 一个布尔值，表明是否找到与该键完全匹配的值</p>
<h2 id="缓存范围" tabindex="-1"> 缓存范围</h2>
<p>缓存的作用域为特定的键和分支。默认分支缓存可用于其他分支。</p>
<h2 id="案例" tabindex="-1"> 案例</h2>
<p>Yarn:</p>
<div><pre><code><span>-</span> <span>uses</span><span>:</span> actions/cache@v2
  <span># 使用此 id 获得 `cache-hit`</span>
  <span># (`steps.yarn-cache.outputs.cache-hit != 'true'`)</span>
  <span>id</span><span>:</span> yarn<span>-</span>cache
  <span>with</span><span>:</span>
    <span>path</span><span>:</span> node_modules/
    <span>key</span><span>:</span> $<span>{</span><span>{</span> runner.os <span>}</span><span>}</span><span>-</span>yarn<span>-</span>$<span>{</span><span>{</span> hashFiles('<span>**/yarn.lock')</span> <span>}</span><span>}</span>
    <span>restore-keys</span><span>:</span> <span>|</span><span>
      ${{ runner.os }}-yarn-</span>

<span>-</span> <span>name</span><span>:</span> Install Dependencies
  <span>if</span><span>:</span> steps.yarn<span>-</span>cache.outputs.cache<span>-</span>hit <span>!=</span> 'true'
  <span>run</span><span>:</span> yarn install
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><h2 id="创建一个缓存键" tabindex="-1"> 创建一个缓存键</h2>
<p>缓存键可以包括 GitHub Actions 支持的任何上下文，函数，文字和运算符。</p>
<p>例如，使用 <code>hashFiles</code> 功能可让您在依存关系更改时创建新的缓存。</p>
<div><pre><code><span>-</span> <span>uses</span><span>:</span> actions/cache@v2
  <span>id</span><span>:</span> yarn<span>-</span>cache
  <span>with</span><span>:</span>
    <span>path</span><span>:</span> <span>|</span><span>
      node_modules/</span>
    <span>key</span><span>:</span> $<span>{</span><span>{</span> runner.os <span>}</span><span>}</span><span>-</span>$<span>{</span><span>{</span> hashFiles('<span>**/yarn.lock')</span> <span>}</span><span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>利用 cache-hit 输出，当对应键命中特定缓存后，可以跳过后续步骤 (例如，安装或构建) 。</p>
<div><pre><code><span>-</span> <span>name</span><span>:</span> Install Dependencies
  <span>if</span><span>:</span> steps.yarn<span>-</span>cache.outputs.cache<span>-</span>hit <span>!=</span> 'true'
  <span>run</span><span>:</span> yarn install
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h2 id="缓存限制" tabindex="-1"> 缓存限制</h2>
<p>一个存储库最多可以有 5GB 的缓存。达到 5GB 限制后，将根据上次访问缓存的时间驱逐较早的缓存。过去未访问的缓存也将被自动删除。</p>
<h2 id="地址" tabindex="-1"> 地址</h2>
<p>地址: <a href="https://github.com/actions/cache" target="_blank" rel="noopener noreferrer">https://github.com/actions/cache<ExternalLinkIcon/></a></p>
]]></content:encoded>
    </item>
    <item>
      <title>github-pages-deploy</title>
      <link>https://mrhope.site/code/github/actions/gh-pages-deploy.html</link>
      <guid>https://mrhope.site/code/github/actions/gh-pages-deploy.html</guid>
      <source url="https://mrhope.site/rss.xml">github-pages-deploy</source>
      <description>github-pages-deploy-action 用于自动将网站内容部署到 GitHub Pages。
您可以使用这个 Action 将代码推送到您想要的任何分支中，包括 gh-pages 和 docs, 甚至可以处理跨存储库部署。
</description>
      <category>GitHub</category>
      <pubDate>Sat, 20 Feb 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>github-pages-deploy-action 用于自动将网站内容部署到 GitHub Pages。</p>
<p>您可以使用这个 Action 将代码推送到您想要的任何分支中，包括 gh-pages 和 docs, 甚至可以处理跨存储库部署。</p>

<h2 id="重要配置" tabindex="-1"> 重要配置</h2>
<h3 id="branch" tabindex="-1"> branch</h3>
<p>此项必填，填入您希望部署到的分支，例如 gh-pages 或 docs</p>
<h3 id="folder" tabindex="-1"> folder</h3>
<p>此项必填，填入存储库中要部署的文件夹。此项自动识别为相对路径。</p>
<ul>
<li>
<p>如您的构建输出到 dist 目录，可以直接设置 <code>dist</code></p>
</li>
<li>
<p>如果您希望部署根目录，请设置 <code>.</code></p>
</li>
<li>
<p>如果您希望使用绝对路径访问 workflow 所在的 server，请在路径前添加 <code>~</code></p>
</li>
</ul>
<h2 id="可选配置" tabindex="-1"> 可选配置</h2>
<h3 id="token" tabindex="-1"> token</h3>
<p>此选项默认为可访问存储库的 Token。</p>
<p>如果您需要更多权限 (例如，部署到另一个存储库) ，可以通过此选项设置个人访问令牌 (PAT) 。</p>
<p>本选项的值应该存储在 secrets 中。</p>
<div><p>提示</p>
<p>建议在生成新的 PAT 时选择所需的最少权限范围</p>
</div>
<h3 id="ssh-key" tabindex="-1"> ssh-key</h3>
<p>此选项可以填入部署用的 SSH 专用密钥，(本选项的值应该存储在 secrets 中)，也可以将其设置为 <code>true</code> 使用现有的 SSH 客户端配置，使用 SSH 部署。</p>
<h3 id="repository-name" tabindex="-1"> repository-name</h3>
<p>允许您指定其他存储库路径，只要您有权将其推送。格式应为: <code>用户名/存储库名称</code>。您需要设置 token 为 PAT，此配置选项才能正常运行。</p>
<h3 id="target-folder" tabindex="-1"> target-folder</h3>
<p>如果要将部署文件夹的内容推送到部署分支上的特定目录中，可以在此处指定。</p>
<h3 id="commit-message" tabindex="-1"> commit-message</h3>
<p>定制提交信息</p>
<h3 id="clean" tabindex="-1"> clean</h3>
<p>如果您的项目在构建时生成哈希文件，则可以使用此选项在每次部署时从部署分支的目标文件夹中自动将其删除。</p>
<p>此选项默认情况下处于启用状态，可以通过将其设置为来关闭 <code>false</code>。</p>
<div><p>提示</p>
<p>也就是每次部署默认是全新的，不会保留任何上一次部署的文件。您需要保证部署时您已经拥有了所有需要的文件。</p>
</div>
<h3 id="clean-exclude" tabindex="-1"> clean-exclude</h3>
<p>如果您需要使用 <code>clean</code> 但想保留某些文件或文件夹，则可以使用此选项。这应该在多行字符串中将每个模式包含为一行。</p>
<h3 id="single-commit" tabindex="-1"> single-commit</h3>
<p>如果您希望在部署分支只有一次最新的提交，而不是维护完整的历史记录，则可以将此选项切换为 <code>true</code>。</p>
<div><p>注意</p>
<p>使用此选项还将导致从部署分支中移除所有现有历史记录。</p>
</div>
<h2 id="案例" tabindex="-1"> 案例</h2>
<p>当构建完整网站后，请添加下列步骤:</p>
<div><pre><code><span>-</span> <span>name</span><span>:</span> Deploy 🚀
  <span>uses</span><span>:</span> JamesIves/github<span>-</span>pages<span>-</span>deploy<span>-</span>action@4.0.0
  <span>with</span><span>:</span>
    <span># 需要部署到的分支</span>
    <span>branch</span><span>:</span> gh<span>-</span>pages
    <span># 需要部署的文件夹</span>
    <span>folder</span><span>:</span> dist
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h2 id="地址" tabindex="-1"> 地址</h2>
<p>地址: <a href="https://github.com/JamesIves/github-pages-deploy-action" target="_blank" rel="noopener noreferrer">https://github.com/JamesIves/github-pages-deploy-action<ExternalLinkIcon/></a></p>
]]></content:encoded>
    </item>
    <item>
      <title>持续集成</title>
      <link>https://mrhope.site/code/basic/ci.html</link>
      <guid>https://mrhope.site/code/basic/ci.html</guid>
      <source url="https://mrhope.site/rss.xml">持续集成</source>
      <description>持续集成 (Continuous Integration) 指的是，频繁地 (一天多次) 将代码集成到主干，每次集成都通过自动化的构建 (包括编译，发布，自动化测试) 来验证，从而尽早地发现集成错误。
持续集成的目的让产品可以快速迭代，同时还能保持高质量。就是说每完成一个完整的部分，就向下个环节交付，发现问题可以马上调整，使得问题不会放大到其他部分和后面的环节。
</description>
      <category>基础</category>
      <pubDate>Thu, 18 Feb 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>持续集成 (Continuous Integration) 指的是，频繁地 (一天多次) 将代码集成到主干，每次集成都通过自动化的构建 (包括编译，发布，自动化测试) 来验证，从而尽早地发现集成错误。</p>
<p>持续集成的目的让产品可以快速迭代，同时还能保持高质量。就是说每完成一个完整的部分，就向下个环节交付，发现问题可以马上调整，使得问题不会放大到其他部分和后面的环节。</p>

<h2 id="介绍" tabindex="-1"> 介绍</h2>
<p>持续集成 (CI) 是一种需要频繁提交代码到共享仓库的软件实践。频繁提交代码能较早检测到错误，减少在查找错误来源时开发者需要调试的代码量。 频繁的代码更新也更便于从软件开发团队的不同成员合并更改。 这对开发者非常有益，他们可以将更多时间用于编写代码，而减少在调试错误或解决合并冲突上所花的时间。</p>
<p>提交代码到仓库时，可以持续创建并测试代码，以确保提交未引入错误。 您的测试可以包括代码语法检查 (检查样式格式) 、安全性检查、代码覆盖率、功能测试及其他自定义检查。</p>
<p>创建和测试代码需要服务器。 您可以在推送代码到仓库之前在本地创建并测试更新，也可以使用 CI 服务器检查仓库中的新代码提交。</p>
<h3 id="要点" tabindex="-1"> 要点</h3>
<p>它的核心措施是，代码集成到主干之前，必须通过自动化测试。只要有一个测试用例失败，就不能集成。</p>
<h3 id="优点" tabindex="-1"> 优点</h3>
<ol>
<li>
<p>提高开发效率</p>
</li>
<li>
<p>快速发现并定位 Bugs</p>
</li>
<li>
<p>更快速发布更新</p>
</li>
</ol>
<hr>
<p>与持续集成相关的，还有两个概念，分别是持续交付和持续部署。</p>
<h2 id="持续交付" tabindex="-1"> 持续交付</h2>
<p><strong>持续交付 (Continuous Delivery) 指的是，频繁地将软件的新版本，交付给质量团队或者用户，以供评审。</strong> 如果评审通过，代码就进入生产阶段。</p>
<p>持续交付可以看作持续集成的下一步。它强调的是，不管怎么更新，软件是随时随地可以交付的。</p>
<p>持续交付意味着所有的变更都可以被部署到生产环境中，如果代码没有问题，可以继续手动部署到生产环境中。</p>
<h2 id="持续部署" tabindex="-1"> 持续部署</h2>
<p><strong>持续部署 (Continuous Deployment) 是持续交付的下一步，指的是代码通过评审以后，自动部署到生产环境。</strong></p>
<p>持续部署的目标是，代码在任何时刻都是可部署的，可以进入生产阶段。</p>
<h2 id="流程" tabindex="-1"> 流程</h2>
<p>一个大型项目严格的流程如下:</p>
<ol>
<li>
<p>提交</p>
<p>流程的第一步，是开发者向代码仓库提交代码。所有后面的步骤都始于本地代码的一次提交 (commit)。</p>
</li>
<li>
<p>测试 (第一轮)</p>
<p>代码仓库对 commit 操作配置了钩子 (hook) ，只要提交代码或者合并进主干，就会跑自动化测试。</p>
<p>测试分为好几种,</p>
<ul>
<li>单元测试: 针对函数或模块的测试</li>
<li>集成测试: 针对整体产品的某个功能的测试，又称功能测试</li>
<li>端对端测试: 从用户界面直达数据库的全链路测试</li>
</ul>
<p>第一轮至少要跑单元测试。</p>
</li>
<li>
<p>构建</p>
<p>通过第一轮测试，代码就可以合并进主干，就算可以交付了。</p>
<p>交付后，就先进行构建 (build)，再进入第二轮测试。所谓构建，指的是将源码转换为可以运行的实际代码，比如安装依赖，配置各种资源 (样式表、JS 脚本、图片) 等等。</p>
<p>常用的构建工具如下,</p>
<ul>
<li>Jenkins</li>
<li>Travis</li>
<li>Codeship</li>
<li>Strider</li>
</ul>
<p>Jenkins 和 Strider 是开源软件， Travis 和 Codeship 对于开源项目可以免费使用。它们都会将构建和测试，在一次运行中执行完成。</p>
</li>
<li>
<p>测试 (第二轮)</p>
<p>构建完成，就要进行第二轮测试。如果第一轮已经涵盖了所有测试内容，第二轮可以省略，当然，这时构建步骤也要移到第一轮测试前面。</p>
<p>第二轮是全面测试，单元测试和集成测试都会跑，有条件的话，也要做端对端测试。所有测试以自动化为主，少数无法自动化的测试用例，就要人工跑。</p>
<p>需要强调的是，新版本的每一个更新点都必须测试到。如果测试的覆盖率不高，进入后面的部署阶段后，很可能会出现严重的问题。</p>
</li>
<li>
<p>部署</p>
<p>通过了第二轮测试，当前代码就是一个可以直接部署的版本 (artifact)。将这个版本的所有文件打包 (tar filename.tar *) 存档，发到生产服务器。</p>
<p>生产服务器将打包文件，解包成本地的一个目录，再将运行路径的符号链接 (symlink) 指向这个目录，然后重新启动应用。这方面的部署工具有 Ansible， Chef， Puppet 等。</p>
</li>
<li>
<p>回滚</p>
<p>一旦当前版本发生问题，就要回滚到上一个版本的构建结果。最简单的做法就是修改一下符号链接，指向上一个版本的目录。</p>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>Glob</title>
      <link>https://mrhope.site/code/basic/glob.html</link>
      <guid>https://mrhope.site/code/basic/glob.html</guid>
      <source url="https://mrhope.site/rss.xml">Glob</source>
      <description>本文介绍 Glob 匹配。
</description>
      <category>基础</category>
      <pubDate>Thu, 18 Feb 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>本文介绍 Glob 匹配。</p>

<h2 id="简介" tabindex="-1"> 简介</h2>
<p>Glob 是当您要进行路径匹配时键入的模式。</p>
<p>在解析一条匹配模式前，Glob 首先将 <code>{}</code> 部分展开为一组匹配模式。<code>{}</code> 内的模式之间使用逗号分隔。</p>
<p>如 <code>a{/b/c,bcd}</code> 将扩展为 <code>a/b/c</code> 和 <code>abcd</code></p>
<p><code>{}</code> 可以嵌套，可与其他模式联用。</p>
<p>Glob 的魔术字符如下:</p>
<ul>
<li>
<p><code>*</code>: 匹配路径部分中的 0 个或多个字符</p>
</li>
<li>
<p><code>?</code>: 匹配单个字符</p>
</li>
<li>
<p><code>[...]</code>: 匹配字符范围。<code>[^...]</code>和 <code>[!...]</code> 表示匹配不在范围内的字符</p>
<details><summary>例子</summary>
<ul>
<li><code>[xyz].js</code> 只能匹配 <code>x.js</code>, <code>y.js</code>, <code>z.js</code>，但不会匹配 <code>xy.js</code>, <code>xyz.js</code> 等，因为整个中括号只代表一个字符。其等价于 <code>[x-z].js</code></li>
<li><code>[!xyz].js</code> 能匹配 <code>a.js</code>, <code>b.js</code>, <code>u.js</code>，但不会匹配 <code>x.js</code>, <code>y.js</code> <code>z.js</code>，<code>ab.js</code> 等。其等价于 <code>[^xyz].js</code> 和 <code>[!x-z].js</code>。</li>
</ul>
</details>
</li>
<li>
<p><code>!(pattern|pattern|pattern)</code>: 匹配与提供的任何模式都不匹配的任何内容。</p>
</li>
<li>
<p><code>?(pattern|pattern|pattern)</code>: 匹配 0 或一个内部模式。</p>
</li>
<li>
<p><code>+(pattern|pattern|pattern)</code> 匹配一个或多个内部模式。</p>
</li>
<li>
<p><code>*(a|b|c)</code>: 匹配 0 或多个内部模式。</p>
</li>
<li>
<p><code>@(pattern|pat*|pat?erN)</code>: 匹配恰好一个内部模式。</p>
</li>
<li>
<p><code>**</code>: 如果其在路径部分中单独出现，则匹配路径中的 0 个或多个目录与子目录。请注意它不对 symlinked 目录 (符号链接目录) 进行爬取。</p>
<details><summary>例子</summary>
<ul>
<li><code>**</code> 能匹配匹配所有的目录和文件。</li>
<li><code>**/*.js</code> 能匹配所有的 js 文件。</li>
<li><code>a/**/b.txt</code> 能匹配目录里任何一个 a 文件夹内的所有 b.txt 文件。</li>
</ul>
</details>
</li>
</ul>
<h2 id="开头的文件与文件夹" tabindex="-1"> <code>.</code> 开头的文件与文件夹</h2>
<p>由于以 <code>.</code> 开头的文件或文件夹在 Unix 中视为隐藏文件或文件夹，故 Glob 不会匹配任何以 <code>.</code> 开头的路径部分，如 <code>.github/dependabot.yml</code> 或 <code>.eslintrc.js</code>。</p>
<p>如果的确想要匹配 <code>.</code> 开头的文件或文件夹，可以显示标注出来，如 <code>.*.js</code> 可以匹配 <code>.eslintrc.js</code>。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Pull Request</title>
      <link>https://mrhope.site/code/github/pr.html</link>
      <guid>https://mrhope.site/code/github/pr.html</guid>
      <source url="https://mrhope.site/rss.xml">Pull Request</source>
      <category>GitHub</category>
      <pubDate>Thu, 18 Feb 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="简介" tabindex="-1"> 简介</h2>
<p>对于一个用户的公开仓库，在默认情况下虽然其他用户可以拉取该库的代码，但是他们并不能够直接向这个库进行推送。</p>
<p>GitHub 是一个代码社区，这意味着鼓励大家互相提交与贡献代码。所以这就是 Fork 和 Pull Request 出现的意义。没有人会给一个陌生人添加访问自己仓库的权限，所以我们需要一种方式，能够让大家向仓库所有者发起贡献代码的请求。这就是 pull request 的由来。</p>
<h2 id="提交自己贡献的代码" tabindex="-1"> 提交自己贡献的代码</h2>
<p>对于代码贡献者来说，他需要用一种方法将自己贡献的代码推送到远程库上，以便发起请求，最好的办法就是 fork 原仓库。</p>
<p><img src="@source/code/github/assets/fork.png" alt="Fork 仓库"></p>
<div><p>相关信息</p>
<p>相关介绍，请见 <a href="/code/github/intro.html#fork">GitHub 简介 → fork</a></p>
</div>
<p>这样，贡献者在自己的账号上获得一个和原仓库完全相同的副本。</p>
<p>既然副本已经创建在自己的账号上，贡献者自然可以:</p>
<ol>
<li>克隆这个项目到本地</li>
<li>在这个项目上贡献自己的代码</li>
<li>将贡献的代码推送到这个副本上</li>
</ol>
<h2 id="发送请求" tabindex="-1"> 发送请求</h2>
<p>pull request 是请求仓库所有者拉取指定仓库分支代码的请求。</p>
<p>在贡献自己的代码并推送到自己的 fork 仓库后，贡献者即可到原仓库去选择自己仓库的对应分支发送这个拉取请求。仓库所有者随时可以批准这个更改，使其自动添加到自己的库中，或是拒绝这个请求。</p>
<p><img src="@source/code/github/assets/pull-request.png" alt="Pull request"></p>
<blockquote>
<p>这个仓库我已经删了所以显示 <code>unknown repository</code>，原为 <code>Mister-Hope:master</code></p>
</blockquote>
<p>这个页面允许所有人在主要对话线上交换自己的意见。</p>
<p>在 Pull request 里，一旦请求被创建，仓库所有者应该可以直观地看到哪些文件发生了怎样的改变。</p>
<p><img src="@source/code/github/assets/file-changes.png" alt="文件改动"></p>
<p>同时，他们也可以对贡献者的代码进行审查，对特定行或片段标注，并陈述自己的意见，同时将这个意见根据程度标注为“探讨”、“改进”或者“必须更改”，以便贡献者进行交流讨论与完善修改。</p>
<p><img src="@source/code/github/assets/pull-request-review.png" alt="代码审查"></p>
<p>同时，对于一个大型库来说，仓库所有者应该可以看到贡献的代码是否通过了所有测试。</p>
<p><img src="@source/code/github/assets/pull-request-check.png" alt="测试通过情况"></p>
<p>如果审查者认为没有问题，他可能就会通过这个拉取请求，拉取对应的代码到自己的仓库上。这样您就完成了对这个仓库的贡献。</p>
<h2 id="同步原仓库" tabindex="-1"> 同步原仓库</h2>
<p>需要注意的是，fork 创建的是一个时刻副本，也就是自己 fork 产生的仓库，会保持 fork 时的状态，原仓库的任何变动都不会自动同步到 fork 的仓库上。</p>
<p>有些时候，在自己 fork 原仓库、自己编写代码并提交的这段时间里，原仓库已经进行了很多提交。这时，我们就需要同步原仓库的更新到自己的副本上，以确保自己贡献的代码并未和新增代码发生冲突、可以正常工作。</p>
<p>这个时候只需反向拉取，在自己的仓库创建原仓库特定分支到自己仓库特定分支的 Pull request，并批准这个 pull request。这样即可很方便的将原仓库特定分支的更新同步到自己的副本上。</p>
<p>您当然可以在本地添加原仓库的远程库，将最新的更改直接 fetch 到本地，在本地测试通过并完成合并后，由本地推送至自己的 fork 仓库。</p>
]]></content:encoded>
    </item>
    <item>
      <title>加速 GitHub 克隆</title>
      <link>https://mrhope.site/code/github/speedup.html</link>
      <guid>https://mrhope.site/code/github/speedup.html</guid>
      <source url="https://mrhope.site/rss.xml">加速 GitHub 克隆</source>
      <category>GitHub</category>
      <pubDate>Thu, 18 Feb 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>由于天朝墙的存在，GitHub 的访问速度在大部分国内地区都很慢。如果需要克隆体积比较大的项目，可能需要很长时间，也很大概率会在中途因为网络波动、终端问题导致克隆失败。</p>
<p>本文介绍如何使用 Gitee 加快 GitHub 项目克隆。</p>
<h2 id="gitee" tabindex="-1"> Gitee</h2>
<p>Gitee 又称码云，是一个国内的代码托管商，国内访问 Gitee 的速度是十分 Amazing 的。</p>
<h3 id="注册" tabindex="-1"> 注册</h3>
<p>Gitee 账户可以很方便的通过 GitHub 账户 + 绑定手机号注册。</p>
<h3 id="添加公钥" tabindex="-1"> 添加公钥</h3>
<p>完成注册后，您需要上传本地公钥，以保证可以从 Gitee 上拉取或克隆，其步骤与 GitHub 大致相同。</p>
<h3 id="导入-github-仓库" tabindex="-1"> 导入 GitHub 仓库</h3>
<p>码云的企业专线访问 GitHub 的速度很快，而码云在新建仓库的时候提供了导入选项，这就给我们的加速提供了方式。</p>
<p>我们只需要在码云上新建仓库，选择导入，然后输入自己想要克隆的 GitHub 仓库地址，交给码云完成导入即可。</p>
<p>稍等片刻后，码云即会将 GitHub 的仓库同步到自己的服务器上，此时我们只需要克隆码云上的这个仓库地址，就可以高速克隆这个项目。</p>
<h3 id="远程库地址修改" tabindex="-1"> 远程库地址修改</h3>
<p>在克隆完毕后，本地的 origin 远程库会默认为 Gitee 的仓库，此时我们需要使用 <code>git remote rename origin gitee</code> 命令，将码云的远程仓库重命名为 <code>gitee</code>，并使用 <code>git remote add origin &lt;github url&gt;</code> 命令重新添加 GitHub 的远程仓库为 origin。</p>
<p>这样我们稍后在做出本地提交后，即可直接推送到 GitHub 仓库。</p>
<h3 id="同步仓库" tabindex="-1"> 同步仓库</h3>
<p>如果以导入的形式创建码云仓库。则可以随时点击仓库页面上的同步图标，让码云随时拉取最新的 gitee 代码，以便在本地通过 <code>git fetch gitee</code>，通过码云服务器高速拉取最新代码。</p>
]]></content:encoded>
    </item>
    <item>
      <title>GitHub Actions</title>
      <link>https://mrhope.site/code/github/actions/</link>
      <guid>https://mrhope.site/code/github/actions/</guid>
      <source url="https://mrhope.site/rss.xml">GitHub Actions</source>
      <category>GitHub</category>
      <pubDate>Thu, 18 Feb 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="目录" tabindex="-1"> 目录</h2>
<ul>
<li>
<p><a href="/code/github/actions/intro.html">GitHub Actions 介绍</a></p>
</li>
<li>
<p><a href="/code/github/actions/config.html">Workflow 配置</a></p>
</li>
</ul>
<h2 id="常用-github-action" tabindex="-1"> 常用 GitHub Action</h2>
<ul>
<li>
<p><a href="/code/github/actions/checkout.html">checkout</a></p>
</li>
<li>
<p><a href="/code/github/actions/cache.html">cache</a></p>
</li>
<li>
<p><a href="/code/github/actions/gh-pages-deploy.html">GitHub Pages 部署</a></p>
</li>
</ul>
<h2 id="官方文档" tabindex="-1"> 官方文档</h2>
<ul>
<li>
<p><a href="https://docs.github.com/cn/actions" target="_blank" rel="noopener noreferrer">文档地址<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://help.github.com/en/actions/reference/events-that-trigger-workflows" target="_blank" rel="noopener noreferrer">Workflow 触发事件<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions" target="_blank" rel="noopener noreferrer">Workflow 配置<ExternalLinkIcon/></a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>checkout</title>
      <link>https://mrhope.site/code/github/actions/checkout.html</link>
      <guid>https://mrhope.site/code/github/actions/checkout.html</guid>
      <source url="https://mrhope.site/rss.xml">checkout</source>
      <description>该操作将检出您的存储库 $GITHUB_WORKSPACE，使您的工作流可以访问它。
</description>
      <category>GitHub</category>
      <pubDate>Thu, 18 Feb 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>该操作将检出您的存储库 <code>$GITHUB_WORKSPACE</code>，使您的工作流可以访问它。</p>

<p>默认情况下，对于触发工作流的 ref / SHA，为了速度仅提取一次提交。如需获取所有分支和标签的所有历史记录，需要设置设置 <code>fetch-depth: 0</code>。</p>
<p>身份验证令牌保留在本地 Git 配置中。这使您的脚本可以运行经过身份验证的 Git 命令。在工作后清理期间将删除令牌。</p>
<p>设置 <code>persist-credentials: false</code> 取消保留。</p>
<h2 id="常用参数" tabindex="-1"> 常用参数</h2>
<h3 id="ref" tabindex="-1"> ref</h3>
<p>需要检出的 ref，即可以填入特定分支、commitID 或 tag。默认为触发当前工作流的 ref。</p>
<h3 id="token" tabindex="-1"> token</h3>
<p>个人访问令牌，又称 Personal access token (PAT)，用于配置机器 Git 配置，以运行需要身份验证的 Git 命令。</p>
<div>
<p>默认为工作流提供的 <code>${{ github.token }}</code></p>
</div>
<h3 id="fetch-depth" tabindex="-1"> fetch-depth</h3>
<p>要获取的提交数。 <code>0</code> 表示所有分支和标签的所有历史记录。</p>
<p>默认为 <code>1</code></p>
<h3 id="submodules" tabindex="-1"> submodules</h3>
<p>是否检出子模块。<code>true</code> 检出子模块 <code>recursive</code> 会递归检出子模块。</p>
<p>默认为 <code>false</code></p>
<h2 id="其他参数" tabindex="-1"> 其他参数</h2>
<h3 id="repository" tabindex="-1"> repository</h3>
<p>带有作者的仓库名，如 <code>Hope-Studio/innenu-app</code>，默认为当前仓库。</p>
<h3 id="persist-credentials" tabindex="-1"> persist-credentials</h3>
<p>是否将 token 等信息用于本地的 Git 配置，以便后续 Git 命令可以访问。</p>
<h3 id="path" tabindex="-1"> path</h3>
<p><code>$GITHUB_WORKSPACE</code> 下用于放置存储库的相对路径</p>
<p>默认为 <code>./</code></p>
<h3 id="ssh-key" tabindex="-1"> ssh-key</h3>
<p>用于获取仓库的 SSH 私钥，用于配置机器 Git 配置，以运行需要身份验证的 Git 命令。</p>
<div><p>提示</p>
<p>默认的 token 有权限拉取工作流所在的仓库。</p>
<p>如果仓库包含了存放于其他代码托管商或私有的 submodules，或是的仓库，可能需要设置上述两选项之一，才能拉取对应 submodule。</p>
</div>
<h3 id="ssh-known-hosts" tabindex="-1"> ssh-known-hosts</h3>
<p>除了用户和全局主机密钥数据库外的已知主机。可以使用 <code>ssh-keyscan</code> 获得主机的公共 SSH 密钥。 例如，<code>ssh-keyscan github.com</code>。 github.com 的公钥总是隐式添加的。</p>
<div><p>相关信息</p>
<p>当您需要获取其他代码托管商的仓库时，需要设置此选项</p>
</div>
<h3 id="ssh-strict" tabindex="-1"> ssh-strict</h3>
<p>是否进行严格的 ssh 校验，默认为 <code>true</code>，即不检查 IP，而是检查 Host 给出的密钥指纹是否匹配。</p>
<h3 id="clean" tabindex="-1"> clean</h3>
<p>是否在拉取代码前执行 <code>git clean -ffdx &amp;&amp; git reset --hard HEAD</code>。</p>
<p>默认为 <code>true</code></p>
<h3 id="lfs" tabindex="-1"> lfs</h3>
<p>是否下载 Git-LFS 文件。</p>
<p>默认为 <code>false</code></p>
<h2 id="例子" tabindex="-1"> 例子</h2>
<ul>
<li>
<p>获取所有标签与历史:</p>
<div><pre><code><span>-</span> <span>uses</span><span>:</span> actions/checkout@v2
  <span>with</span><span>:</span>
    <span>fetch-depth</span><span>:</span> <span>0</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div></li>
<li>
<p>检出特定分支</p>
</li>
</ul>
<div><pre><code><span>-</span> <span>uses</span><span>:</span> actions/checkout@v2
  <span>with</span><span>:</span>
    <span>ref</span><span>:</span> my<span>-</span>branch
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><ul>
<li>
<p>检出 <code>HEAD^</code></p>
<div><pre><code><span>-</span> <span>uses</span><span>:</span> actions/checkout@v2
  <span>with</span><span>:</span>
    <span>fetch-depth</span><span>:</span> <span>2</span>
<span>-</span> <span>run</span><span>:</span> git checkout HEAD^
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div></li>
<li>
<p>并列检出多个 repo</p>
<div><pre><code><span>-</span> <span>name</span><span>:</span> Checkout
  <span>uses</span><span>:</span> actions/checkout@v2
  <span>with</span><span>:</span>
    <span>path</span><span>:</span> main

<span>-</span> <span>name</span><span>:</span> Checkout tools repo
  <span>uses</span><span>:</span> actions/checkout@v2
  <span>with</span><span>:</span>
    <span>repository</span><span>:</span> my<span>-</span>org/my<span>-</span>tools
    <span>path</span><span>:</span> my<span>-</span>tools
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div></li>
<li>
<p>嵌套检出多个 repo</p>
<div><pre><code><span>-</span> <span>name</span><span>:</span> Checkout
  <span>uses</span><span>:</span> actions/checkout@v2

<span>-</span> <span>name</span><span>:</span> Checkout tools repo
  <span>uses</span><span>:</span> actions/checkout@v2
  <span>with</span><span>:</span>
    <span>repository</span><span>:</span> my<span>-</span>org/my<span>-</span>tools
    <span>path</span><span>:</span> my<span>-</span>tools
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div></li>
<li>
<p>检出多个私有 repo</p>
<div><pre><code><span>-</span> <span>name</span><span>:</span> Checkout
  <span>uses</span><span>:</span> actions/checkout@v2
  <span>with</span><span>:</span>
    <span>path</span><span>:</span> main

<span>-</span> <span>name</span><span>:</span> Checkout private tools
  <span>uses</span><span>:</span> actions/checkout@v2
  <span>with</span><span>:</span>
    <span>repository</span><span>:</span> my<span>-</span>org/my<span>-</span>private<span>-</span>tools
    <span>token</span><span>:</span> $<span>{</span><span>{</span> secrets.GitHub_PAT <span>}</span><span>}</span> <span># `GitHub_PAT` is a secret that contains your PAT</span>
    <span>path</span><span>:</span> my<span>-</span>tools
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div></li>
</ul>
<div><p>相关信息</p>
<div>
<p><code>${{ github.token }}</code> 仅限于当前存储库，因此，如果要签出其他私有存储库，则需要提供自己的 PAT。</p>
</div>
</div>
<ul>
<li>
<p>检出 PR HEAD commit 而不是 merge commit</p>
<div><pre><code><span>-</span> <span>uses</span><span>:</span> actions/checkout@v2
  <span>with</span><span>:</span>
    <span>ref</span><span>:</span> $<span>{</span><span>{</span> github.event.pull_request.head.sha <span>}</span><span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div></li>
<li>
<p>当关闭 PR 时将其检出</p>
<div><pre><code><span>on</span><span>:</span>
  <span>pull_request</span><span>:</span>
    <span>branches</span><span>:</span> <span>[</span>main<span>]</span>
    <span>types</span><span>:</span> <span>[</span>opened<span>,</span> synchronize<span>,</span> closed<span>]</span>
<span>jobs</span><span>:</span>
  <span>build</span><span>:</span>
    <span>runs-on</span><span>:</span> ubuntu<span>-</span>latest
    <span>steps</span><span>:</span>
      <span>-</span> <span>uses</span><span>:</span> actions/checkout@v2
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div></li>
<li>
<p>使用内置 token 进行提交</p>
<div><pre><code><span>on</span><span>:</span> push
<span>jobs</span><span>:</span>
  <span>build</span><span>:</span>
    <span>runs-on</span><span>:</span> ubuntu<span>-</span>latest
    <span>steps</span><span>:</span>
      <span>-</span> <span>uses</span><span>:</span> actions/checkout@v2
      <span>-</span> <span>run</span><span>:</span> <span>|</span><span>
          date > generated.txt
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "generated"
          git push</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div></li>
</ul>
<h2 id="地址" tabindex="-1"> 地址</h2>
<p>地址: <a href="https://github.com/actions/checkout" target="_blank" rel="noopener noreferrer">https://github.com/actions/checkout<ExternalLinkIcon/></a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Action 配置</title>
      <link>https://mrhope.site/code/github/actions/config.html</link>
      <guid>https://mrhope.site/code/github/actions/config.html</guid>
      <source url="https://mrhope.site/rss.xml">Action 配置</source>
      <description>GitHub Actions 的配置文件叫做 workflow 文件，存放在代码仓库的 .github/workflows 目录。
workflow 文件采用 YAML 格式，文件名可以任意取，但是后缀名统一为 .yml，比如foo.yml。
一个库可以有多个 workflow 文件。GitHub 只要发现 .github/workflows 目录里面有 .yml 文件，就会自动运行该文件。
</description>
      <category>GitHub</category>
      <pubDate>Thu, 18 Feb 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>GitHub Actions 的配置文件叫做 <code>workflow</code> 文件，存放在代码仓库的 <code>.github/workflows</code> 目录。</p>
<p><code>workflow</code> 文件采用 <code>YAML</code> 格式，文件名可以任意取，但是后缀名统一为 <code>.yml</code>，比如<code>foo.yml</code>。</p>
<p>一个库可以有多个 <code>workflow</code> 文件。GitHub 只要发现 <code>.github/workflows</code> 目录里面有 <code>.yml</code> 文件，就会自动运行该文件。</p>

<h2 id="常见字段" tabindex="-1"> 常见字段</h2>
<p><code>workflow</code> 文件的配置字段非常多。下面是一些基本字段。</p>
<h3 id="name" tabindex="-1"> name</h3>
<p><code>name</code> 字段是 <code>workflow</code> 的名称。如果省略该字段，默认为当前 <code>workflow</code> 的文件名。</p>
<div><pre><code><span>name</span><span>:</span> GitHub Actions Demo
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><h3 id="on" tabindex="-1"> on</h3>
<p><code>on</code> 字段指定触发 <code>workflow</code> 的时机，通常是某些事件。</p>
<div><pre><code><span># 指定 push 事件触发 workflow。</span>
<span>on</span><span>:</span> push
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p><code>on</code> 字段也可以是事件的数组。</p>
<div><pre><code><span># 指定 push 事件或 pull_request 事件都可以触发 workflow。</span>
<span>on</span><span>:</span> <span>[</span>push<span>,</span> pull_request<span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>完整的事件列表，请查看官方文档。
除了代码库事件，GitHub Actions 也支持外部事件触发，或者定时运行。</p>
<h4 id="on-push-pull-request-tags-branches" tabindex="-1"> on.&lt;push|pull_request&gt;.&lt;tags|branches&gt;</h4>
<p>指定触发事件时，可以限定分支或标签。</p>
<div><pre><code><span># 指定只有 master 分支发生 push 事件时，才会触发 workflow。</span>
<span>on</span><span>:</span>
  <span>push</span><span>:</span>
    <span>branches</span><span>:</span>
      <span>-</span> master
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h3 id="jobs" tabindex="-1"> jobs</h3>
<p><code>workflow</code> 文件的主体是 <code>jobs</code> 字段，表示要执行的一项或多项任务。</p>
<p><code>jobs</code> 字段里面，需要写出每一项任务的 <code>job_id</code>，具体名称自定义。</p>
<h4 id="jobs-job-id-name" tabindex="-1"> jobs.&lt;job_id&gt;.name</h4>
<p><code>job_id</code> 里面的 <code>name</code> 字段是任务的说明(可填可不填)。</p>
<div><pre><code><span>jobs</span><span>:</span>
  <span>my_first_job</span><span>:</span>
    <span>name</span><span>:</span> My first job
  <span>my_second_job</span><span>:</span>
    <span>name</span><span>:</span> My second job
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>上面代码的 <code>jobs</code> 字段包含两项任务，<code>job_id</code> 分别是 <code>my_first_job</code> 和 <code>my_second_job</code>。</p>
<h4 id="jobs-job-id-needs" tabindex="-1"> jobs.&lt;job_id&gt;.needs</h4>
<p><code>needs</code> 字段指定当前任务的依赖关系，即运行顺序。</p>
<div><pre><code><span># 这个 workflow 的运行顺序依次为: job1、job2、job3。</span>
<span>jobs</span><span>:</span>
  <span>job1</span><span>:</span>
  <span>job2</span><span>:</span>
    <span>needs</span><span>:</span> job1
  <span>job3</span><span>:</span>
    <span>needs</span><span>:</span> <span>[</span>job1<span>,</span> job2<span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h4 id="jobs-job-id-runs-on" tabindex="-1"> jobs.&lt;job_id&gt;.runs-on</h4>
<p><code>runs-on</code> 字段指定运行所需要的虚拟机环境。
它是<strong>必填字段</strong>。目前可用的虚拟机如下。</p>
<p><code>ubuntu-latest</code>，<code>ubuntu-18.04</code> 或 <code>ubuntu-16.04</code></p>
<p><code>windows-latest</code>，<code>windows-2019</code> 或 <code>windows-2016</code></p>
<p><code>macOS-latest</code> 或 <code>macOS-10.14</code></p>
<div><pre><code><span># 代码指定虚拟机环境为 ubuntu-18.04。</span>
<span>runs-on</span><span>:</span> ubuntu<span>-</span><span>18.04</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><h4 id="jobs-job-id-steps" tabindex="-1"> jobs.&lt;job_id&gt;.steps</h4>
<p><code>steps</code> 字段指定每个 <code>Job</code> 的运行步骤，可以包含一个或多个步骤。每个步骤都可以指定以下三个字段。</p>
<ul>
<li><code>jobs.&lt;job_id&gt;.steps.name</code>: 步骤名称。</li>
<li><code>jobs.&lt;job_id&gt;.steps.run</code>: 该步骤运行的命令或者 action。</li>
<li><code>jobs.&lt;job_id&gt;.steps.env</code>: 该步骤所需的环境变量。</li>
</ul>
<p>下面是一个完整的 <code>workflow</code> 文件的范例。</p>
<div><pre><code><span>name</span><span>:</span> Greeting from Mona
<span>on</span><span>:</span> push

<span>jobs</span><span>:</span>
  <span>my-job</span><span>:</span>
    <span>name</span><span>:</span> My Job
    <span>runs-on</span><span>:</span> ubuntu<span>-</span>latest
    <span>steps</span><span>:</span> <span># steps 字段只包括一个步骤。该步骤先注入四个环境变量，然后执行一条 Bash 命令。</span>
      <span>-</span> <span>name</span><span>:</span> Print a greeting
        <span>env</span><span>:</span>
          <span>MY_VAR</span><span>:</span> Hi there<span>!</span> My name is
          <span>FIRST_NAME</span><span>:</span> Mona
          <span>MIDDLE_NAME</span><span>:</span> The
          <span>LAST_NAME</span><span>:</span> Octocat
        <span>run</span><span>:</span> <span>|</span><span>
          echo $MY_VAR $FIRST_NAME $MIDDLE_NAME $LAST_NAME.</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><h2 id="官方文档" tabindex="-1"> 官方文档</h2>
<p>关于完整的工作流程语法，详见 <a href="https://docs.github.com/cn/actions/reference/workflow-syntax-for-github-actions" target="_blank" rel="noopener noreferrer">GitHub 操作的工作流程语法<ExternalLinkIcon/></a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Actions 介绍</title>
      <link>https://mrhope.site/code/github/actions/intro.html</link>
      <guid>https://mrhope.site/code/github/actions/intro.html</guid>
      <source url="https://mrhope.site/rss.xml">Actions 介绍</source>
      <description>在 GitHub Actions 的仓库中自动化、自定义和执行软件开发工作流程。
您可以发现、创建和共享操作以执行您喜欢的任何作业 (包括 CI/CD) ，并将操作合并到完全自定义的工作流程中。
</description>
      <category>GitHub</category>
      <pubDate>Thu, 18 Feb 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>在 GitHub Actions 的仓库中自动化、自定义和执行软件开发工作流程。</p>
<p>您可以发现、创建和共享操作以执行您喜欢的任何作业 (包括 CI/CD) ，并将操作合并到完全自定义的工作流程中。</p>

<h2 id="特点" tabindex="-1"> 特点</h2>
<ul>
<li>
<p>GitHub 把组成持续集成的操作称为 actions。</p>
</li>
<li>
<p>GitHub 允许开发者把每个操作写成独立的脚本文件，存放到代码仓库，使得其他开发者可以引用。</p>
</li>
<li>
<p>如果您需要某个 action，不必自己写复杂的脚本，直接引用他人写好的 action 即可，整个持续集成过程，就变成了一个 actions 的组合。这就是 GitHub Actions 最特别的地方。</p>
</li>
<li>
<p>GitHub 做了一个官方市场，可以搜索到他人提交的 actions。另外， <a href="https://github.com/sdras/awesome-actions" target="_blank" rel="noopener noreferrer">awesome actions<ExternalLinkIcon/></a> 仓库收集了很多有用的 actions。</p>
</li>
</ul>
<div><p>持续集成</p>
<p>关于持续集成 (CI) 的概念与介绍，详见 <a href="/code/basic/ci.html">基础 → 持续集成</a></p>
</div>
<h2 id="简介" tabindex="-1"> 简介</h2>
<p>GitHub Actions 帮助您自动完成软件开发周期内的任务。 GitHub Actions 是事件驱动的，意味着您可以在指定事件发生后运行一系列命令。 例如，每次有人为仓库创建拉取请求时，您都可以自动运行命令来执行软件测试脚本。</p>
<h2 id="组件" tabindex="-1"> 组件</h2>
<p>下面是一起运行作业的多个 GitHub Actions 组件列表。 您可以查看这些组件如何相互作用。</p>
<h3 id="workflow" tabindex="-1"> workflow</h3>
<p>工作流程 (workflow) 是您添加到仓库的自动化过程。 工作流程由一项或多项作业组成，可以计划或由事件触发。 工作流程可用于在 GitHub 上构建、测试、打包、发布或部署项目。</p>
<p>持续集成一次运行的过程，就是一个 workflow。</p>
<h3 id="event" tabindex="-1"> event</h3>
<p>事件 (event) 是触发工作流程的特定活动。 例如，当有推送提交到仓库或者创建议题或拉取请求时，GitHub 就可能产生活动。</p>
<p>您还可以使用仓库的 web hook 在发生外部事件时触发工作流程。</p>
<div><p>提示</p>
<p>事件是 workflow 执行的判定。可以通过配置工作流程，来决定在哪些事件被触发执行。</p>
<p>同时工作流也可以读取触发事件的相关信息，以在不同情况下执行不同的任务。</p>
</div>
<h3 id="jobs" tabindex="-1"> Jobs</h3>
<p>作业 (job) 是在同一运行服务器上执行的一组步骤。</p>
<p>默认情况下，包含多个作业的工作流程将同时运行这些作业。</p>
<p>您也可以配置工作流程按顺序运行作业。例如，工作流程可以有两个连续的任务来构建和测试代码，其中测试作业取决于构建作业的状态。如果构建作业失败，测试作业将不会运行。</p>
<div><p>提示</p>
<p>作业是工作流程中一个完整任务的封装。</p>
<p>一个 workflow 由一个或多个 jobs 构成，一次持续集成的运行，可以完成多个作业，对应多个任务。</p>
</div>
<h3 id="steps" tabindex="-1"> Steps</h3>
<p>步骤 (step) 是可以在作业中运行命令的单个任务。步骤可以是操作或 shell 命令。</p>
<p>作业中的每个步骤在同一运行器上执行，可让该作业中的操作互相共享数据。</p>
<div><p>提示</p>
<p>每个 job 由多个 step 构成，一步步完成。</p>
</div>
<h3 id="action" tabindex="-1"> Action</h3>
<p>操作 (Action) 是独立命令，它们组合到步骤以创建作业。</p>
<p>操作是工作流程最小的便携式构建块。 您可以创建自己的操作，也可以使用 GitHub 社区创建的操作。要在工作流程中使用操作，必须将其作为一个步骤。</p>
<h3 id="server" tabindex="-1"> Server</h3>
<p>运行器 (Server) 是安装了 GitHub Actions 运行器应用程序的服务器。</p>
<p>您可以使用 GitHub 托管的运行器或托管您自己的运行器。运行器将侦听可用的作业，每次运行一个作业，并将进度、日志和结果报告回 GitHub。</p>
<p>对于 GitHub 托管的运行器，工作流程中的每项作业都会在一个新的虚拟环境中运行。</p>
<p>GitHub 托管的运行器基于 Ubuntu Linux、Microsoft Windows 和 macOS。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Windows Terminal</title>
      <link>https://mrhope.site/software/tool/terminal/</link>
      <guid>https://mrhope.site/software/tool/terminal/</guid>
      <source url="https://mrhope.site/rss.xml">Windows Terminal</source>
      <description>Windows Terminal 是一个面向命令行工具和 shell(如命令提示符、PowerShell 和适用于 Linux 的 Windows 子系统 (WSL))用户的新式终端应用程序。
</description>
      <pubDate>Wed, 27 Jan 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Windows Terminal 是一个面向命令行工具和 shell(如命令提示符、PowerShell 和适用于 Linux 的 Windows 子系统 (WSL))用户的新式终端应用程序。</p>

<p><img src="@source/software/tool/assets/terminal-overview.png" alt="Windows Terminal"></p>
<h2 id="特点" tabindex="-1"> 特点</h2>
<ul>
<li>
<p>多选项卡与窗格</p>
<p>可以同时运行多个终端并自由布局与切换</p>
</li>
<li>
<p>自定义方案和配置</p>
<p>可在 Windows Terminal 中使用多种自定义命令，获得更加自然的体验。 如果不喜欢特定的键盘快捷方式，可以将其更改为您喜欢的方式。</p>
</li>
<li>
<p>强大的可配置主题</p>
<p>可以自由配置 Windows Terminal 的配色方案</p>
<p>可以在 Windows Terminal 窗口中显示背景图像和 GIF</p>
</li>
<li>
<p>扩展性，支持连接众多平台</p>
<p>任何具有命令行接口的应用程序都可以在 Windows Terminal 中运行。 这包括从 PowerShell 和命令提示符到 Azure Cloud Shell 和任何 WSL 分发 (如 Ubuntu 或 Oh-My-Zsh) 的所有应用程序。</p>
</li>
<li>
<p>Unicode 和 UTF-8 字符支持</p>
<p>Windows Terminal 可以显示 Unicode 和 UTF-8 字符，如各种语言的表情符号和字符。</p>
</li>
<li>
<p>GPU 加速文本呈现引擎</p>
<p>Windows Terminal 使用 GPU 来呈现其文本，从而提供比默认 Windows 命令行体验更好的性能。</p>
</li>
<li>
<p>开源</p>
</li>
</ul>
<h2 id="教程" tabindex="-1"> 教程</h2>
<ul>
<li><a href="/software/tool/terminal/get-started.html">快速上手</a></li>
<li><a href="/software/tool/terminal/settings.html">自定义设置</a></li>
</ul>
<h2 id="官方文档" tabindex="-1"> 官方文档</h2>
<ul>
<li><a href="https://aka.ms/terminal-documentation" target="_blank" rel="noopener noreferrer">官方文档<ExternalLinkIcon/></a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>快速上手</title>
      <link>https://mrhope.site/software/tool/terminal/get-started.html</link>
      <guid>https://mrhope.site/software/tool/terminal/get-started.html</guid>
      <source url="https://mrhope.site/rss.xml">快速上手</source>
      <pubDate>Wed, 27 Jan 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="安装" tabindex="-1"> 安装</h2>
<p>您可以通过 <a href="https://aka.ms/terminal" target="_blank" rel="noopener noreferrer">Microsoft Store<ExternalLinkIcon/></a> 进行安装，同样您可以访问 <a href="https://github.com/microsoft/terminal/releases/" target="_blank" rel="noopener noreferrer">GitHub release<ExternalLinkIcon/></a> 下载任意版本可执行文件。</p>
<div><p>注意</p>
<p>从 GitHub 安装，终端将不会自动更新为新版本。</p>
</div>
<h2 id="使用" tabindex="-1"> 使用</h2>
<p>打开终端时，Windows Terminal 会在打开的选项卡中通过 PowerShell 作为默认配置文件启动。</p>
<p>如果已安装 WSL(Windows Subsystem for Linux) 发行版或多个版本的 PowerShell，终端将自动为您创建配置文件。</p>
<h3 id="打开新选项卡" tabindex="-1"> 打开新选项卡</h3>
<p>您可以使用 <code>Ctrl + Shift + T</code> 快捷键或选择 + (加号)按钮，打开默认配置文件的新选项卡。</p>
<p>若要打开其他配置文件，请选择 + 按钮旁的 ˅(箭头)打开下拉菜单，从中选择要打开的配置文件。</p>
<p><img src="@source/software/tool/assets/terminal-dropdown.png" alt="下拉菜单"></p>
<h3 id="打开新窗格" tabindex="-1"> 打开新窗格</h3>
<p>可以使用窗格并行运行多个 shell。 若要打开窗格，可以使用 <code>Alt + Shift + D</code>。 此键绑定将打开焦点配置文件的重复窗格。</p>
<h3 id="配置" tabindex="-1"> 配置</h3>
<p>若要自定义 Windows Terminal 的设置，请在下拉菜单中选择“设置”。 这会在默认文本编辑器中打开 settings.json 文件。</p>
<p>终端支持自定义影响整个应用程序的全局属性、影响每个配置文件的设置的配置文件属性以及允许您使用键盘与终端交互的键绑定。</p>
<div><p>命令行参数</p>
<p>可以使用命令行参数在特定配置中启动终端。 这些参数允许通过自定义配置文件设置打开具有特定选项卡和窗格的终端。</p>
</div>
<p>详情请见 <a href="/software/tool/terminal/settings.html">自定义设置</a>。</p>
<h2 id="命令行" tabindex="-1"> 命令行</h2>
<p>可以使用 <code>wt.exe</code> 从命令行打开 Windows 终端的新实例。 还可以改为使用执行别名 <code>wt</code>。</p>
<h3 id="语法" tabindex="-1"> 语法</h3>
<p><code>wt</code> 命令行接受两种类型的值: “选项”和“命令” 。 “选项”是一系列标志和其他参数，可以将 <code>wt</code> 命令行的行为作为一个整体来控制。 “命令”提供应该实现的操作或操作列表(以分号分隔)。 如果未指定命令，则默认情况下会将命令指定为 <code>new-tab</code>。</p>
<div><pre><code>wt <span>[</span>options<span>]</span> <span>[</span>command <span>;</span> <span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><div><p>提示</p>
<p>若要显示列出可用命令行参数的帮助消息，请输入 <code>wt -h</code></p>
</div>
<h3 id="选项和命令" tabindex="-1"> 选项和命令</h3>
<p>下面是 wt 命令行支持的命令和选项的完整列表。</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>--help</code>、<code>-h</code>、<code>-?</code>、<code>/?</code></td>
<td>显示帮助消息。</td>
</tr>
<tr>
<td><code>--maximized</code>、<code>-M</code></td>
<td>以最大化形式启动终端。</td>
</tr>
<tr>
<td><code>--fullscreen</code>、<code>-F</code></td>
<td>以全屏形式启动终端。</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>命令</th>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>new-tab</code></td>
<td><code>--profile, -p profile-name</code>、<code>--startingDirectory, -d starting-directory</code>、<code>commandline</code>、<code>--title</code></td>
<td>创建新选项卡。</td>
</tr>
<tr>
<td><code>split-pane</code></td>
<td><code>-H, --horizontal</code>、<code>-V, --vertical</code>、<code>--profile, -p profile-name</code>、<code>--startingDirectory, -d starting-directory</code>、<code>commandline</code>、<code>--title</code></td>
<td>拆分新窗格。</td>
</tr>
<tr>
<td><code>focus-tab</code></td>
<td><code>--target</code>, <code>-t</code> <code>tab-index</code></td>
<td>聚焦于特定选项卡。</td>
</tr>
</tbody>
</table>
<h3 id="参数" tabindex="-1"> 参数</h3>
<ul>
<li>
<p><code>-p</code> 标志用于指定应打开的 Windows 终端配置文件。</p>
<details><summary>例子</summary>
<p>打开 Ubuntu 20.04:</p>
<div><pre><code>wt -p <span>"Ubuntu-20.04"</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div></details>
</li>
<li>
<p><code>-d</code> 标志用于指定起始目录</p>
<details><summary>例子</summary>
<p>设置起始目录为 <code>D:\</code>:</p>
<div><pre><code>wt -d d:<span>\</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div></details>
</li>
</ul>
<h2 id="命令面板" tabindex="-1"> 命令面板</h2>
<p>通过命令面板，可以查看可以在 Windows Terminal 中运行的操作。</p>
<p>您可以通过键入 <code>Ctrl + Shift + P</code> 来调用命令面板。您可以将 <code>commandPalette</code> 命令添加到设置文件中的 <code>actions</code> 中进行自定义。</p>
<h3 id="向命令添加图标" tabindex="-1"> 向命令添加图标</h3>
<p>您可以通过在配置中添加 <code>icon</code> 为您的命令添加图标。图标可以是图像的路径，<a href="https://docs.microsoft.com/en-us/windows/uwp/design/style/segoe-ui-symbol-font" target="_blank" rel="noopener noreferrer">Segoe MDL2 Assets<ExternalLinkIcon/></a> 中的符号或任何字符，包括表情符号。</p>
<div><pre><code><span>[</span>
  <span>{</span>
    <span>"icon"</span><span>:</span> <span>"C:\\Images\\my-icon.png"</span><span>,</span>
    <span>"name"</span><span>:</span> <span>"New tab"</span><span>,</span>
    <span>"command"</span><span>:</span> <span>"newTab"</span><span>,</span>
    <span>"keys"</span><span>:</span> <span>"ctrl+shift+t"</span>
  <span>}</span><span>,</span>
  <span>{</span>
    <span>"icon"</span><span>:</span> <span>"\uE756"</span><span>,</span>
    <span>"name"</span><span>:</span> <span>"New tab"</span><span>,</span>
    <span>"command"</span><span>:</span> <span>"newTab"</span><span>,</span>
    <span>"keys"</span><span>:</span> <span>"ctrl+shift+t"</span>
  <span>}</span><span>,</span>
  <span>{</span>
    <span>"icon"</span><span>:</span> <span>"⚡"</span><span>,</span>
    <span>"name"</span><span>:</span> <span>"New tab"</span><span>,</span>
    <span>"command"</span><span>:</span> <span>"newTab"</span><span>,</span>
    <span>"keys"</span><span>:</span> <span>"ctrl+shift+t"</span>
  <span>}</span>
<span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><h3 id="嵌套命令" tabindex="-1"> 嵌套命令</h3>
<p>嵌套命令使您可以将多个命令分组在命令面板中的一项下。下面的示例将字体大小调整命令归为一个名为“更改字体大小...”的命令选项板项。</p>
<div><pre><code><span>{</span>
  <span>"name"</span><span>:</span> <span>"Change font size..."</span><span>,</span>
  <span>"commands"</span><span>:</span> <span>[</span>
    <span>{</span> <span>"command"</span><span>:</span> <span>{</span> <span>"action"</span><span>:</span> <span>"adjustFontSize"</span><span>,</span> <span>"delta"</span><span>:</span> <span>1</span> <span>}</span> <span>}</span><span>,</span>
    <span>{</span> <span>"command"</span><span>:</span> <span>{</span> <span>"action"</span><span>:</span> <span>"adjustFontSize"</span><span>,</span> <span>"delta"</span><span>:</span> <span>-1</span> <span>}</span> <span>}</span><span>,</span>
    <span>{</span> <span>"command"</span><span>:</span> <span>"resetFontSize"</span> <span>}</span>
  <span>]</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="可迭代的命令" tabindex="-1"> 可迭代的命令</h3>
<p>可迭代的命令使您可以同时创建多个命令，这些命令是从设置中定义的其他对象生成的。当前，您可以为配置文件和配色方案创建可迭代的命令。在运行时，对于给定类型的每个对象，这些命令将扩展为一个命令。</p>
<p>当前，您可以遍历以下属性:</p>
<table>
<thead>
<tr>
<th>iterateOn</th>
<th>属性</th>
<th>属性语法</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>profiles</code></td>
<td><code>name</code></td>
<td><code>&quot;name&quot;: &quot;${profile.name}&quot;</code></td>
</tr>
<tr>
<td><code>profiles</code></td>
<td><code>icon</code></td>
<td><code>&quot;icon&quot;: &quot;${profile.icon}&quot;</code></td>
</tr>
<tr>
<td><code>schemes</code></td>
<td><code>name</code></td>
<td><code>&quot;name&quot;: &quot;${scheme.name}&quot;</code></td>
</tr>
</tbody>
</table>
<h3 id="隐藏命令" tabindex="-1"> 隐藏命令</h3>
<p>如果要将命令保留在键绑定列表中，但又不想让它出现在命令选项板中，则可以通过将 <code>name</code> 设置为 <code>null</code> 来隐藏它。</p>
<details><summary>例子</summary>
<p>在命令面板中隐藏“新建选项卡”操作:</p>
<div><pre><code><span>{</span> <span>"name"</span><span>:</span> <span>null</span><span>,</span> <span>"command"</span><span>:</span> <span>"newTab"</span><span>,</span> <span>"keys"</span><span>:</span> <span>"ctrl+shift+t"</span> <span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div></details>
<h2 id="搜索" tabindex="-1"> 搜索</h2>
<p>您可以使用 <code>Ctrl + F</code> 快捷键在终端中进行搜索。</p>
<h2 id="窗格" tabindex="-1"> 窗格</h2>
<p>通过窗格，您可以在同一个选项卡中并行运行多个命令行应用程序。这可以最大程度地减少在选项卡之间切换的需求，以便您一次查看多个提示符。</p>
<h3 id="创建新窗格" tabindex="-1"> 创建新窗格</h3>
<ul>
<li><code>Alt + Shift+ +</code> 创建默认配置文件的新垂直窗格，</li>
<li><code>Alt + Shift+ -</code> 创建默认配置文件的新水平窗格，</li>
</ul>
<p>如果希望通过下拉菜单打开新窗格，可以按住 <code>Alt</code> 并单击所需的配置文件。 这会将活动窗口或窗格拆分为所选配置文件的新窗格。</p>
<blockquote>
<p>此拆分模式按具有最长边缘(可用于创建窗格)的方向进行拆分。</p>
</blockquote>
<h3 id="在窗格间进行切换" tabindex="-1"> 在窗格间进行切换</h3>
<p>按住 alt 键，则可以使用箭头键在窗格之间移动焦点。</p>
<h3 id="调整窗格大小" tabindex="-1"> 调整窗格大小</h3>
<p>可以按住 <code>Alt + Shift</code> 并使用箭头键调整焦点窗格的大小，从而调整窗格的大小。</p>
<h3 id="关闭窗格" tabindex="-1"> 关闭窗格</h3>
<p>可以键入 <code>Ctrl + Shift + W</code> 来关闭焦点窗格。</p>
<p>如果只有一个窗格，<code>Ctrl + Shift + W</code> 将关闭该选项卡。</p>
<p>与往常一样，关闭最后一个选项卡将关闭该窗口。</p>
]]></content:encoded>
    </item>
    <item>
      <title>自定义设置</title>
      <link>https://mrhope.site/software/tool/terminal/settings.html</link>
      <guid>https://mrhope.site/software/tool/terminal/settings.html</guid>
      <source url="https://mrhope.site/rss.xml">自定义设置</source>
      <description>配置文件代表着您可以在 Windows Terminal 中配置的不同的命令行环境。默认情况下，每个配置文件使用不同的命令行可执行程序，但是您可以根据自己的喜好，创建任意数量的使用同一可执行程序的配置文件。每个配置文件可以有自己的定制项以帮助您区分它们，并可以自由定制。
可以使用快捷键 Ctrl + Shift + * 来打开对应的配置文件，可使用 Ctrl + , 打开 settings.json 文件，来进行个性化调整和默认设置更改等设置。
</description>
      <pubDate>Wed, 27 Jan 2021 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>配置文件代表着您可以在 Windows Terminal 中配置的不同的命令行环境。默认情况下，每个配置文件使用不同的命令行可执行程序，但是您可以根据自己的喜好，创建任意数量的使用同一可执行程序的配置文件。每个配置文件可以有自己的定制项以帮助您区分它们，并可以自由定制。</p>
<p>可以使用快捷键 <code>Ctrl + Shift + *</code> 来打开对应的配置文件，可使用 <code>Ctrl + ,</code> 打开 settings.json 文件，来进行个性化调整和默认设置更改等设置。</p>

<div><p>默认设置</p>
<p>您可以通过按住 Alt 键并点击下拉菜单中的 Settings 按钮打开 defaults.json。该文件由 Terminal 自动生成，展示了 Windows Terminal 所有默认设置及其值。更改此文件是无效的。</p>
</div>
<p>settings.json 文件分为四个主要部分:</p>
<ol>
<li>全局设置对象，它位于 JSON 文件的顶部。全局设置将影响整个应用程序。</li>
<li>配置文件设置，由 <code>profiles</code> 对象控制。负责控制每个配置文件。</li>
<li>配色方案，由 <code>schemes</code> 数组控制。</li>
<li>自定义操作，由 <code>actions</code> 数组控制</li>
</ol>
<h2 id="全局设置" tabindex="-1"> 全局设置</h2>
<p>全局设置会将影响整个终端窗口。</p>
<p>关于详细的配置项，请见 <a href="https://aka.ms/terminal-global-settings" target="_blank" rel="noopener noreferrer">全局设置<ExternalLinkIcon/></a>。</p>
<p><img src="@source/software/tool/assets/terminal-global-settings.png" alt="全局设置"></p>
<h3 id="默认配置文件" tabindex="-1"> 默认配置文件</h3>
<p>默认配置文件为 Windows PowerShell。您可以通过在 settings.json 文件中将 <code>defaultProfile</code> 设置为首选配置文件的名称或 GUID 来更改默认配置文件。</p>
<div><pre><code><span>"defaultProfile"</span><span>:</span> <span>"PowerShell"</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><h2 id="配置文件设置" tabindex="-1"> 配置文件设置</h2>
<p><code>profiles</code> 对象描述配置文件。它分为两个部分: <code>defaults</code> 和 <code>list</code>。</p>
<ul>
<li>
<p><code>defaults</code> 对象中的配置文件会应用于列表中的所有项目。</p>
</li>
<li>
<p><code>list</code> 包含代表配置文件的每个配置文件对象，这些是出现在 Windows Terminal 下拉菜单中的项目。应用于 <code>list</code> 中各个配置文件的设置会覆盖 <code>defaults</code> 部分中应用的设置。</p>
</li>
</ul>
<p>关于详细的配置项，请见 <a href="https://aka.ms/terminal-profile-settings" target="_blank" rel="noopener noreferrer">配置文件设置<ExternalLinkIcon/></a>。</p>
<p><img src="@source/software/tool/assets/terminal-profiles.png" alt="配置文件设置"></p>
<div><p>提示</p>
<ul>
<li>
<p>您可以在 <code>defaults</code> 中设置 <code>fontFace</code> 控制终端的字体。</p>
</li>
<li>
<p>您可以在 Powershell 配置文件中添加 <code>commandline</code> 为 <code>&lt;PowerShell 地址&gt; -nologo</code> 来去除 powershell 启动时的 logo 显示。(默认地址为: <code>C:/Program Files/PowerShell/7/pwsh.exe</code>)</p>
</li>
<li>
<p>您可以通过设置 <code>backgroundImage</code> 自定义背景图片，通过 <code>backgroundImageOpacity</code> 自定义背景透明度，通过 <code>useAcrylic</code> 开启或关闭毛玻璃效果。</p>
</li>
</ul>
</div>
<h3 id="新增配置文件" tabindex="-1"> 新增配置文件</h3>
<p>Windows Terminal 会自动为 PowerShell 和 WSL 分发版创建配置文件。</p>
<p>您也可以手动添加新的配置文件: 只需生成一个新的 <code>guid</code>，提供一个 <code>name</code>，并为 <code>commandline</code> 属性提供可执行程序。</p>
<div><p>WSL</p>
<p>您可以通过 <a href="https://www.microsoft.com/zh-cn/p/ubuntu-2004-lts/9n6svws3rx71#activetab=pivot:overviewtab" target="_blank" rel="noopener noreferrer">Microsoft 应用商店<ExternalLinkIcon/></a> 安装 Ubuntu。之后便可以在 terminal 上运行 Ubuntu WSL 环境。</p>
</div>
<div><p>注意</p>
<p>您不能从动态生成的配置文件中复制 <code>source</code> 属性，否则 Windows Terminal 会忽略此配置文件。您必须使用 <code>commandline</code> 替换 <code>source</code> 并提供可执行程序，以便复制一个动态生成的配置文件。</p>
</div>
<h2 id="配色方案" tabindex="-1"> 配色方案</h2>
<p>您可以在 <code>schemes</code> 数组中配置自定义配色方案。它们是使用以下格式写入的:</p>
<div><pre><code><span>{</span>
  <span>"name"</span><span>:</span> <span>"Campbell"</span><span>,</span>

  <span>"cursorColor"</span><span>:</span> <span>"#FFFFFF"</span><span>,</span>
  <span>"selectionBackground"</span><span>:</span> <span>"#FFFFFF"</span><span>,</span>

  <span>"background"</span><span>:</span> <span>"#0C0C0C"</span><span>,</span>
  <span>"foreground"</span><span>:</span> <span>"#CCCCCC"</span><span>,</span>

  <span>"black"</span><span>:</span> <span>"#0C0C0C"</span><span>,</span>
  <span>"blue"</span><span>:</span> <span>"#0037DA"</span><span>,</span>
  <span>"cyan"</span><span>:</span> <span>"#3A96DD"</span><span>,</span>
  <span>"green"</span><span>:</span> <span>"#13A10E"</span><span>,</span>
  <span>"purple"</span><span>:</span> <span>"#881798"</span><span>,</span>
  <span>"red"</span><span>:</span> <span>"#C50F1F"</span><span>,</span>
  <span>"white"</span><span>:</span> <span>"#CCCCCC"</span><span>,</span>
  <span>"yellow"</span><span>:</span> <span>"#C19C00"</span><span>,</span>
  <span>"brightBlack"</span><span>:</span> <span>"#767676"</span><span>,</span>
  <span>"brightBlue"</span><span>:</span> <span>"#3B78FF"</span><span>,</span>
  <span>"brightCyan"</span><span>:</span> <span>"#61D6D6"</span><span>,</span>
  <span>"brightGreen"</span><span>:</span> <span>"#16C60C"</span><span>,</span>
  <span>"brightPurple"</span><span>:</span> <span>"#B4009E"</span><span>,</span>
  <span>"brightRed"</span><span>:</span> <span>"#E74856"</span><span>,</span>
  <span>"brightWhite"</span><span>:</span> <span>"#F2F2F2"</span><span>,</span>
  <span>"brightYellow"</span><span>:</span> <span>"#F9F1A5"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div><p>关于详细的配置项，请见 <a href="https://aka.ms/terminal-color-schemes" target="_blank" rel="noopener noreferrer">配置文件设置<ExternalLinkIcon/></a>。</p>
<h3 id="自带的配色方案" tabindex="-1"> 自带的配色方案</h3>
<p>Windows Terminal 在 defaults.json 文件中包含了一些配色方案。如果要在一个命令行配置文件中设置配色方案，请添加 <code>colorScheme</code> 属性，并将配色方案的 <code>name</code> 作为值。</p>
<div><pre><code><span>"colorScheme"</span><span>:</span> <span>"COLOR SCHEME NAME"</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>查看各配色方案效果，请见 <a href="https://aka.ms/terminal-color-schemes#included-color-schemes" target="_blank" rel="noopener noreferrer">包含的配色方案<ExternalLinkIcon/></a>。</p>
<h3 id="自定义配色方案" tabindex="-1"> 自定义配色方案</h3>
<p>下面提供几个主题色工具:</p>
<ul>
<li><a href="https://terminal.sexy/" target="_blank" rel="noopener noreferrer">terminal.sexy<ExternalLinkIcon/></a></li>
<li><a href="https://windowsterminalthemes.dev/" target="_blank" rel="noopener noreferrer">Windows Terminal Themes<ExternalLinkIcon/></a></li>
<li><a href="https://terminalsplash.com/" target="_blank" rel="noopener noreferrer">TerminalSplash<ExternalLinkIcon/></a>，</li>
</ul>
<h2 id="自定义操作" tabindex="-1"> 自定义操作</h2>
<p>您可以在 Windows 终端中创建自定义操作，以控制与终端的交互方式。这些操作将自动添加到命令面板。</p>
<p>关于详细的配置项，请见 <a href="https://aka.ms/terminal-keybindings" target="_blank" rel="noopener noreferrer">自定义操作设置<ExternalLinkIcon/></a>。</p>
<p><img src="@source/software/tool/assets/terminal-actions.png" alt="自定义操作"></p>
<p>自定义操作可以设置为以下格式:</p>
<ul>
<li>
<p>无参数命令</p>
<div><pre><code><span>{</span> <span>"command"</span><span>:</span> <span>"命令名称"</span><span>,</span> <span>"keys"</span><span>:</span> <span>"快捷键"</span> <span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><details><summary>例子</summary>
<div><pre><code><span>{</span> <span>"command"</span><span>:</span> <span>"closeWindow"</span><span>,</span> <span>"keys"</span><span>:</span> <span>"alt+f4"</span> <span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div></details>
</li>
<li>
<p>有参数命令</p>
<div><pre><code><span>{</span>
  <span>"command"</span><span>:</span> <span>{</span> <span>"action"</span><span>:</span> <span>"commandName"</span><span>,</span> <span>"argument"</span><span>:</span> <span>"value"</span> <span>}</span><span>,</span>
  <span>"keys"</span><span>:</span> <span>"modifiers+key"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><details><summary>例子</summary>
<div><pre><code><span>{</span> <span>"command"</span><span>:</span> <span>{</span> <span>"action"</span><span>:</span> <span>"newTab"</span><span>,</span> <span>"index"</span><span>:</span> <span>0</span> <span>}</span><span>,</span> <span>"keys"</span><span>:</span> <span>"ctrl+shift+1"</span> <span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div></details>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>第一章</title>
      <link>https://mrhope.site/physics/tsp/charpter1.html</link>
      <guid>https://mrhope.site/physics/tsp/charpter1.html</guid>
      <source url="https://mrhope.site/rss.xml">第一章</source>
      <category>物理</category>
      <pubDate>Mon, 28 Dec 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="概念" tabindex="-1"> 概念</h2>
<ul>
<li>孤立系: 与其他物体既没有物质交换也没有能量交换的系统。</li>
<li>闭系: 与外界没有物质交换，但有能量交换的系统</li>
<li>开系: 与外界既有物质交换，又有能量交换的系统</li>
</ul>
<p>热力学平衡态: 系统的各种宏观性质在长时间内不发生任何变化。</p>
<p>弛豫时间: 系统由其初始状态达到平衡状态所经历的时间称为弛豫时间。</p>
<p>热平衡定律 (热力学第零定律): 如果物体 A 和 物体 B 各自与处在同一状态的物体 C 达到热平衡，若令 A 与 B 进行接触，它们也将处在热平衡。</p>
<p>热力学温标: 不依赖于任何具体物质特性的温标。</p>
<h2 id="公式" tabindex="-1"> 公式</h2>
<p>简单系统的一般物态方程形式为 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:1em;vertical-align:-0.25em;"></span><span style="margin-right:0.10764em;">f</span><span>(</span><span>p</span><span>,</span><span style="margin-right:0.1667em;"></span><span style="margin-right:0.22222em;">V</span><span>,</span><span style="margin-right:0.1667em;"></span><span style="margin-right:0.13889em;">T</span><span>)</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6444em;"></span><span>0</span></span></span></span></p>
<p>三个重要的物理量</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.4306em;"></span><span style="margin-right:0.0037em;">α</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2073em;vertical-align:-0.8358em;"></span><span><span></span><span><span><span><span style="height:1.3214em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.3983em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.8358em;"><span></span></span></span></span></span></span></span><span><span style="height:2.2073em;vertical-align:-0.8358em;"></span><span><span>(</span><span><span>体胀系数</span></span><span>)</span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span style="margin-right:0.05278em;">β</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2519em;vertical-align:-0.8804em;"></span><span><span></span><span><span><span><span style="height:1.3214em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>p</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.8804em;"><span></span></span></span></span></span><span></span></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span></span><span><span style="height:2.2519em;vertical-align:-0.8804em;"></span><span><span>(</span><span><span>压强系数</span></span><span>)</span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.5806em;vertical-align:-0.15em;"></span><span><span>κ</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2519em;vertical-align:-0.8804em;"></span><span>−</span><span><span></span><span><span><span><span style="height:1.3214em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.8804em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span></span><span><span style="height:2.2519em;vertical-align:-0.8804em;"></span><span><span>(</span><span><span>等温压缩系数</span></span><span>)</span></span></span></span></span></span></p>
<p>满足关系 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.4306em;"></span><span style="margin-right:0.0037em;">α</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span><span>κ</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span>βp</span></span></span></span></p>
<p>一个重要的推导: <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.276em;vertical-align:-0.686em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span>d</span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7778em;vertical-align:-0.0833em;"></span><span style="margin-right:0.0037em;">α</span><span>d</span><span style="margin-right:0.13889em;">T</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span><span>κ</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span>d</span><span>p</span></span></span></span></p>
<h2 id="功" tabindex="-1"> 功</h2>
<ul>
<li>
<p>体积功: <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span style="margin-right:0.03785em;">δ</span><span style="margin-right:0.13889em;">W</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span>−</span><span>p</span><span>d</span><span style="margin-right:0.22222em;">V</span></span></span></span></p>
</li>
<li>
<p>表面功: <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span style="margin-right:0.03785em;">δ</span><span style="margin-right:0.13889em;">W</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6944em;"></span><span style="margin-right:0.03588em;">σ</span><span>d</span><span>A</span></span></span></span> (液膜有两层)</p>
</li>
<li>
<p>电介质:</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span style="margin-right:0.03785em;">δ</span><span style="margin-right:0.13889em;">W</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span style="margin-right:0.10903em;">U</span><span>d</span><span style="margin-right:0.03588em;">q</span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span style="margin-right:0.03785em;">δ</span><span style="margin-right:0.13889em;">W</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6944em;"></span><span style="margin-right:0.22222em;">V</span><span style="margin-right:0.05764em;">E</span><span>d</span><span style="margin-right:0.02778em;">D</span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span style="margin-right:0.03785em;">δ</span><span style="margin-right:0.13889em;">W</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.1771em;vertical-align:-0.686em;"></span><span style="margin-right:0.22222em;">V</span><span>d</span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.4911em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>2</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span>ϵ</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span><span style="margin-right:0.05764em;">E</span><span><span><span><span style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span>)</span></span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.6944em;"></span><span style="margin-right:0.22222em;">V</span><span style="margin-right:0.05764em;">E</span><span>d</span><span style="margin-right:0.13889em;">P</span></span></span></span></span></p>
</li>
<li>
<p>磁介质:</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span style="margin-right:0.03785em;">δ</span><span style="margin-right:0.13889em;">W</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6944em;"></span><span style="margin-right:0.10903em;">U</span><span style="margin-right:0.07847em;">I</span><span>d</span><span>t</span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span style="margin-right:0.03785em;">δ</span><span style="margin-right:0.13889em;">W</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6944em;"></span><span style="margin-right:0.22222em;">V</span><span style="margin-right:0.08125em;">H</span><span>d</span><span style="margin-right:0.05017em;">B</span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span style="margin-right:0.03785em;">δ</span><span style="margin-right:0.13889em;">W</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.1771em;vertical-align:-0.686em;"></span><span style="margin-right:0.22222em;">V</span><span>d</span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.4911em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>2</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span>μ</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span><span style="margin-right:0.08125em;">H</span><span><span><span><span style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span>)</span></span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span><span>μ</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.22222em;">V</span><span style="margin-right:0.08125em;">H</span><span>d</span><span style="margin-right:0.10903em;">M</span></span></span></span></span></p>
</li>
</ul>
<h2 id="声速" tabindex="-1"> 声速</h2>
<p><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.4306em;"></span><span>a</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:3.04em;vertical-align:-1.1002em;"></span><span><span><span><span style="height:1.9398em;"><span style="top:-5em;"><span style="height:5em;"></span><span style="padding-left:1em;"><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>d</span><span>ρ</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span>d</span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.8804em;"><span></span></span></span></span></span><span></span></span></span></span><span style="top:-3.8998em;"><span style="height:5em;"></span><span style="min-width:1.02em;height:3.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='3.08em' viewBox='0 0 400000 3240' preserveAspectRatio='xMinYMin slice'><path d='M473,2793
c339.3,-1799.3,509.3,-2700,510,-2702 l0 -0
c3.3,-7.3,9.3,-11,18,-11 H400000v40H1017.7
s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9
c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200
c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26
s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,
606zM1001 80h400000v40H1017.7z'/></svg></span></span></span><span>​</span></span><span><span style="height:1.1002em;"><span></span></span></span></span></span></span></span></span></p>
<p><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8141em;"></span><span><span>a</span><span><span><span><span style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.4704em;vertical-align:-0.8804em;"></span><span style="margin-right:0.05556em;">γ</span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>ρ</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.8804em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.8778em;vertical-align:-0.1944em;"></span><span style="margin-right:0.05556em;">γ</span><span>p</span><span style="margin-right:0.22222em;">V</span></span></span></span></p>
<p>式中 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.4306em;"></span><span style="margin-right:0.03588em;">v</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.4704em;vertical-align:-0.8804em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>ρ</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.8804em;"><span></span></span></span></span></span><span></span></span></span></span></span> 称为比体积。</p>
<h2 id="理想气体" tabindex="-1"> 理想气体</h2>
<p>理想气体的物态方程为 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8778em;vertical-align:-0.1944em;"></span><span>p</span><span style="margin-right:0.22222em;">V</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6833em;"></span><span>n</span><span style="margin-right:0.13889em;">RT</span></span></span></span>。</p>
<p>更精确的范德瓦尔斯方程形式为</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:1em;vertical-align:-0.25em;"></span><span>(</span><span>p</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:2.1771em;vertical-align:-0.686em;"></span><span><span></span><span><span><span><span style="height:1.4911em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.22222em;">V</span><span><span><span><span style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>a</span><span><span>n</span><span><span><span><span style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span>)</span><span>(</span><span style="margin-right:0.22222em;">V</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:1em;vertical-align:-0.25em;"></span><span>nb</span><span>)</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6833em;"></span><span>n</span><span style="margin-right:0.13889em;">RT</span></span></span></span></span></p>
<p>理想气体无相互作用，故:</p>
<p><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.2897em;vertical-align:-0.6997em;"></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.22222em;">V</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.10903em;">U</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6444em;"></span><span>0</span></span></span></span> <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.4704em;vertical-align:-0.8804em;"></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.08125em;">H</span></span></span></span><span>​</span></span><span><span style="height:0.8804em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6444em;"></span><span>0</span></span></span></span> <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.2897em;vertical-align:-0.6997em;"></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.22222em;">V</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.10903em;">U</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6444em;"></span><span>0</span></span></span></span>,称为焦耳系数</p>
<p>对于理想气体来说，满足多方过程 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8778em;vertical-align:-0.1944em;"></span><span>p</span><span><span style="margin-right:0.22222em;">V</span><span><span><span><span style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6833em;"></span><span><span>常量</span></span></span></span></span>，同时有 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8141em;"></span><span style="margin-right:0.13889em;">T</span><span><span style="margin-right:0.22222em;">V</span><span><span><span><span style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span style="margin-right:0.05556em;">γ</span><span>−</span><span>1</span></span></span></span></span></span></span></span></span></span></span></span>, <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.276em;vertical-align:-0.686em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.05556em;">γ</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span><span>p</span><span><span><span><span style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span style="margin-right:0.05556em;">γ</span><span>−</span><span>1</span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span></span></span></span> 也为常量。</p>
<h2 id="熵" tabindex="-1"> 熵</h2>
<p>熵是系统中微观粒子无规运动的混乱程度的亮度。</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span>d</span><span style="margin-right:0.05764em;">S</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.0574em;vertical-align:-0.686em;"></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>d</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>d</span><span>Q</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span>Δ</span><span style="margin-right:0.05764em;">S</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.6033em;vertical-align:-1.012em;"></span><span><span style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span><span><span><span style="height:1.5912em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span style="height:2.5em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span style="height:2.5em;"></span><span><span>2</span></span></span></span><span>​</span></span><span><span style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:1.012em;"><span></span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>m</span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.2861em;"><span></span></span></span></span></span></span><span>d</span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span></span></span></span></span></p>
<p>物体吸热熵变为: <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.426em;vertical-align:-0.836em;"></span><span>m</span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.2861em;"><span></span></span></span></span></span></span><span style="margin-right:0.01968em;">l</span><span>n</span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span></span></span></span></p>
<p>理想气体的熵:</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.05764em;">S</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.8444em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span>ln</span><span style="margin-right:0.1667em;"></span><span style="margin-right:0.13889em;">T</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.7778em;vertical-align:-0.0833em;"></span><span>n</span><span style="margin-right:0.00773em;">R</span><span style="margin-right:0.1667em;"></span><span>ln</span><span style="margin-right:0.1667em;"></span><span style="margin-right:0.22222em;">V</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.05764em;">S</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.05764em;">S</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.9805em;vertical-align:-0.2861em;"></span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.2861em;"><span></span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span>ln</span><span style="margin-right:0.1667em;"></span><span style="margin-right:0.13889em;">T</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.7778em;vertical-align:-0.0833em;"></span><span>n</span><span style="margin-right:0.00773em;">R</span><span style="margin-right:0.1667em;"></span><span>ln</span><span style="margin-right:0.1667em;"></span><span style="margin-right:0.22222em;">V</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.05764em;">S</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>对于理想气体有:</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.2519em;vertical-align:-0.8804em;"></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.8804em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.05764em;">S</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.3324em;vertical-align:-0.9721em;"></span><span><span></span><span><span><span><span style="height:1.3603em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.22222em;">V</span><span style="margin-right:0.13889em;">T</span><span style="margin-right:0.0037em;">α</span></span></span></span><span>​</span></span><span><span style="height:0.9721em;"><span></span></span></span></span></span><span></span></span></span></span></span></span></p>
<p>熵增加原理: 经过绝热过程后，系统的熵永不减小。</p>
<h2 id="热机与循环" tabindex="-1"> 热机与循环</h2>
<p>对于等温过程，满足 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8778em;vertical-align:-0.1944em;"></span><span>Q</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.426em;vertical-align:-0.836em;"></span><span style="margin-right:0.13889em;">RT</span><span style="margin-right:0.1667em;"></span><span>ln</span><span style="margin-right:0.1667em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span></span></span></span></p>
<p>克劳修斯不等式: <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.426em;vertical-align:-0.836em;"></span><span style="position:relative;top:0em;">∑</span><span style="margin-right:0.1667em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>i</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span><span>Q</span><span><span><span><span style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>i</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.2778em;"></span><span>⩽</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6444em;"></span><span>0</span></span></span></span></p>
<p>对于工作在两个物质之间的任何热机，满足: <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.625em;vertical-align:-0.1944em;"></span><span style="margin-right:0.03588em;">η</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7278em;vertical-align:-0.0833em;"></span><span>1</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:2.4704em;vertical-align:-0.8804em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span>Q</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span><span>Q</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.8804em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.2778em;"></span><span>⩽</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7278em;vertical-align:-0.0833em;"></span><span>1</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:2.426em;vertical-align:-0.836em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span></span></span></span></p>
<p>卡诺热机: <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.625em;vertical-align:-0.1944em;"></span><span style="margin-right:0.03588em;">η</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7278em;vertical-align:-0.0833em;"></span><span>1</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:2.426em;vertical-align:-0.836em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span></span></span></span></p>
<p>制冷机: <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.625em;vertical-align:-0.1944em;"></span><span><span style="margin-right:0.03588em;">η</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span><span>制冷</span></span></span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.426em;vertical-align:-0.836em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span></span></span></span></p>
<h2 id="自由能与吉布斯函数" tabindex="-1"> 自由能与吉布斯函数</h2>
<p>定义热力学状态函数自由能 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.13889em;">F</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7667em;vertical-align:-0.0833em;"></span><span style="margin-right:0.10903em;">U</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.6833em;"></span><span style="margin-right:0.05764em;">TS</span></span></span></span></p>
<p>在等温等容条件下，系统的自由能永不增加，系统中发生的不可逆过程总是朝着自由能减少的方向进行的。</p>
<p>定义热力学状态函数吉布斯 (Gibbs) 函数 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span>G</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7667em;vertical-align:-0.0833em;"></span><span style="margin-right:0.13889em;">F</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.8778em;vertical-align:-0.1944em;"></span><span>p</span><span style="margin-right:0.22222em;">V</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7667em;vertical-align:-0.0833em;"></span><span style="margin-right:0.10903em;">U</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.7667em;vertical-align:-0.0833em;"></span><span style="margin-right:0.05764em;">TS</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.8778em;vertical-align:-0.1944em;"></span><span>p</span><span style="margin-right:0.22222em;">V</span></span></span></span></p>
<p>等温等压条件下，系统的吉布斯函数用不增加，系统中发生的不可逆过程总是朝着吉布斯函数减少的方向进行的。</p>
<h2 id="习题" tabindex="-1"> 习题</h2>
<ol>
<li>
<p>由理想气体的物态方程推导出理想气体的 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.4306em;"></span><span style="margin-right:0.0037em;">α</span></span></span></span>, <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span style="margin-right:0.05278em;">β</span></span></span></span>, <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.5806em;vertical-align:-0.15em;"></span><span><span>κ</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p>
</li>
<li>
<p>证明物态关系满足</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span style="margin-right:0.01968em;">l</span><span style="margin-right:0.22222em;">nV</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2222em;vertical-align:-0.8622em;"></span><span style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span>(</span><span style="margin-right:0.0037em;">α</span><span>d</span><span style="margin-right:0.13889em;">T</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:1em;vertical-align:-0.25em;"></span><span><span>κ</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span>d</span><span>p</span><span>)</span></span></span></span></span></p>
</li>
<li>
<p>如果认为固体和液体在一定范围内可以把 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.4306em;"></span><span style="margin-right:0.0037em;">α</span></span></span></span> 和 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.5806em;vertical-align:-0.15em;"></span><span><span>κ</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 视为常量，则有:</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:1em;vertical-align:-0.25em;"></span><span style="margin-right:0.22222em;">V</span><span>(</span><span style="margin-right:0.13889em;">T</span><span>,</span><span style="margin-right:0.1667em;"></span><span>p</span><span>)</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:1em;vertical-align:-0.25em;"></span><span><span style="margin-right:0.22222em;">V</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span>(</span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span>,</span><span style="margin-right:0.1667em;"></span><span>0</span><span>)</span><span>[</span><span>1</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:1em;vertical-align:-0.25em;"></span><span style="margin-right:0.0037em;">α</span><span>(</span><span style="margin-right:0.13889em;">T</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:1em;vertical-align:-0.25em;"></span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span>)</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:1em;vertical-align:-0.25em;"></span><span><span>κ</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span>p</span><span>]</span></span></span></span></span></p>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>第二章</title>
      <link>https://mrhope.site/physics/tsp/charpter2.html</link>
      <guid>https://mrhope.site/physics/tsp/charpter2.html</guid>
      <source url="https://mrhope.site/rss.xml">第二章</source>
      <category>物理</category>
      <pubDate>Mon, 28 Dec 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="四个热力学函数" tabindex="-1"> 四个热力学函数</h2>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:4.5em;vertical-align:-2em;"></span><span><span><span><span><span><span style="height:2.5em;"><span style="top:-4.66em;"><span style="height:3em;"></span><span><span style="margin-right:0.08125em;">H</span><span style="margin-right:0.2778em;"></span><span>=</span></span></span><span style="top:-3.16em;"><span style="height:3em;"></span><span><span style="margin-right:0.13889em;">F</span><span style="margin-right:0.2778em;"></span><span>=</span></span></span><span style="top:-1.66em;"><span style="height:3em;"></span><span><span>G</span><span style="margin-right:0.2778em;"></span><span>=</span></span></span></span><span>​</span></span><span><span style="height:2em;"><span></span></span></span></span></span><span><span><span><span style="height:2.5em;"><span style="top:-4.66em;"><span style="height:3em;"></span><span><span></span><span style="margin-right:0.10903em;">U</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span><span>p</span><span style="margin-right:0.22222em;">V</span></span></span><span style="top:-3.16em;"><span style="height:3em;"></span><span><span></span><span style="margin-right:0.10903em;">U</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span><span style="margin-right:0.05764em;">TS</span></span></span><span style="top:-1.66em;"><span style="height:3em;"></span><span><span></span><span style="margin-right:0.10903em;">U</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span><span style="margin-right:0.05764em;">TS</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span><span>p</span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:2em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>微分形式:</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.10903em;">U</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7778em;vertical-align:-0.0833em;"></span><span style="margin-right:0.13889em;">T</span><span>d</span><span style="margin-right:0.05764em;">S</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span>p</span><span>d</span><span style="margin-right:0.22222em;">V</span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.13889em;">F</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7778em;vertical-align:-0.0833em;"></span><span>−</span><span style="margin-right:0.05764em;">S</span><span>d</span><span style="margin-right:0.13889em;">T</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span>p</span><span>d</span><span style="margin-right:0.22222em;">V</span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.08125em;">H</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7778em;vertical-align:-0.0833em;"></span><span style="margin-right:0.13889em;">T</span><span>d</span><span style="margin-right:0.05764em;">S</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span style="margin-right:0.22222em;">V</span><span>d</span><span>p</span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span>G</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7778em;vertical-align:-0.0833em;"></span><span>−</span><span style="margin-right:0.05764em;">S</span><span>d</span><span style="margin-right:0.13889em;">T</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span style="margin-right:0.22222em;">V</span><span>d</span><span>p</span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.08125em;">H</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7667em;vertical-align:-0.0833em;"></span><span>G</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:2.0574em;vertical-align:-0.686em;"></span><span style="margin-right:0.13889em;">T</span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>G</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.10903em;">U</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7667em;vertical-align:-0.0833em;"></span><span style="margin-right:0.13889em;">F</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:2.0574em;vertical-align:-0.686em;"></span><span style="margin-right:0.13889em;">T</span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">F</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7667em;vertical-align:-0.0833em;"></span><span>G</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:2.0574em;vertical-align:-0.686em;"></span><span style="margin-right:0.13889em;">T</span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>G</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:2.2519em;vertical-align:-0.8804em;"></span><span>p</span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>G</span></span></span></span><span>​</span></span><span><span style="height:0.8804em;"><span></span></span></span></span></span><span></span></span></span></span></span></span></p>
<h2 id="麦克斯韦关系" tabindex="-1"> 麦克斯韦关系</h2>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.0712em;vertical-align:-0.6997em;"></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.22222em;">V</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.05764em;">S</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.0712em;vertical-align:-0.6997em;"></span><span>−</span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.2519em;vertical-align:-0.8804em;"></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.8804em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.05764em;">S</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2073em;vertical-align:-0.8358em;"></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.3983em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.8358em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.0712em;vertical-align:-0.6997em;"></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.22222em;">V</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.05764em;">S</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.0712em;vertical-align:-0.6997em;"></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.2519em;vertical-align:-0.8804em;"></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.05764em;">S</span></span></span></span><span>​</span></span><span><span style="height:0.8804em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2073em;vertical-align:-0.8358em;"></span><span>−</span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.3983em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.8358em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>一些扩展:</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.03588em;">v</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.0712em;vertical-align:-0.6997em;"></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.10903em;">U</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.0712em;vertical-align:-0.6997em;"></span><span style="margin-right:0.13889em;">T</span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.05764em;">S</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.9694em;vertical-align:-0.2861em;"></span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.2861em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2073em;vertical-align:-0.8358em;"></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.10903em;">U</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.3983em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.8358em;"><span></span></span></span></span></span></span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:2.2073em;vertical-align:-0.8358em;"></span><span>p</span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.3983em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.8358em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2073em;vertical-align:-0.8358em;"></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.08125em;">H</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.3983em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.8358em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2073em;vertical-align:-0.8358em;"></span><span style="margin-right:0.13889em;">T</span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.05764em;">S</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.3983em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.8358em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.0712em;vertical-align:-0.6997em;"></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.22222em;">V</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.10903em;">U</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.0712em;vertical-align:-0.6997em;"></span><span style="margin-right:0.13889em;">T</span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.625em;vertical-align:-0.1944em;"></span><span>p</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2408em;vertical-align:-0.8804em;"></span><span><span></span><span><span><span><span style="height:1.3603em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>p</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.8804em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.05278em;">β</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.625em;vertical-align:-0.1944em;"></span><span>p</span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.2519em;vertical-align:-0.8804em;"></span><span>(</span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.08125em;">H</span></span></span></span><span>​</span></span><span><span style="height:0.8804em;"><span></span></span></span></span></span><span></span></span><span><span>)</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7667em;vertical-align:-0.0833em;"></span><span style="margin-right:0.22222em;">V</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:2.0574em;vertical-align:-0.686em;"></span><span style="margin-right:0.13889em;">T</span><span>(</span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span>)</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.2861em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7667em;vertical-align:-0.0833em;"></span><span style="margin-right:0.22222em;">V</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:2.0463em;vertical-align:-0.686em;"></span><span><span></span><span><span><span><span style="height:1.3603em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.0037em;">α</span></span></span></span></span></p>
<h2 id="节流过程" tabindex="-1"> 节流过程</h2>
<p>气体在节流过程中焓不变。</p>
<p><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.625em;vertical-align:-0.1944em;"></span><span>μ</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.4704em;vertical-align:-0.8804em;"></span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.8804em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.2214em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.08125em;">H</span></span></span></span><span>​</span></span><span><span style="height:0.6997em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.5621em;vertical-align:-0.9721em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.9721em;"><span></span></span></span></span></span><span></span></span><span>(</span><span style="margin-right:0.13889em;">T</span><span style="margin-right:0.0037em;">α</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:1em;vertical-align:-0.25em;"></span><span>1</span><span>)</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.5621em;vertical-align:-0.9721em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.9721em;"><span></span></span></span></span></span><span></span></span><span><span>[</span></span><span style="margin-right:0.13889em;">T</span><span><span>(</span></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span>)</span></span><span><span><span><span style="height:-0.3983em;"><span style="top:-2.0003em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.8358em;"><span></span></span></span></span></span></span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:1.8em;vertical-align:-0.65em;"></span><span style="margin-right:0.22222em;">V</span><span><span>]</span></span></span></span></span> 称为焦汤系数。</p>
<p>可以利用节流过程中 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.7335em;vertical-align:-0.1944em;"></span><span>μ</span><span style="margin-right:0.2778em;"></span><span>&gt;</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6444em;"></span><span>0</span></span></span></span> 一侧制冷区，利用节流过程使得液体降温而液化。</p>
<h2 id="内能与焓的积分形式" tabindex="-1"> 内能与焓的积分形式</h2>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.10903em;">U</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2222em;vertical-align:-0.8622em;"></span><span style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span>{</span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.03588em;">v</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span>d</span><span style="margin-right:0.13889em;">T</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:2.0574em;vertical-align:-0.686em;"></span><span>[</span><span style="margin-right:0.13889em;">T</span><span>(</span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span>)</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:1em;vertical-align:-0.25em;"></span><span>p</span><span>]</span><span>d</span><span style="margin-right:0.22222em;">V</span><span>}</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.10903em;">U</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.05764em;">S</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2226em;vertical-align:-0.8622em;"></span><span style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span>[</span><span><span></span><span><span><span><span style="height:1.3603em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.03588em;">v</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span>d</span><span style="margin-right:0.13889em;">T</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:2.0574em;vertical-align:-0.686em;"></span><span>(</span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span>d</span><span style="margin-right:0.22222em;">V</span><span>)]</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.05764em;">S</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<h2 id="热辐射" tabindex="-1"> 热辐射</h2>
<p>辐射压强 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.625em;vertical-align:-0.1944em;"></span><span>p</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.276em;vertical-align:-0.686em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>3</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span>u</span></span></span></span>，而能态密度 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.4306em;"></span><span>u</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.8141em;"></span><span>a</span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>4</span></span></span></span></span></span></span></span></span></span></span>。</p>
<p><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.05764em;">S</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.276em;vertical-align:-0.686em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>3</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span>4</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span>a</span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>3</span></span></span></span></span></span></span></span><span style="margin-right:0.22222em;">V</span></span></span></span> (可逆绝热下有 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8141em;"></span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>3</span></span></span></span></span></span></span></span><span style="margin-right:0.22222em;">V</span></span></span></span> 常数)</p>
<p>辐射通量密度 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.09618em;">J</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>u</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.276em;vertical-align:-0.686em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>4</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.07153em;">C</span><span style="margin-right:0.10903em;">U</span></span></span></span></p>
<h2 id="磁介质" tabindex="-1"> 磁介质</h2>
<p><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.4306em;"></span><span>m</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6833em;"></span><span style="margin-right:0.10903em;">M</span><span style="margin-right:0.22222em;">V</span></span></span></span> 是介质的总磁矩</p>
<p>所做的功为 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span>d</span><span style="margin-right:0.13889em;">W</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span><span>μ</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.08125em;">H</span><span>d</span><span>m</span></span></span></span></p>
<p>磁介质的内能满足 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span>d</span><span style="margin-right:0.10903em;">U</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7778em;vertical-align:-0.0833em;"></span><span style="margin-right:0.13889em;">T</span><span>d</span><span style="margin-right:0.05764em;">S</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span><span>μ</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span>h</span><span>d</span><span>m</span></span></span></span></p>
<p>磁介质的吉布斯函数满足 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span>d</span><span>G</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7778em;vertical-align:-0.0833em;"></span><span>−</span><span style="margin-right:0.05764em;">S</span><span>d</span><span style="margin-right:0.13889em;">T</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span><span>μ</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span>m</span><span>d</span><span style="margin-right:0.08125em;">H</span></span></span></span></p>
<p>磁介质的热容 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.08125em;">H</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.276em;vertical-align:-0.686em;"></span><span style="margin-right:0.13889em;">T</span><span>(</span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.05764em;">S</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span>)</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.08125em;">H</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 则 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.276em;vertical-align:-0.686em;"></span><span>(</span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.08125em;">H</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span>)</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.05764em;">S</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.426em;vertical-align:-0.836em;"></span><span>−</span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.08125em;">H</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span><span>μ</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span><span>(</span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>m</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span>)</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.10903em;">M</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<p>居里定律: <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.4306em;"></span><span>m</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.276em;vertical-align:-0.686em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.08125em;">H</span></span></span></span> 可以得出: <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.276em;vertical-align:-0.686em;"></span><span>(</span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.08125em;">H</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span>)</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.05764em;">S</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.426em;vertical-align:-0.836em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.08125em;">H</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span><span><span>μ</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.08125em;">H</span></span></span></span> 和 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span style="margin-right:0.13889em;">T</span><span>d</span><span style="margin-right:0.05764em;">S</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.8444em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span>d</span><span style="margin-right:0.13889em;">T</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:2.426em;vertical-align:-0.836em;"></span><span style="margin-right:0.13889em;">T</span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span>κ</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span style="margin-right:0.0037em;">α</span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span><span>d</span><span style="margin-right:0.22222em;">V</span></span></span></span></p>
<h2 id="重要习题" tabindex="-1"> 重要习题</h2>
<ol>
<li>
<p>证明 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.426em;vertical-align:-0.836em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span>κ</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span><span>κ</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>s</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.5621em;vertical-align:-0.9721em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.03588em;">v</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.9721em;"><span></span></span></span></span></span><span></span></span></span></span></span></p>
</li>
<li>
<p>证明 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.9694em;vertical-align:-0.2861em;"></span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.2861em;"><span></span></span></span></span></span></span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:4.832em;vertical-align:-2.166em;"></span><span>−</span><span style="margin-right:0.13889em;">T</span><span><span></span><span><span><span><span style="height:2.666em;"><span style="top:-2.11em;"><span style="height:3.59em;"></span><span><span>(</span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.22222em;">V</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span>)</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.82em;"><span style="height:3.59em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-4.666em;"><span style="height:3.59em;"></span><span><span>(</span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span>)</span><span><span><span><span style="height:0.8141em;"><span style="top:-2.4247em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span><span>​</span></span><span><span style="height:0.2753em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:2.166em;"><span></span></span></span></span></span><span></span></span></span></span></span></p>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>第三章</title>
      <link>https://mrhope.site/physics/tsp/charpter3.html</link>
      <guid>https://mrhope.site/physics/tsp/charpter3.html</guid>
      <source url="https://mrhope.site/rss.xml">第三章</source>
      <category>物理</category>
      <pubDate>Mon, 28 Dec 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="稳定平衡条件" tabindex="-1"> 稳定平衡条件</h2>
<p>在等温等容的条件下，自由能 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.13889em;">F</span></span></span></span> 永不增加。在稳定状态下 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.13889em;">F</span></span></span></span> 为极小(即 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span style="margin-right:0.03785em;">δ</span><span style="margin-right:0.13889em;">F</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:1.0085em;vertical-align:-0.1944em;"></span><span>0</span><span>,</span><span style="margin-right:0.1667em;"></span><span><span style="margin-right:0.03785em;">δ</span><span><span><span><span style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span></span></span></span></span><span style="margin-right:0.13889em;">F</span><span style="margin-right:0.2778em;"></span><span>⩾</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6444em;"></span><span>0</span></span></span></span>)</p>
<p>在等温等压的条件下，吉布斯函数 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span>G</span></span></span></span> 永不增加。在稳定状态下 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span>G</span></span></span></span> 为极小(即 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span style="margin-right:0.03785em;">δ</span><span>G</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:1.0085em;vertical-align:-0.1944em;"></span><span>0</span><span>,</span><span style="margin-right:0.1667em;"></span><span><span style="margin-right:0.03785em;">δ</span><span><span><span><span style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span></span></span></span></span><span>G</span><span style="margin-right:0.2778em;"></span><span>⩾</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6444em;"></span><span>0</span></span></span></span>)</p>
<p>稳定性条件要求: <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.07153em;">C</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>&gt;</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.276em;vertical-align:-0.686em;"></span><span>0</span><span>,</span><span style="margin-right:0.1667em;"></span><span>(</span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.22222em;">V</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span>)</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>&lt;</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6444em;"></span><span>0</span></span></span></span></p>
<h2 id="化学势" tabindex="-1"> 化学势</h2>
<p>化学式 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.625em;vertical-align:-0.1944em;"></span><span>μ</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.276em;vertical-align:-0.686em;"></span><span>(</span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>n</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span>G</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span>)</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span style="margin-right:0.13889em;">T</span><span>,</span><span>p</span></span></span></span></span><span>​</span></span><span><span style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>，即在温度压强不变的情况下，增加 1mol 物质后吉布斯函数的变化值。</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:6em;vertical-align:-2.75em;"></span><span><span><span><span><span><span style="height:3.25em;"><span style="top:-5.41em;"><span style="height:3em;"></span><span><span>d</span><span>G</span><span style="margin-right:0.2778em;"></span><span>=</span></span></span><span style="top:-3.91em;"><span style="height:3em;"></span><span><span>d</span><span style="margin-right:0.10903em;">U</span><span style="margin-right:0.2778em;"></span><span>=</span></span></span><span style="top:-2.41em;"><span style="height:3em;"></span><span><span>d</span><span style="margin-right:0.08125em;">H</span><span style="margin-right:0.2778em;"></span><span>=</span></span></span><span style="top:-0.91em;"><span style="height:3em;"></span><span><span>d</span><span style="margin-right:0.13889em;">F</span><span style="margin-right:0.2778em;"></span><span>=</span></span></span></span><span>​</span></span><span><span style="height:2.75em;"><span></span></span></span></span></span><span><span><span><span style="height:3.25em;"><span style="top:-5.41em;"><span style="height:3em;"></span><span><span></span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span><span style="margin-right:0.05764em;">S</span><span>d</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.91em;"><span style="height:3em;"></span><span><span></span><span style="margin-right:0.13889em;">T</span><span>d</span><span style="margin-right:0.05764em;">S</span></span></span><span style="top:-2.41em;"><span style="height:3em;"></span><span><span></span><span style="margin-right:0.13889em;">T</span><span>d</span><span style="margin-right:0.05764em;">S</span></span></span><span style="top:-0.91em;"><span style="height:3em;"></span><span><span></span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span><span style="margin-right:0.05764em;">S</span><span>d</span><span style="margin-right:0.13889em;">T</span></span></span></span><span>​</span></span><span><span style="height:2.75em;"><span></span></span></span></span></span><span style="width:1em;"></span><span><span><span><span style="height:3.25em;"><span style="top:-5.41em;"><span style="height:3em;"></span><span><span>+</span><span style="margin-right:0.22222em;">V</span><span>d</span><span>p</span><span>+</span></span></span><span style="top:-3.91em;"><span style="height:3em;"></span><span><span>−</span><span>p</span><span>d</span><span style="margin-right:0.22222em;">V</span><span>+</span></span></span><span style="top:-2.41em;"><span style="height:3em;"></span><span><span>+</span><span style="margin-right:0.22222em;">V</span><span>d</span><span>p</span><span>+</span></span></span><span style="top:-0.91em;"><span style="height:3em;"></span><span><span>−</span><span>p</span><span>d</span><span style="margin-right:0.22222em;">V</span><span>+</span></span></span></span><span>​</span></span><span><span style="height:2.75em;"><span></span></span></span></span></span><span><span><span><span style="height:3.25em;"><span style="top:-5.41em;"><span style="height:3em;"></span><span><span></span><span>μ</span><span>d</span><span>n</span></span></span><span style="top:-3.91em;"><span style="height:3em;"></span><span><span></span><span>μ</span><span>d</span><span>n</span></span></span><span style="top:-2.41em;"><span style="height:3em;"></span><span><span></span><span>μ</span><span>d</span><span>n</span></span></span><span style="top:-0.91em;"><span style="height:3em;"></span><span><span></span><span>μ</span><span>d</span><span>n</span></span></span></span><span>​</span></span><span><span style="height:2.75em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>定义 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.09618em;">J</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7667em;vertical-align:-0.0833em;"></span><span style="margin-right:0.13889em;">F</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.625em;vertical-align:-0.1944em;"></span><span>μ</span><span>n</span></span></span></span>，叫做巨热力势，满足 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span style="margin-right:0.09618em;">dJ</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7778em;vertical-align:-0.0833em;"></span><span>−</span><span style="margin-right:0.05764em;">S</span><span>d</span><span style="margin-right:0.00773em;">R</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span>p</span><span>d</span><span style="margin-right:0.22222em;">V</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span>n</span><span>d</span><span>μ</span></span></span></span></p>
<h2 id="两相平衡条件" tabindex="-1"> 两相平衡条件</h2>
<p><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8778em;vertical-align:-0.1944em;"></span><span style="margin-right:0.13889em;">T</span><span>,</span><span style="margin-right:0.1667em;"></span><span style="margin-right:0.13889em;">P</span><span>,</span><span style="margin-right:0.1667em;"></span><span>μ</span></span></span></span> 相等。</p>
<h2 id="克拉帕龙方程" tabindex="-1"> 克拉帕龙方程</h2>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.0574em;vertical-align:-0.686em;"></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>d</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>d</span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.6301em;vertical-align:-1.104em;"></span><span><span></span><span><span><span><span style="height:1.5261em;"><span style="top:-2.143em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.22222em;">V</span><span><span><span><span style="height:0.967em;"><span style="top:-2.5834em;margin-left:-0.2222em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>m</span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.05278em;">β</span></span></span></span><span>​</span></span><span><span style="height:0.1166em;"><span></span></span></span></span></span></span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span><span><span style="margin-right:0.22222em;">V</span><span><span><span><span style="height:0.5904em;"><span style="top:-2.453em;margin-left:-0.2222em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>m</span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.0037em;">α</span></span></span></span><span>​</span></span><span><span style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.05764em;">S</span><span><span><span><span style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>m</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.05278em;">β</span></span></span></span><span>​</span></span><span><span style="height:0.247em;"><span></span></span></span></span></span></span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span><span><span style="margin-right:0.05764em;">S</span><span><span><span><span style="height:0.6644em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>m</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.0037em;">α</span></span></span></span><span>​</span></span><span><span style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:1.104em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.4673em;vertical-align:-1.107em;"></span><span><span></span><span><span><span><span style="height:1.3603em;"><span style="top:-2.143em;"><span style="height:3em;"></span><span><span style="margin-right:0.13889em;">T</span><span>(</span><span><span style="margin-right:0.22222em;">V</span><span><span><span><span style="height:0.967em;"><span style="top:-2.5834em;margin-left:-0.2222em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>m</span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.05278em;">β</span></span></span></span><span>​</span></span><span><span style="height:0.1166em;"><span></span></span></span></span></span></span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span><span><span style="margin-right:0.22222em;">V</span><span><span><span><span style="height:0.5904em;"><span style="top:-2.453em;margin-left:-0.2222em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>m</span></span></span><span style="top:-2.989em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.0037em;">α</span></span></span></span><span>​</span></span><span><span style="height:0.247em;"><span></span></span></span></span></span></span><span>)</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>L</span></span></span></span><span>​</span></span><span><span style="height:1.107em;"><span></span></span></span></span></span><span></span></span></span></span></span></span></p>
<p><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span>L</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:1.0991em;vertical-align:-0.25em;"></span><span style="margin-right:0.13889em;">T</span><span>(</span><span><span style="margin-right:0.05764em;">S</span><span><span><span><span style="height:0.8491em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>m</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.05278em;">β</span></span></span></span><span>​</span></span><span><span style="height:0.247em;"><span></span></span></span></span></span></span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:1em;vertical-align:-0.25em;"></span><span><span style="margin-right:0.05764em;">S</span><span><span><span><span style="height:0.6644em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>m</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.0037em;">α</span></span></span></span><span>​</span></span><span><span style="height:0.247em;"><span></span></span></span></span></span></span><span>)</span></span></span></span> 称为相变潜热。</p>
<p>在忽略液相体积、并将气相视为理想气体的情况下，可由该方程导出蒸汽压方程， 即 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.4704em;vertical-align:-0.8804em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>p</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.8804em;"><span></span></span></span></span></span><span></span></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>d</span><span style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span>d</span><span>p</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.276em;vertical-align:-0.686em;"></span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.00773em;">R</span><span><span style="margin-right:0.13889em;">T</span><span><span><span><span style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span>L</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span></span></span></span>。</p>
<p>解得 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span style="margin-right:0.01968em;">l</span><span>n</span><span>p</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.276em;vertical-align:-0.686em;"></span><span>−</span><span><span></span><span><span><span><span style="height:1.59em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.13889em;">RT</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span style="height:3em;"></span><span><span>L</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.6833em;"></span><span>A</span></span></span></span></p>
]]></content:encoded>
    </item>
    <item>
      <title>第一章</title>
      <link>https://mrhope.site/physics/electromagnetism/charpter1.html</link>
      <guid>https://mrhope.site/physics/electromagnetism/charpter1.html</guid>
      <source url="https://mrhope.site/rss.xml">第一章</source>
      <category>物理</category>
      <pubDate>Sun, 27 Dec 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="电场与电势" tabindex="-1"> 电场与电势</h2>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span style="margin-right:0.03148em;">k</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.1574em;vertical-align:-0.836em;"></span><span><span></span><span><span><span><span style="height:1.3214em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>4</span><span style="margin-right:0.03588em;">π</span><span><span>ε</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:1.7936em;vertical-align:-0.686em;"></span><span><span></span><span><span><span><span style="height:1.1076em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>4</span><span style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span>μ</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.13889em;">F</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span>12</span></span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:1.7936em;vertical-align:-0.686em;"></span><span style="margin-right:0.03148em;">k</span><span><span></span><span><span><span><span style="height:1.1076em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.02778em;">r</span><span><span><span><span style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.03588em;">q</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span><span style="margin-right:0.03588em;">q</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span><span><span><span style="height:0.9526em;"><span style="top:-3em;"><span style="height:3em;"></span><span><span>e</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span>12</span></span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.4306em;"><span style="height:3em;"></span><span style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3
-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2
-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58
 69.2 92 94.5zm0 0v40h399900v-40z'/></svg></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.05764em;">E</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2408em;vertical-align:-0.8804em;"></span><span><span></span><span><span><span><span style="height:1.3603em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.03588em;">q</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.13889em;">F</span></span></span></span><span>​</span></span><span><span style="height:0.8804em;"><span></span></span></span></span></span><span></span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:1.2053em;"></span><span><span><span><span style="height:1.2053em;"><span style="top:-3em;"><span style="height:3em;"></span><span style="margin-right:0.05764em;">E</span></span><span style="top:-3.6833em;"><span style="height:3em;"></span><span style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3
-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2
-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58
 69.2 92 94.5zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.7667em;vertical-align:-0.0833em;"></span><span>−</span><span>∇</span><span style="margin-right:0.10903em;">U</span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.10903em;">U</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.3262em;vertical-align:-0.9119em;"></span><span><span style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span><span><span><span style="height:1.4143em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.13889em;">P</span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>∞</span></span></span></span><span>​</span></span><span><span style="height:0.9119em;"><span></span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span><span><span><span style="height:1.2053em;"><span style="top:-3em;"><span style="height:3em;"></span><span style="margin-right:0.05764em;">E</span></span><span style="top:-3.6833em;"><span style="height:3em;"></span><span style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3
-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2
-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58
 69.2 92 94.5zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span><span style="margin-right:0.2222em;"></span><span>⋅</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:1.2164em;"></span><span><span><span><span style="height:1.2164em;"><span style="top:-3em;"><span style="height:3em;"></span><span><span>d</span><span style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.6944em;"><span style="height:3em;"></span><span style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3
-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2
-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58
 69.2 92 94.5zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span></span></p>
<h3 id="点电荷" tabindex="-1"> 点电荷</h3>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.05764em;">E</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.1963em;vertical-align:-0.836em;"></span><span><span></span><span><span><span><span style="height:1.3603em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>4</span><span style="margin-right:0.03588em;">π</span><span><span>ε</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span><span style="margin-right:0.02778em;">r</span><span><span><span><span style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>Q</span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.10903em;">U</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.1963em;vertical-align:-0.836em;"></span><span><span></span><span><span><span><span style="height:1.3603em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>4</span><span style="margin-right:0.03588em;">π</span><span><span>ε</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>Q</span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span></span></span></span></span></p>
<h3 id="电偶极子" tabindex="-1"> 电偶极子</h3>
<p><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:1.147em;vertical-align:-0.1944em;"></span><span><span><span><span style="height:0.9526em;"><span style="top:-3em;"><span style="height:3em;"></span><span>p</span></span><span style="top:-3.4306em;"><span style="height:3em;"></span><span style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3
-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2
-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58
 69.2 92 94.5zm0 0v40h399900v-40z'/></svg></span></span></span><span>​</span></span><span><span style="height:0.1944em;"><span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:1.4109em;vertical-align:-0.1944em;"></span><span style="margin-right:0.03588em;">q</span><span><span><span><span style="height:1.2164em;"><span style="top:-3em;"><span style="height:3em;"></span><span style="margin-right:0.01968em;">l</span></span><span style="top:-3.6944em;"><span style="height:3em;"></span><span style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3
-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2
-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58
 69.2 92 94.5zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span></span></span></span>, <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6944em;"></span><span style="margin-right:0.01968em;">l</span></span></span></span> 由 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.7778em;vertical-align:-0.1944em;"></span><span>−</span><span style="margin-right:0.03588em;">q</span></span></span></span> 到 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.625em;vertical-align:-0.1944em;"></span><span style="margin-right:0.03588em;">q</span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.10903em;">U</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.4656em;vertical-align:-0.836em;"></span><span><span></span><span><span><span><span style="height:1.3214em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>4</span><span style="margin-right:0.03588em;">π</span><span><span>ε</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span><span><span></span><span><span><span><span style="height:1.6296em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.02778em;">r</span><span><span><span><span style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span><span><span style="height:0.9526em;"><span style="top:-3em;"><span style="height:3em;"></span><span>p</span></span><span style="top:-3.4306em;"><span style="height:3em;"></span><span style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3
-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2
-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58
 69.2 92 94.5zm0 0v40h399900v-40z'/></svg></span></span></span><span>​</span></span><span><span style="height:0.1944em;"><span></span></span></span></span></span><span style="margin-right:0.2222em;"></span><span>⋅</span><span style="margin-right:0.2222em;"></span><span><span><span><span style="height:0.9526em;"><span style="top:-3em;"><span style="height:3em;"></span><span><span>e</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.02778em;">r</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.4306em;"><span style="height:3em;"></span><span style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3
-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2
-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58
 69.2 92 94.5zm0 0v40h399900v-40z'/></svg></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.05764em;">E</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:3em;vertical-align:-1.25em;"></span><span><span style="top:0em;"><span>{</span></span><span><span><span><span><span><span style="height:1.69em;"><span style="top:-3.69em;"><span style="height:3.008em;"></span><span><span><span></span><span><span><span><span style="height:0.8451em;"><span style="top:-2.655em;"><span style="height:3em;"></span><span><span><span>4</span><span style="margin-right:0.03588em;">π</span><span>ε</span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span style="height:3em;"></span><span><span><span>1</span></span></span></span></span><span>​</span></span><span><span style="height:0.345em;"><span></span></span></span></span></span><span></span></span><span><span></span><span><span><span><span style="height:0.8972em;"><span style="top:-2.655em;"><span style="height:3em;"></span><span><span><span><span style="margin-right:0.02778em;">r</span><span><span><span><span style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span style="height:2.5em;"></span><span><span>3</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span style="height:3em;"></span><span><span><span>2</span><span>p</span></span></span></span></span><span>​</span></span><span><span style="height:0.345em;"><span></span></span></span></span></span><span></span></span></span></span><span style="top:-2.25em;"><span style="height:3.008em;"></span><span><span><span></span><span><span><span><span style="height:0.8451em;"><span style="top:-2.655em;"><span style="height:3em;"></span><span><span><span>4</span><span style="margin-right:0.03588em;">π</span><span>ε</span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span style="height:3em;"></span><span><span><span>1</span></span></span></span></span><span>​</span></span><span><span style="height:0.345em;"><span></span></span></span></span></span><span></span></span><span><span></span><span><span><span><span style="height:0.7475em;"><span style="top:-2.655em;"><span style="height:3em;"></span><span><span><span><span style="margin-right:0.02778em;">r</span><span><span><span><span style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span style="height:2.5em;"></span><span><span>3</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span style="height:3em;"></span><span><span><span>p</span></span></span></span></span><span>​</span></span><span><span style="height:0.345em;"><span></span></span></span></span></span><span></span></span></span></span></span><span>​</span></span><span><span style="height:1.19em;"><span></span></span></span></span></span><span style="width:1em;"></span><span><span><span><span style="height:1.69em;"><span style="top:-3.69em;"><span style="height:3.008em;"></span><span><span><span>中垂线</span></span></span></span><span style="top:-2.25em;"><span style="height:3.008em;"></span><span><span><span>延长线</span></span></span></span></span><span>​</span></span><span><span style="height:1.19em;"><span></span></span></span></span></span></span></span><span></span></span></span></span></span></span></p>
<div><p>提示</p>
<p>对于电偶极子、电四极子这类题，主要利用 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.5782em;vertical-align:-0.0391em;"></span><span>a</span><span style="margin-right:0.2778em;"></span><span>≫</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6944em;"></span><span>b</span></span></span></span> 的条件，将结果变为包含 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:1.2251em;vertical-align:-0.345em;"></span><span><span></span><span><span><span><span style="height:0.8801em;"><span style="top:-2.655em;"><span style="height:3em;"></span><span><span><span>a</span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span style="height:3em;"></span><span><span><span>b</span></span></span></span></span><span>​</span></span><span><span style="height:0.345em;"><span></span></span></span></span></span><span></span></span></span></span></span>，合理舍去高阶小量。</p>
<p>虚功原理也可以用来解决电偶极子一类题:</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.13889em;">F</span><span><span><span><span style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.01968em;">l</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.0574em;vertical-align:-0.686em;"></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.02691em;">w</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span>L</span><span><span><span><span style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.02778em;">θ</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.0574em;vertical-align:-0.686em;"></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span style="margin-right:0.02691em;">w</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span></span></span></span></span></p>
</div>
<h2 id="高斯定理" tabindex="-1"> 高斯定理</h2>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span>Φ</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.05764em;">E</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2717em;vertical-align:-0.9117em;"></span><span><span style="position:relative;top:-0.001em;"><span><span style="height:1.36em;"><span style="top:-3.36em;"><span style="height:3.36em;"></span><span style="margin-right:0.44445em;">∬</span></span><span style="top:-3.28em;"><span style="height:3.36em;"></span><span style="height:0.659em;width:1.472em;"><svg xmlns="http://www.w3.org/2000/svg" width='1.472em' height='0.659em' style='width:1.472em' viewBox='0 0 1472 659' preserveAspectRatio='xMinYMin'><path d='M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8
-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z
m502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2
c0 110 84 276 504 276s502.4-166 502.4-276z'/></svg></span></span></span><span>​</span></span><span><span style="height:0.862em;"><span></span></span></span></span><span><span><span><span style="height:-0.6103em;"><span style="top:-1.7883em;margin-left:-0.4445em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>s</span></span></span></span><span>​</span></span><span><span style="height:0.9117em;"><span></span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span><span><span><span style="height:1.2053em;"><span style="top:-3em;"><span style="height:3em;"></span><span style="margin-right:0.05764em;">E</span></span><span style="top:-3.6833em;"><span style="height:3em;"></span><span style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3
-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2
-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58
 69.2 92 94.5zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span><span style="margin-right:0.2222em;"></span><span>⋅</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:1.2164em;"></span><span><span><span><span style="height:1.2164em;"><span style="top:-3em;"><span style="height:3em;"></span><span><span>d</span><span style="margin-right:0.05764em;">S</span></span></span><span style="top:-3.6944em;"><span style="height:3em;"></span><span style="height:0.522em;min-width:0.888em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3
-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2
-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58
 69.2 92 94.5zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.5991em;vertical-align:-1.2777em;"></span><span><span></span><span><span><span><span style="height:1.3214em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span>ε</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.1667em;"></span><span><span><span><span style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span style="height:3.05em;"></span><span><span>i</span></span></span><span style="top:-3.05em;"><span style="height:3.05em;"></span><span><span>∑</span></span></span></span><span>​</span></span><span><span style="height:1.2777em;"><span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span><span style="margin-right:0.03588em;">q</span><span><span><span><span style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>i</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>对于无限长线电荷密度为 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.625em;vertical-align:-0.1944em;"></span><span><span style="margin-right:0.03588em;">η</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>e</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的线，其电场强度</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.05764em;">E</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:1.9436em;vertical-align:-0.836em;"></span><span><span></span><span><span><span><span style="height:1.1076em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>2</span><span style="margin-right:0.03588em;">π</span><span><span>ε</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.03588em;">η</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>e</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span></span></span></span></span></p>
<p>对于无限大面电荷密度为 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.5806em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.03588em;">σ</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>e</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的线，其电场强度</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6833em;"></span><span style="margin-right:0.05764em;">E</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:1.9436em;vertical-align:-0.836em;"></span><span><span></span><span><span><span><span style="height:1.1076em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>2</span><span><span>ε</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.03588em;">σ</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>e</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span></span></span></span></span></p>
<p>静电场的环路定理:</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:2.2719em;vertical-align:-0.9119em;"></span><span><span style="margin-right:0.44445em;position:relative;top:-0.0011em;">∮</span><span><span><span><span style="height:-0.4336em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>L</span></span></span></span><span>​</span></span><span><span style="height:0.9119em;"><span></span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span style="margin-right:0.05764em;">E</span><span style="margin-right:0.2222em;"></span><span>⋅</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.6944em;"></span><span>d</span><span style="margin-right:0.01968em;">l</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.6444em;"></span><span>0</span></span></span></span></span></p>
<h2 id="相互作用能" tabindex="-1"> 相互作用能</h2>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.13889em;">W</span><span><span><span><span style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span><span>互</span></span></span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:3.2254em;vertical-align:-1.4138em;"></span><span><span></span><span><span><span><span style="height:1.3214em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>4</span><span style="margin-right:0.03588em;">π</span><span><span>ε</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.1667em;"></span><span><span><span><span style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span style="height:3.05em;"></span><span><span><span>i</span><span>=</span><span>1</span></span></span></span><span style="top:-3.05em;"><span style="height:3.05em;"></span><span><span>∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span style="height:3.05em;"></span><span><span>n</span></span></span></span><span>​</span></span><span><span style="height:1.2777em;"><span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span><span><span><span style="height:1.8117em;"><span style="top:-1.8723em;margin-left:0em;"><span style="height:3.05em;"></span><span><span><span style="margin-right:0.05724em;">j</span><span>=</span><span>1</span></span></span></span><span style="top:-3.05em;"><span style="height:3.05em;"></span><span><span>∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span style="height:3.05em;"></span><span><span><span>i</span><span>−</span><span>1</span></span></span></span></span><span>​</span></span><span><span style="height:1.4138em;"><span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span><span></span><span><span><span><span style="height:1.1076em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.02778em;">r</span><span><span><span><span style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span style="margin-right:0.05724em;">ij</span></span></span></span></span><span>​</span></span><span><span style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.03588em;">q</span><span><span><span><span style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>i</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span><span style="margin-right:0.03588em;">q</span><span><span><span><span style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.05724em;">j</span></span></span></span><span>​</span></span><span><span style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.9721em;"><span></span></span></span></span></span><span></span></span></span><span></span><span><span style="height:0.3669em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:3.0652em;vertical-align:-1.4138em;"></span><span><span></span><span><span><span><span style="height:1.3214em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>8</span><span style="margin-right:0.03588em;">π</span><span><span>ε</span><span><span><span><span style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>0</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.836em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.1667em;"></span><span><span><span><span style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span style="height:3.05em;"></span><span><span><span>i</span><span>=</span><span>1</span></span></span></span><span style="top:-3.05em;"><span style="height:3.05em;"></span><span><span>∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span style="height:3.05em;"></span><span><span>n</span></span></span></span><span>​</span></span><span><span style="height:1.2777em;"><span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span><span><span><span style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span style="height:3.05em;"></span><span><span><span style="margin-right:0.05724em;">j</span><span>=</span><span>1</span></span></span></span><span style="top:-3.05em;"><span style="height:3.05em;"></span><span><span>∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span style="height:3.05em;"></span><span><span>n</span></span></span></span><span>​</span></span><span><span style="height:1.4138em;"><span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span><span></span><span><span><span><span style="height:1.1076em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.02778em;">r</span><span><span><span><span style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span style="margin-right:0.05724em;">ij</span></span></span></span></span><span>​</span></span><span><span style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.03588em;">q</span><span><span><span><span style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>i</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span><span style="margin-right:0.03588em;">q</span><span><span><span><span style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.05724em;">j</span></span></span></span><span>​</span></span><span><span style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.9721em;"><span></span></span></span></span></span><span></span></span><span>(</span><span>i</span><span style="margin-right:0.2778em;"></span><span><span><span><span><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span><span><span></span></span></span><span></span></span></span></span></span><span>=</span></span><span style="margin-right:0.2778em;"></span></span><span><span style="height:1em;vertical-align:-0.25em;"></span><span style="margin-right:0.05724em;">j</span><span>)</span></span><span></span><span><span style="height:0.3669em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.5991em;vertical-align:-1.2777em;"></span><span><span></span><span><span><span><span style="height:1.3214em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>2</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.1667em;"></span><span><span><span><span style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span style="height:3.05em;"></span><span><span>i</span></span></span><span style="top:-3.05em;"><span style="height:3.05em;"></span><span><span>∑</span></span></span></span><span>​</span></span><span><span style="height:1.2777em;"><span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span><span style="margin-right:0.03588em;">q</span><span><span><span><span style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>i</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span><span style="margin-right:0.10903em;">U</span><span><span><span><span style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>i</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>对于连续分布:</p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.13889em;">W</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>e</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2719em;vertical-align:-0.9119em;"></span><span><span></span><span><span><span><span style="height:1.3214em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>2</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.1667em;"></span><span><span style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span><span><span><span style="height:-0.4336em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.22222em;">V</span></span></span></span><span>​</span></span><span><span style="height:0.9119em;"><span></span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span><span>ρ</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>e</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.10903em;">U</span><span>d</span><span style="margin-right:0.22222em;">V</span></span><span><span style="height:2.2719em;vertical-align:-0.9119em;"></span><span><span>(</span><span><span>体</span></span><span>)</span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.13889em;">W</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>e</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2719em;vertical-align:-0.9119em;"></span><span><span></span><span><span><span><span style="height:1.3214em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>2</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.1667em;"></span><span><span style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span><span><span><span style="height:-0.4336em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.05764em;">S</span></span></span></span><span>​</span></span><span><span style="height:0.9119em;"><span></span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span><span style="margin-right:0.03588em;">σ</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>e</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.10903em;">U</span><span>d</span><span style="margin-right:0.05764em;">S</span></span><span><span style="height:2.2719em;vertical-align:-0.9119em;"></span><span><span>(</span><span><span>面</span></span><span>)</span></span></span></span></span></span></p>
<p class='katex-block'><span><span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8333em;vertical-align:-0.15em;"></span><span><span style="margin-right:0.13889em;">W</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>e</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:2.2719em;vertical-align:-0.9119em;"></span><span><span></span><span><span><span><span style="height:1.3214em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span>2</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>1</span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.1667em;"></span><span><span style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span><span><span><span style="height:-0.4258em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.01968em;">l</span></span></span></span><span>​</span></span><span><span style="height:0.9119em;"><span></span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span><span style="margin-right:0.03588em;">η</span><span><span><span><span style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>e</span></span></span></span><span>​</span></span><span><span style="height:0.15em;"><span></span></span></span></span></span></span><span style="margin-right:0.10903em;">U</span><span>d</span><span style="margin-right:0.01968em;">l</span></span><span><span style="height:2.2719em;vertical-align:-0.9119em;"></span><span><span>(</span><span><span>线</span></span><span>)</span></span></span></span></span></span></p>
]]></content:encoded>
    </item>
    <item>
      <title>linter 介绍</title>
      <link>https://mrhope.site/code/language/linter/</link>
      <guid>https://mrhope.site/code/language/linter/</guid>
      <source url="https://mrhope.site/rss.xml">linter 介绍</source>
      <description>linter 用来检查程序的语法错误，并即时标注和指出来 (例如，把声明了但没使用的多余变量指出来，向错误语句添加红色波浪线)，是程序开发的辅助工具。同时，linter 也有统一规范代码书写方式的功能。
在大型项目中，编码需要统一的风格，比如在 JavaScript 中使用单引号还是双引号包裹字符串，在何时进行折行等。目前各种语言基本都有自己的出色 linter，能够确保相同的使用不同换行方式、缩进、标记代码会最终格式化为相同的输出。
</description>
      <pubDate>Wed, 21 Oct 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>linter 用来检查程序的语法错误，并即时标注和指出来 (例如，把声明了但没使用的多余变量指出来，向错误语句添加红色波浪线)，是程序开发的辅助工具。同时，linter 也有统一规范代码书写方式的功能。</p>
<p>在大型项目中，编码需要统一的风格，比如在 JavaScript 中使用单引号还是双引号包裹字符串，在何时进行折行等。目前各种语言基本都有自己的出色 linter，能够确保相同的使用不同换行方式、缩进、标记代码会最终格式化为相同的输出。</p>

<h2 id="prettier" tabindex="-1"> Prettier</h2>
<p>Prettier 是一个前端知名的 linter，它可以代码规范根据设置为唯一的排列格式。它支持 markdown, html, css, js, ts, jsx, tsx, json, vue 等多种文件格式。</p>
<h2 id="eslint" tabindex="-1"> ESlint</h2>
<p>ESlint 是一个知名的 JavaScript linter，借助插件它也可以提供其他扩展语言的支持，如 jsx, ts, tsx, vue 等。</p>
<h2 id="clang-format" tabindex="-1"> clang-format</h2>
<p>clang-format 是 C/ C++ / Object-C 最流行的代码格式化工具，提供多种预设的代码风格。</p>
<ul>
<li><a href="/code/language/linter/clang-format.html">查看详情</a></li>
</ul>
<h2 id="checkstyle" tabindex="-1"> checkStyle</h2>
<p>checkStyle 是比较流行的 Java linter</p>
]]></content:encoded>
    </item>
    <item>
      <title>clang-format</title>
      <link>https://mrhope.site/code/language/linter/clang-format.html</link>
      <guid>https://mrhope.site/code/language/linter/clang-format.html</guid>
      <source url="https://mrhope.site/rss.xml">clang-format</source>
      <description>clang-format 是一种代码格式化工具，可用于格式化(排版) C / C++ / Java / JavaScript / Objective-C / Protobuf / C# 的代码。它支持多种预设代码风格与自定义风格 (通过编写 .clang-format 文件)。
</description>
      <pubDate>Wed, 21 Oct 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>clang-format 是一种代码格式化工具，可用于格式化(排版) C / C++ / Java / JavaScript / Objective-C / Protobuf / C# 的代码。它支持多种预设代码风格与自定义风格 (通过编写 <code>.clang-format</code> 文件)。</p>

<h2 id="自定义格式化" tabindex="-1"> 自定义格式化</h2>
<div><pre><code>clang-format -style<span>=</span>格式名 -dump-config <span>></span> .clang-format`
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>其中，格式名的取值可以为 <code>LLVM</code>, <code>Google</code>, <code>Chromium</code>, <code>Mozilla</code>, <code>Webkit</code> 中的任一种，这会将对应格式预设写入 <code>.clang-format</code> 文件。</p>
<h2 id="使用命令行" tabindex="-1"> 使用命令行</h2>
<h3 id="格式" tabindex="-1"> 格式</h3>
<div><pre><code>clang-format <span>[</span>options<span>]</span> <span>[</span><span>&lt;</span>file<span>></span> <span>..</span>.<span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><h3 id="可用选项" tabindex="-1"> 可用选项</h3>
<ul>
<li>
<p><code>--Werror</code>: 将格式化警告变为错误</p>
</li>
<li>
<p><code>--Wno-error=unknown</code>: 未知的格式化选项仅产生警告。</p>
<p>这可以保持格式化启用，即使配置包含未知 (较新) 选项。</p>
</li>
<li>
<p><code>--assume-filename=&lt;string&gt;</code>: 覆盖用于确定语言的文件名。</p>
<p>通常在从 stdin 读取时，帮助 clang-fomat 获取文件名</p>
</li>
<li>
<p><code>--dry-run</code> 或 <code>-n</code>: 如果设置，实际上不进行格式更改</p>
</li>
<li>
<p><code>--dump-config</code>: 将配置选项转储到标准输出并退出, 可以与 <code>--style</code> 选项一起使用。</p>
</li>
<li>
<p><code>--fallback-style=&lt;string&gt;</code>: 设置回退的默认格式，通常在 clang-format 找不到配置文件时使用。</p>
<p>设置 <code>--fallback-style=none</code> 可以在这种情况下跳过格式化</p>
</li>
<li>
<p><code>--ferror-limit=&lt;uint&gt;</code>: 设置 clang-format 输出的最大错误数，超过将停止输出。</p>
<p>请仅与 <code>--dry-run</code> 或 <code>-n</code> 配合使用，<code>0</code> 意味着无限制</p>
</li>
<li>
<p><code>-i</code>: 替换输入文件</p>
</li>
<li>
<p><code>--length=&lt;uint&gt;</code>: 格式化指定长度范围</p>
<p>可以通过指定多个偏移和长度对来格式化几个范围。</p>
<p>当仅指定一个偏移量而没有 <code>--length</code>，clang-format 会一直格式化到文件的最后。</p>
<p>只能与一个输入文件一起使用。</p>
</li>
<li>
<p><code>--lines=&lt;string&gt;</code>: 格式为 <code>&lt;start line&gt;:&lt;end line&gt;</code></p>
<p>设置格式化行的范围(起始为第一行)，可以通过指定多个范围来格式化多行。</p>
<p>不能与 <code>--offset</code> 和 <code>--length</code> 一起使用。</p>
<p>只能与一个输入文件一起使用。</p>
</li>
<li>
<p><code>--offset=&lt;uint&gt;</code>: 格式化从此字节偏移量开始的范围。</p>
<p>可以通过指定多个范围来格式化几个偏移量和长度对。</p>
<p>只能与一个输入文件一起使用。</p>
</li>
<li>
<p><code>--output-replacements-xml</code>: 输出 XML</p>
</li>
<li>
<p><code>--sort-includes</code>: 如果设置，将覆盖包含排序行为。由 SortIncludes 样式标志确定</p>
</li>
<li>
<p><code>--style=&lt;string&gt;</code> 编码样式</p>
<p>当前支持: <code>LLVM</code>, <code>Google</code>, <code>Chromium</code>, <code>Mozilla</code>, <code>Webkit</code></p>
<p>使用 <code>--style=file</code> 从中文件加载样式配置</p>
<p>使用 <code>--style=&quot;{key:value,...}&quot;</code> 来设置特定的参数，
例如: <code>&quot;{BasedOnStyle: llvm, IndentWidth: 8}&quot;</code></p>
</li>
<li>
<p><code>--verbose</code>: 输出处理的文件列表</p>
</li>
</ul>
<h2 id="vs-code" tabindex="-1"> VS Code</h2>
<p>在 VS Code 中安装 C/C++ 插件以启用两者支持时会自动安装 clang-format，因此无需进行任何操作，即可在 C/C++ 文件中对代码进行格式化。</p>
<h2 id="推荐样式" tabindex="-1"> 推荐样式</h2>
<p>Mr.Hope 推荐使用 Google 预设，所以在个人与工作室的每个项目中，都会使用 Google 编码风格。</p>
<p>建议在 VS Code 中配置默认格式风格:</p>
<div><pre><code><span>{</span>
  <span>"C_Cpp.clang_format_fallbackStyle"</span><span>:</span> <span>"Google"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h2 id="官方文档" tabindex="-1"> 官方文档</h2>
<ul>
<li><a href="http://clang.llvm.org/docs/ClangFormat.html" target="_blank" rel="noopener noreferrer">地址<ExternalLinkIcon/></a> (需 VPN)</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>布局实战</title>
      <link>https://mrhope.site/code/website/css/layout/exercise.html</link>
      <guid>https://mrhope.site/code/website/css/layout/exercise.html</guid>
      <source url="https://mrhope.site/rss.xml">布局实战</source>
      <description>本章包括了一些经典的布局实战案例。
</description>
      <category>CSS</category>
      <pubDate>Tue, 20 Oct 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>本章包括了一些经典的布局实战案例。</p>

<h2 id="flex-布局实战" tabindex="-1"> Flex 布局实战</h2>
<p>下面我们将通过骰子，来很好的在实战中展示 Flex 布局的功能与美丽。</p>
<p>骰子的一面，最多可以放置 9 个点。</p>
<p><img src="@source/code/website/css/layout/assets/dice-axis.png" alt="骰子轴线"></p>
<p>下面，就来看看 Flex 如何实现，从 1 个点到 9 个点的布局。<code>div</code> 元素 (代表骰子的一个面) 是 Flex 容器，<code>span</code> 元素 (代表一个点) 是 Flex 项目。如果有多个项目，就要添加多个 <code>span</code> 元素，以此类推。</p>
<h3 id="单项目" tabindex="-1"> 单项目</h3>
<p>首先，只有左上角 1 个点的情况。Flex 布局默认就是首行左对齐，所以一行代码就够了。</p>

<CodeDemo id="code-demo-9dfb1a6c" title="%E7%82%B9%E4%BD%8D%201" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div></CodeDemo><p>设置项目的对齐方式，就能实现居中对齐和右对齐。</p>

<CodeDemo id="code-demo-588b17d4" title="%E7%82%B9%E4%BD%8D%202" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div></CodeDemo>
<CodeDemo id="code-demo-81abe8e6" title="%E7%82%B9%E4%BD%8D%203" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20flex-end%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> flex-end<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div></CodeDemo><p>设置交叉轴对齐方式，可以垂直移动主轴。</p>

<CodeDemo id="code-demo-71beb960" title="%E7%82%B9%E4%BD%8D%204" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div></CodeDemo>
<CodeDemo id="code-demo-cdfc566e" title="%E7%82%B9%E4%BD%8D%205" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div></CodeDemo>
<CodeDemo id="code-demo-7c1e3aa1" title="%E7%82%B9%E4%BD%8D%208" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20flex-end%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> flex-end<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div></CodeDemo>
<CodeDemo id="code-demo-7272d66e" title="%E7%82%B9%E4%BD%8D%209" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20flex-end%3B%5Cn%20%20align-items%3A%20flex-end%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> flex-end<span>;</span>
  <span>align-items</span><span>:</span> flex-end<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div></CodeDemo><h3 id="双项目" tabindex="-1"> 双项目</h3>

<CodeDemo id="code-demo-63d02804" title="%E5%8F%8C%E7%82%B9%E4%BD%8D%2013" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20space-between%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> space-between<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div></CodeDemo>
<CodeDemo id="code-demo-25eecc5c" title="%E5%8F%8C%E7%82%B9%E4%BD%8D%2017" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20flex-direction%3A%20column%3B%5Cn%20%20justify-content%3A%20space-between%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>flex-direction</span><span>:</span> column<span>;</span>
  <span>justify-content</span><span>:</span> space-between<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div></CodeDemo>
<CodeDemo id="code-demo-1f12577e" title="%E5%8F%8C%E7%82%B9%E4%BD%8D%2028" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20flex-direction%3A%20column%3B%5Cn%20%20justify-content%3A%20space-between%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>flex-direction</span><span>:</span> column<span>;</span>
  <span>justify-content</span><span>:</span> space-between<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br></div></div></CodeDemo>
<CodeDemo id="code-demo-a3cca79a" title="%E5%8F%8C%E7%82%B9%E4%BD%8D%2039" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20flex-direction%3A%20column%3B%5Cn%20%20justify-content%3A%20space-between%3B%5Cn%20%20align-items%3A%20flex-end%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>flex-direction</span><span>:</span> column<span>;</span>
  <span>justify-content</span><span>:</span> space-between<span>;</span>
  <span>align-items</span><span>:</span> flex-end<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br></div></div></CodeDemo>
<CodeDemo id="code-demo-57edf423" title="%E5%8F%8C%E7%82%B9%E4%BD%8D%2015" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%7D%5Cn%5Cn.item%3Anth-child(2)%20%7B%5Cn%20%20align-self%3A%20center%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
<span>}</span>

<span>.item:nth-child(2)</span> <span>{</span>
  <span>align-self</span><span>:</span> center<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br></div></div></CodeDemo>
<CodeDemo id="code-demo-606aa048" title="%E5%8F%8C%E7%82%B9%E4%BD%8D%2019" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20space-between%3B%5Cn%7D%5Cn%5Cn.item%3Anth-child(2)%20%7B%5Cn%20%20align-self%3A%20flex-end%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> space-between<span>;</span>
<span>}</span>

<span>.item:nth-child(2)</span> <span>{</span>
  <span>align-self</span><span>:</span> flex-end<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br></div></div></CodeDemo><h3 id="三项目" tabindex="-1"> 三项目</h3>

<CodeDemo id="code-demo-7419a227" title="%E4%B8%89%E7%82%B9" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%7D%5Cn%5Cn.item%3Anth-child(2)%20%7B%5Cn%20%20align-self%3A%20center%3B%5Cn%7D%5Cn%5Cn.item%3Anth-child(3)%20%7B%5Cn%20%20align-self%3A%20flex-end%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
<span>}</span>

<span>.item:nth-child(2)</span> <span>{</span>
  <span>align-self</span><span>:</span> center<span>;</span>
<span>}</span>

<span>.item:nth-child(3)</span> <span>{</span>
  <span>align-self</span><span>:</span> flex-end<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br></div></div></CodeDemo><h3 id="四项目" tabindex="-1"> 四项目</h3>

<CodeDemo id="code-demo-3417424a" title="%E5%9B%9B%E7%82%B9" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cdiv%20class%3D%5C%22column%5C%22%3E%5Cn%20%20%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20%3Cdiv%20class%3D%5C%22column%5C%22%3E%5Cn%20%20%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20flex-wrap%3A%20wrap%3B%5Cn%20%20align-content%3A%20space-between%3B%5Cn%7D%5Cn%5Cn.column%20%7B%5Cn%20%20flex-basis%3A%20100%25%3B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20space-between%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>column<span>"</span></span><span>></span></span>
      <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
      <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;/</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>column<span>"</span></span><span>></span></span>
      <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
      <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>flex-wrap</span><span>:</span> wrap<span>;</span>
  <span>align-content</span><span>:</span> space-between<span>;</span>
<span>}</span>

<span>.column</span> <span>{</span>
  <span>flex-basis</span><span>:</span> 100%<span>;</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> space-between<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br></div></div></CodeDemo><h3 id="六项目" tabindex="-1"> 六项目</h3>

<CodeDemo id="code-demo-e86f8034" title="%E5%85%AD%E7%82%B9" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20flex-wrap%3A%20wrap%3B%5Cn%20%20justify-content%3A%20space-between%3B%5Cn%20%20align-content%3A%20space-between%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>flex-wrap</span><span>:</span> wrap<span>;</span>
  <span>justify-content</span><span>:</span> space-between<span>;</span>
  <span>align-content</span><span>:</span> space-between<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br></div></div></CodeDemo>
<CodeDemo id="code-demo-6969beac" title="%E5%85%AD%E7%82%B9%202" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20flex-direction%3A%20column%3B%5Cn%20%20flex-wrap%3A%20wrap%3B%5Cn%20%20justify-content%3A%20space-between%3B%5Cn%20%20align-content%3A%20space-between%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>flex-direction</span><span>:</span> column<span>;</span>
  <span>flex-wrap</span><span>:</span> wrap<span>;</span>
  <span>justify-content</span><span>:</span> space-between<span>;</span>
  <span>align-content</span><span>:</span> space-between<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br></div></div></CodeDemo><p>您还可以使用高级选择器:</p>

<CodeDemo id="code-demo-2a0fc6eb" title="%E4%B8%80%E4%B8%AA%E5%9B%BE%E6%A1%88" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22dice-container%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20%3Cdiv%20class%3D%5C%22row%5C%22%3E%5Cn%20%20%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20%3Cdiv%20class%3D%5C%22row%5C%22%3E%5Cn%20%20%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20%3Cdiv%20class%3D%5C%22row%5C%22%3E%5Cn%20%20%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%20%20%3Cspan%20class%3D%5C%22item%5C%22%20%2F%3E%5Cn%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.box%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20flex-wrap%3A%20wrap%3B%5Cn%7D%5Cn%5Cn.row%20%7B%5Cn%20%20flex-basis%3A%20100%25%3B%5Cn%20%20display%3A%20flex%3B%5Cn%7D%5Cn%5Cn.row%3Anth-child(2)%20%7B%5Cn%20%20justify-content%3A%20center%3B%5Cn%7D%5Cn%5Cn.row%3Anth-child(3)%20%7B%5Cn%20%20justify-content%3A%20space-between%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.dice-container%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%20%20align-items%3A%20center%3B%5Cn%20%20height%3A%20150px%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%5Cn.dice-container%20.box%20%7B%5Cn%20%20width%3A%2090px%3B%5Cn%20%20height%3A%2090px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border-radius%3A%208px%3B%5Cn%20%20background-color%3A%20%23f8f8f8%3B%5Cn%7D%5Cn%5Cn.dice-container%20.item%20%7B%5Cn%20%20width%3A%2024px%3B%5Cn%20%20height%3A%2024px%3B%5Cn%20%20margin%3A%203px%3B%5Cn%20%20border-radius%3A%2050%25%3B%5Cn%20%20background-color%3A%20%23000%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>dice-container<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>row<span>"</span></span><span>></span></span>
      <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
      <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
      <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;/</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>row<span>"</span></span><span>></span></span>
      <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;/</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>row<span>"</span></span><span>></span></span>
      <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
      <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>item<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><div><pre><code><span>.box</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>flex-wrap</span><span>:</span> wrap<span>;</span>
<span>}</span>

<span>.row</span> <span>{</span>
  <span>flex-basis</span><span>:</span> 100%<span>;</span>
  <span>display</span><span>:</span> flex<span>;</span>
<span>}</span>

<span>.row:nth-child(2)</span> <span>{</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
<span>}</span>

<span>.row:nth-child(3)</span> <span>{</span>
  <span>justify-content</span><span>:</span> space-between<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.dice-container</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
  <span>align-items</span><span>:</span> center<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>

<span>.dice-container .box</span> <span>{</span>
  <span>width</span><span>:</span> 90px<span>;</span>
  <span>height</span><span>:</span> 90px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border-radius</span><span>:</span> 8px<span>;</span>
  <span>background-color</span><span>:</span> #f8f8f8<span>;</span>
<span>}</span>

<span>.dice-container .item</span> <span>{</span>
  <span>width</span><span>:</span> 24px<span>;</span>
  <span>height</span><span>:</span> 24px<span>;</span>
  <span>margin</span><span>:</span> 3px<span>;</span>
  <span>border-radius</span><span>:</span> 50%<span>;</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br></div></div></CodeDemo><h2 id="网格布局" tabindex="-1"> 网格布局</h2>
<h3 id="基本网格布局" tabindex="-1"> 基本网格布局</h3>
<p>最简单的网格布局，就是平均分布。在容器里面平均分配空间，跟上面的骰子布局很像，但是需要设置项目的自动缩放。</p>

<CodeDemo id="code-demo-6e6e0774" title="%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-wrapper%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%5C%22%3E1%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%3Cdiv%20class%3D%5C%22grid-wrapper%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%5C%22%3E1%2F2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%5C%22%3E1%2F2%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%3Cdiv%20class%3D%5C%22grid-wrapper%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%5C%22%3E1%2F3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%5C%22%3E1%2F3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%5C%22%3E1%2F3%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%3Cdiv%20class%3D%5C%22grid-wrapper%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%5C%22%3EMr.Hope%20%E5%BE%88%E5%B8%85!%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%5C%22%3E%5Cn%20%20%20%20Mr.Hope%20%E5%BE%88%E5%B8%85!%20Mr.Hope%20%E5%BE%88%E5%B8%85!%20Mr.Hope%20%E5%BE%88%E5%B8%85!%20Mr.Hope%20%E5%BE%88%E5%B8%85!%20Mr.Hope%20%E5%BE%88%E5%B8%85!%5Cn%20%20%20%20Mr.Hope%20%E5%BE%88%E5%B8%85!%20Mr.Hope%20%E5%BE%88%E5%B8%85!%20Mr.Hope%20%E5%BE%88%E5%B8%85!%20Mr.Hope%20%E5%BE%88%E5%B8%85!%20Mr.Hope%20%E5%BE%88%E5%B8%85!%5Cn%20%20%20%20Mr.Hope%20%E5%BE%88%E5%B8%85!%20Mr.Hope%20%E5%BE%88%E5%B8%85!%20Mr.Hope%20%E5%BE%88%E5%B8%85!%20Mr.Hope%20%E5%BE%88%E5%B8%85!%20Mr.Hope%20%E5%BE%88%E5%B8%85!%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-wrapper%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%7D%5Cn%5Cn.grid-cell%20%7B%5Cn%20%20flex%3A%201%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-cell%20%7B%5Cn%20%20margin%3A%204px%3B%5Cn%20%20padding%3A%2012px%3B%5Cn%20%20border-radius%3A%204px%3B%5Cn%20%20background-color%3A%20rgb(207%2C%20232%2C%20220)%3B%5Cn%20%20color%3A%20%23666%3B%5Cn%20%20font-size%3A%2014px%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-wrapper<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-wrapper<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell<span>"</span></span><span>></span></span>1/2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell<span>"</span></span><span>></span></span>1/2<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-wrapper<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell<span>"</span></span><span>></span></span>1/3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell<span>"</span></span><span>></span></span>1/3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell<span>"</span></span><span>></span></span>1/3<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-wrapper<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell<span>"</span></span><span>></span></span>Mr.Hope 很帅!<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell<span>"</span></span><span>></span></span>
    Mr.Hope 很帅! Mr.Hope 很帅! Mr.Hope 很帅! Mr.Hope 很帅! Mr.Hope 很帅!
    Mr.Hope 很帅! Mr.Hope 很帅! Mr.Hope 很帅! Mr.Hope 很帅! Mr.Hope 很帅!
    Mr.Hope 很帅! Mr.Hope 很帅! Mr.Hope 很帅! Mr.Hope 很帅! Mr.Hope 很帅!
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><p>CSS 代码如下。</p>
<div><pre><code><span>.grid-wrapper</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
<span>}</span>

<span>.grid-cell</span> <span>{</span>
  <span>flex</span><span>:</span> 1<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-cell</span> <span>{</span>
  <span>margin</span><span>:</span> 4px<span>;</span>
  <span>padding</span><span>:</span> 12px<span>;</span>
  <span>border-radius</span><span>:</span> 4px<span>;</span>
  <span>background-color</span><span>:</span> <span>rgb</span><span>(</span>207<span>,</span> 232<span>,</span> 220<span>)</span><span>;</span>
  <span>color</span><span>:</span> #666<span>;</span>
  <span>font-size</span><span>:</span> 14px<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div></CodeDemo><h3 id="百分比布局" tabindex="-1"> 百分比布局</h3>
<p>某个网格的宽度为固定的百分比，其余网格平均分配剩余的空间。</p>

<CodeDemo id="code-demo-a40d10c2" title="%E7%99%BE%E5%88%86%E6%AF%94%E5%B8%83%E5%B1%80" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-wrapper%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%20grid-cell-2%5C%22%3E1%2F2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%20grid-cell-auto%5C%22%3Eauto%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%20grid-cell-auto%5C%22%3Eauto%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%3Cdiv%20class%3D%5C%22grid-wrapper%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%20grid-cell-auto%5C%22%3Eauto%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%20grid-cell-auto%5C%22%3Eauto%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%20grid-cell-3%5C%22%3E1%2F3%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%3Cdiv%20class%3D%5C%22grid-wrapper%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%20grid-cell-4%5C%22%3E1%2F4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%20grid-cell-auto%5C%22%3Eauto%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22grid-cell%20grid-cell-3%5C%22%3E1%2F3%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-wrapper%20%7B%5Cn%20%20display%3A%20flex%3B%5Cn%7D%5Cn%5Cn.grid-cell-auto%20%7B%5Cn%20%20flex%3A%201%3B%5Cn%7D%5Cn%5Cn.grid-cell-2%20%7B%5Cn%20%20width%3A%2050%25%3B%5Cn%7D%5Cn.grid-cell-3%20%7B%5Cn%20%20width%3A%20calc(100%25%20%2F%203)%3B%5Cn%7D%5Cn%5Cn.grid-cell-4%20%7B%5Cn%20%20width%3A%2025%25%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-cell%20%7B%5Cn%20%20margin%3A%204px%3B%5Cn%20%20padding%3A%2012px%3B%5Cn%20%20border-radius%3A%204px%3B%5Cn%20%20background-color%3A%20rgb(207%2C%20232%2C%20220)%3B%5Cn%20%20color%3A%20%23666%3B%5Cn%20%20font-size%3A%2014px%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-wrapper<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell grid-cell-2<span>"</span></span><span>></span></span>1/2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell grid-cell-auto<span>"</span></span><span>></span></span>auto<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell grid-cell-auto<span>"</span></span><span>></span></span>auto<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-wrapper<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell grid-cell-auto<span>"</span></span><span>></span></span>auto<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell grid-cell-auto<span>"</span></span><span>></span></span>auto<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell grid-cell-3<span>"</span></span><span>></span></span>1/3<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-wrapper<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell grid-cell-4<span>"</span></span><span>></span></span>1/4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell grid-cell-auto<span>"</span></span><span>></span></span>auto<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-cell grid-cell-3<span>"</span></span><span>></span></span>1/3<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><div><pre><code><span>.grid-wrapper</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
<span>}</span>

<span>.grid-cell-auto</span> <span>{</span>
  <span>flex</span><span>:</span> 1<span>;</span>
<span>}</span>

<span>.grid-cell-2</span> <span>{</span>
  <span>width</span><span>:</span> 50%<span>;</span>
<span>}</span>
<span>.grid-cell-3</span> <span>{</span>
  <span>width</span><span>:</span> <span>calc</span><span>(</span>100% / 3<span>)</span><span>;</span>
<span>}</span>

<span>.grid-cell-4</span> <span>{</span>
  <span>width</span><span>:</span> 25%<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-cell</span> <span>{</span>
  <span>margin</span><span>:</span> 4px<span>;</span>
  <span>padding</span><span>:</span> 12px<span>;</span>
  <span>border-radius</span><span>:</span> 4px<span>;</span>
  <span>background-color</span><span>:</span> <span>rgb</span><span>(</span>207<span>,</span> 232<span>,</span> 220<span>)</span><span>;</span>
  <span>color</span><span>:</span> #666<span>;</span>
  <span>font-size</span><span>:</span> 14px<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div></CodeDemo><h2 id="圣杯布局" tabindex="-1"> 圣杯布局</h2>
<p>圣杯布局 (Holy Grail Layout) 指的是一种最常见的网站布局。</p>
<p>页面从上到下，分成三个部分: 头部 (header) ，躯干 (body) ，尾部 (footer) 。其中躯干又水平分成三栏，从左到右为: 导航、主栏、副栏。</p>
<p><img src="@source/code/website/css/layout/assets/holy.png" alt="圣杯布局"></p>
<p>HTML 代码如下。</p>
<div><pre><code><span><span><span>&lt;</span>body</span> <span>class</span><span><span>=</span><span>"</span>holy-grail<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>header</span><span>></span></span>...<span><span><span>&lt;/</span>header</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>holy-grail-body<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>main</span> <span>class</span><span><span>=</span><span>"</span>holy-grail-content<span>"</span></span><span>></span></span>...<span><span><span>&lt;/</span>main</span><span>></span></span>
    <span><span><span>&lt;</span>nav</span> <span>class</span><span><span>=</span><span>"</span>holy-grail-nav<span>"</span></span><span>></span></span>...<span><span><span>&lt;/</span>nav</span><span>></span></span>
    <span><span><span>&lt;</span>aside</span> <span>class</span><span><span>=</span><span>"</span>holy-grail-ads<span>"</span></span><span>></span></span>...<span><span><span>&lt;/</span>aside</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>footer</span><span>></span></span>...<span><span><span>&lt;/</span>footer</span><span>></span></span>
<span><span><span>&lt;/</span>body</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>CSS 代码如下。</p>
<div><pre><code><span>.holy-grail</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>min-height</span><span>:</span> 100vh<span>;</span>
  <span>flex-direction</span><span>:</span> column<span>;</span>
<span>}</span>

<span>header,
footer</span> <span>{</span>
  <span>flex</span><span>:</span> 1<span>;</span>
<span>}</span>

<span>.holy-grail-body</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>flex</span><span>:</span> 1<span>;</span>
<span>}</span>

<span>.holy-grail-content</span> <span>{</span>
  <span>flex</span><span>:</span> 1<span>;</span>
<span>}</span>

<span>.holy-grail-nav,
.holy-grail-ads</span> <span>{</span>
  <span>/* 两个边栏的宽度设为 12em */</span>
  <span>flex</span><span>:</span> 0 0 12em<span>;</span>
<span>}</span>

<span>.holy-grail-nav</span> <span>{</span>
  <span>/* 导航放到最左边 */</span>
  <span>order</span><span>:</span> -1<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div><p>如果是小屏幕，躯干的三栏自动变为垂直叠加。</p>
<div><pre><code><span><span>@media</span> <span>(</span><span>max-width</span><span>:</span> 768px<span>)</span></span> <span>{</span>
  <span>.holy-grail-body</span> <span>{</span>
    <span>flex-direction</span><span>:</span> column<span>;</span>
    <span>flex</span><span>:</span> 1<span>;</span>
  <span>}</span>
  <span>.holy-grail-nav,
  .holy-grail-ads,
  .holy-grail-content</span> <span>{</span>
    <span>flex</span><span>:</span> auto<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><h2 id="输入框的布局" tabindex="-1"> 输入框的布局</h2>
<p>我们常常需要在输入框的前方添加提示，后方添加按钮。</p>
<p><img src="@source/code/website/css/layout/assets/input.png" alt="输入框"></p>
<p>HTML 代码如下。</p>
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>input-add-on<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>input-add-on-item<span>"</span></span><span>></span></span>...<span><span><span>&lt;/</span>span</span><span>></span></span>
  <span><span><span>&lt;</span>input</span> <span>class</span><span><span>=</span><span>"</span>input-add-on-field<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;</span>button</span> <span>class</span><span><span>=</span><span>"</span>input-add-on-item<span>"</span></span><span>></span></span>...<span><span><span>&lt;/</span>button</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>CSS 代码如下。</p>
<div><pre><code><span>.input-add-on</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
<span>}</span>

<span>.input-add-on-field</span> <span>{</span>
  <span>flex</span><span>:</span> 1<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h2 id="悬挂式布局" tabindex="-1"> 悬挂式布局</h2>
<p>有时，主栏的左侧或右侧，需要添加一个图片栏。</p>
<p><img src="@source/code/website/css/layout/assets/hang.png" alt="悬挂式布局"></p>
<p>HTML 代码如下。</p>
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>media<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>img</span> <span>class</span><span><span>=</span><span>"</span>media-figure<span>"</span></span> <span>src</span><span><span>=</span><span>"</span><span>"</span></span> <span>alt</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;</span>p</span> <span>class</span><span><span>=</span><span>"</span>media-body<span>"</span></span><span>></span></span>...<span><span><span>&lt;/</span>p</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>CSS 代码如下。</p>
<div><pre><code><span>.media</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>align-items</span><span>:</span> flex-start<span>;</span>
<span>}</span>

<span>.media-figure</span> <span>{</span>
  <span>margin-right</span><span>:</span> 1em<span>;</span>
<span>}</span>

<span>.media-body</span> <span>{</span>
  <span>flex</span><span>:</span> 1<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><h2 id="固定的底栏" tabindex="-1"> 固定的底栏</h2>
<p>有时，页面内容太少，无法占满一屏的高度，底栏就会抬高到页面的中间。这时可以采用 Flex 布局，让底栏总是出现在页面的底部。</p>
<p><img src="@source/code/website/css/layout/assets/footer.png" alt="固定底栏"></p>
<p>HTML 代码如下。</p>
<div><pre><code><span><span><span>&lt;</span>body</span> <span>class</span><span><span>=</span><span>"</span>site<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>header</span><span>></span></span>...<span><span><span>&lt;/</span>header</span><span>></span></span>
  <span><span><span>&lt;</span>main</span> <span>class</span><span><span>=</span><span>"</span>site-content<span>"</span></span><span>></span></span>...<span><span><span>&lt;/</span>main</span><span>></span></span>
  <span><span><span>&lt;</span>footer</span><span>></span></span>...<span><span><span>&lt;/</span>footer</span><span>></span></span>
<span><span><span>&lt;/</span>body</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>CSS 代码如下。</p>
<div><pre><code><span>.site</span> <span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>min-height</span><span>:</span> 100vh<span>;</span>
  <span>flex-direction</span><span>:</span> column<span>;</span>
<span>}</span>

<span>.site-content</span> <span>{</span>
  <span>flex</span><span>:</span> 1<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><h2 id="流式布局" tabindex="-1"> 流式布局</h2>
<p><img src="@source/code/website/css/layout/assets/flow.png" alt="流式布局"></p>
<p>每行的项目数固定，会自动分行。</p>
<p>CSS 的写法。</p>
<div><pre><code><span>.parent</span> <span>{</span>
  <span>width</span><span>:</span> 200px<span>;</span>
  <span>height</span><span>:</span> 150px<span>;</span>
  <span>background-color</span><span>:</span> black<span>;</span>
  <span>display</span><span>:</span> flex<span>;</span>
  <span>flex-flow</span><span>:</span> row wrap<span>;</span>
  <span>align-content</span><span>:</span> flex-start<span>;</span>
<span>}</span>

<span>.child</span> <span>{</span>
  <span>box-sizing</span><span>:</span> border-box<span>;</span>
  <span>background-color</span><span>:</span> white<span>;</span>
  <span>flex</span><span>:</span> 0 0 25%<span>;</span>
  <span>height</span><span>:</span> 50px<span>;</span>
  <span>border</span><span>:</span> 1px solid red<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>网格布局</title>
      <link>https://mrhope.site/code/website/css/layout/grid.html</link>
      <guid>https://mrhope.site/code/website/css/layout/grid.html</guid>
      <source url="https://mrhope.site/rss.xml">网格布局</source>
      <category>CSS</category>
      <pubDate>Tue, 20 Oct 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="概述" tabindex="-1"> 概述</h2>
<p>网格布局 (Grid) 是最强大的 CSS 布局方案。它将网页划分成一个个网格，可以任意组合不同的网格，做出各种各样的布局。</p>

<CodeDemo id="code-demo-3e9eddae" title="%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80%E6%A1%88%E4%BE%8B" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20repeat(3%2C%201fr)%3B%5Cn%20%20grid-gap%3A%2010px%3B%5Cn%20%20grid-auto-rows%3A%20minmax(100px%2C%20auto)%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20padding%3A%201em%3B%5Cn%20%20border%3A%202px%20solid%20rgb(233%2C%20171%2C%2088)%3B%5Cn%20%20border-radius%3A%205px%3B%5Cn%20%20background-color%3A%20rgba(233%2C%20171%2C%2088%2C%200.5)%3B%5Cn%20%20color%3A%20%23d9480f%3B%5Cn%20%20font-size%3A%202rem%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20grid-column%3A%201%20%2F%203%3B%5Cn%20%20grid-row%3A%201%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20grid-column%3A%202%20%2F%204%3B%5Cn%20%20grid-row%3A%201%20%2F%203%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20grid-row%3A%202%20%2F%205%3B%5Cn%20%20grid-column%3A%201%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20grid-column%3A%203%3B%5Cn%20%20grid-row%3A%203%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20grid-column%3A%202%3B%5Cn%20%20grid-row%3A%204%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20grid-column%3A%203%3B%5Cn%20%20grid-row%3A%204%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> <span>repeat</span><span>(</span>3<span>,</span> 1fr<span>)</span><span>;</span>
  <span>grid-gap</span><span>:</span> 10px<span>;</span>
  <span>grid-auto-rows</span><span>:</span> <span>minmax</span><span>(</span>100px<span>,</span> auto<span>)</span><span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>padding</span><span>:</span> 1em<span>;</span>
  <span>border</span><span>:</span> 2px solid <span>rgb</span><span>(</span>233<span>,</span> 171<span>,</span> 88<span>)</span><span>;</span>
  <span>border-radius</span><span>:</span> 5px<span>;</span>
  <span>background-color</span><span>:</span> <span>rgba</span><span>(</span>233<span>,</span> 171<span>,</span> 88<span>,</span> 0.5<span>)</span><span>;</span>
  <span>color</span><span>:</span> #d9480f<span>;</span>
  <span>font-size</span><span>:</span> 2rem<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>grid-column</span><span>:</span> 1 / 3<span>;</span>
  <span>grid-row</span><span>:</span> 1<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>grid-column</span><span>:</span> 2 / 4<span>;</span>
  <span>grid-row</span><span>:</span> 1 / 3<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>grid-row</span><span>:</span> 2 / 5<span>;</span>
  <span>grid-column</span><span>:</span> 1<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>grid-column</span><span>:</span> 3<span>;</span>
  <span>grid-row</span><span>:</span> 3<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>grid-column</span><span>:</span> 2<span>;</span>
  <span>grid-row</span><span>:</span> 4<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>grid-column</span><span>:</span> 3<span>;</span>
  <span>grid-row</span><span>:</span> 4<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br></div></div></CodeDemo><p>上图这样的布局，就是 Grid 布局的拿手好戏。</p>
<div><p>与 flex 的区别</p>
<p>Grid 布局与 Flex 布局有一定的相似性，都可以指定容器内部多个项目的位置。但是，它们也存在重大区别。</p>
<p>Flex 布局是轴线布局，只能指定&quot;项目&quot;针对轴线的位置，可以看作是一维布局。Grid 布局则是将容器划分成&quot;行&quot;和&quot;列&quot;，产生单元格，然后指定&quot;项目所在&quot;的单元格，可以看作是二维布局。Grid 布局远比 Flex 布局强大。</p>
</div>
<h2 id="基本概念" tabindex="-1"> 基本概念</h2>
<h3 id="容器和项目" tabindex="-1"> 容器和项目</h3>
<p>采用网格布局的区域，称为&quot;容器&quot; (container) 。容器内部采用网格定位的子元素，称为&quot;项目&quot; (item) 。</p>
<div><pre><code><span><span><span>&lt;</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span><span><span><span>&lt;</span>p</span><span>></span></span>1<span><span><span>&lt;/</span>p</span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span><span><span><span>&lt;</span>p</span><span>></span></span>2<span><span><span>&lt;/</span>p</span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span><span><span><span>&lt;</span>p</span><span>></span></span>3<span><span><span>&lt;/</span>p</span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>上面代码中，最外层的 <code>&lt;div&gt;</code> 元素就是容器，内层的三个 <code>&lt;div&gt;</code> 元素就是项目。</p>
<div><p>注意</p>
<p>项目只能是容器的顶层子元素，不包含项目的子元素，比如上面代码的 <code>&lt;p&gt;</code> 元素就不是项目。Grid 布局只对项目生效。</p>
</div>
<h3 id="行和列" tabindex="-1"> 行和列</h3>
<p><img src="@source/code/website/css/layout/assets/rowAndColumn.png" alt="行和列"></p>
<p>容器里面的水平区域称为&quot;行&quot; (row) ，垂直区域称为&quot;列&quot; (column) 。</p>
<p>上图中，水平的深色区域就是&quot;行&quot;，垂直的深色区域就是&quot;列&quot;。</p>
<h3 id="单元格" tabindex="-1"> 单元格</h3>
<p>行和列的交叉区域，称为&quot;单元格&quot; (cell) 。</p>
<p>正常情况下，n 行和 m 列会产生 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6667em;vertical-align:-0.0833em;"></span><span>n</span><span style="margin-right:0.2222em;"></span><span>×</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.4306em;"></span><span>m</span></span></span></span> 个单元格。比如，3 行 3 列会产生 9 个单元格。</p>
<h3 id="网格线" tabindex="-1"> 网格线</h3>
<p>划分网格的线，称为&quot;网格线&quot; (grid line) 。水平网格线划分出行，垂直网格线划分出列。</p>
<p><img src="@source/code/website/css/layout/assets/grid-line.png" alt="网格线"></p>
<p>正常情况下，<span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.4306em;"></span><span>n</span></span></span></span> 行有 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6667em;vertical-align:-0.0833em;"></span><span>n</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.6444em;"></span><span>1</span></span></span></span> 根水平网格线，<span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.4306em;"></span><span>m</span></span></span></span> 列有 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.6667em;vertical-align:-0.0833em;"></span><span>m</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.6444em;"></span><span>1</span></span></span></span> 根垂直网格线，比如三行就有四根水平网格线。</p>
<p>上图是一个 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.7278em;vertical-align:-0.0833em;"></span><span>4</span><span style="margin-right:0.2222em;"></span><span>×</span><span style="margin-right:0.2222em;"></span></span><span><span style="height:0.6444em;"></span><span>4</span></span></span></span> 的网格，共有 5 根水平网格线和 5 根垂直网格线。</p>
<h3 id="沟槽" tabindex="-1"> 沟槽</h3>
<p>行与行、列与列之间的间隙，这个间隙一般被称为沟槽(gutter)。</p>
<h2 id="容器属性" tabindex="-1"> 容器属性</h2>
<p>Grid 布局的属性分成两类。一类定义在容器上面，称为容器属性；另一类定义在项目上面，称为项目属性。这部分先介绍容器属性。</p>
<h3 id="display-属性" tabindex="-1"> display 属性</h3>
<p><code>display: grid</code> 指定一个容器采用网格布局。</p>

<CodeDemo id="code-demo-15cb9764" title="%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80" code="%7B%22html%22%3A%22%3Cspan%20style%3D%5C%22font-size%3A%2022px%5C%22%3EMr.Hope%3C%2Fspan%3E%5Cn%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%3Cspan%20style%3D%5C%22font-size%3A%2022px%5C%22%3Eis%20handsome%3C%2Fspan%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>span</span> <span><span>style</span><span><span>=</span><span>"</span><span><span>font-size</span><span>:</span> 22px</span><span>"</span></span></span><span>></span></span>Mr.Hope<span><span><span>&lt;/</span>span</span><span>></span></span>
<span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>span</span> <span><span>style</span><span><span>=</span><span>"</span><span><span>font-size</span><span>:</span> 22px</span><span>"</span></span></span><span>></span></span>is handsome<span><span><span>&lt;/</span>span</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br></div></div></CodeDemo><p>默认情况下，容器元素都是块级元素，但也可以设成行内元素。</p>

<CodeDemo id="code-demo-0b6b6c88" title="%E8%A1%8C%E5%86%85%E7%BD%91%E6%A0%BC%E5%B8%83%E5%B1%80" code="%7B%22html%22%3A%22%3Cspan%20style%3D%5C%22font-size%3A%2022px%5C%22%3EMr.Hope%3C%2Fspan%3E%5Cn%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%3Cspan%20style%3D%5C%22font-size%3A%2022px%5C%22%3Eis%20handsome%3C%2Fspan%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20inline-grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>span</span> <span><span>style</span><span><span>=</span><span>"</span><span><span>font-size</span><span>:</span> 22px</span><span>"</span></span></span><span>></span></span>Mr.Hope<span><span><span>&lt;/</span>span</span><span>></span></span>
<span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>span</span> <span><span>style</span><span><span>=</span><span>"</span><span><span>font-size</span><span>:</span> 22px</span><span>"</span></span></span><span>></span></span>is handsome<span><span><span>&lt;/</span>span</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> inline-grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br></div></div></CodeDemo><div><p>提示</p>
<p>设为网格布局以后，容器子元素 (项目) 的 <code>float</code>、<code>display: inline-block</code>、<code>display: table-cell</code>、<code>vertical-align</code> 和 <code>column-*</code> 等设置都将失效。</p>
</div>
<h3 id="grid-template-columns-和-grid-template-rows-属性" tabindex="-1"> grid-template-columns 和 grid-template-rows 属性</h3>
<p>容器指定了网格布局以后，接着就要划分行和列。<code>grid-template-columns</code> 属性定义每一列的列宽，<code>grid-template-rows</code> 属性定义每一行的行高。</p>

<CodeDemo id="code-demo-e7eebe80" title="%E5%88%92%E5%88%86%E8%A1%8C%E5%92%8C%E5%88%97" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br></div></div></CodeDemo><p>上面代码指定了一个三行三列的网格，列宽和行高都是 100px。</p>
<p>除了使用绝对单位，也可以使用百分比。</p>

<CodeDemo id="code-demo-07457cc2" title="%E7%99%BE%E5%88%86%E6%AF%94" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%2033.33%25%2033.33%25%2033.33%25%3B%5Cn%20%20grid-template-rows%3A%2033.33%25%2033.33%25%2033.33%25%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 33.33% 33.33% 33.33%<span>;</span>
  <span>grid-template-rows</span><span>:</span> 33.33% 33.33% 33.33%<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br></div></div></CodeDemo><h4 id="repeat" tabindex="-1"> repeat()</h4>
<p>有时候，重复写同样的值非常麻烦，尤其网格很多时。这时，可以使用 <code>repeat()</code> 函数，简化重复的值。</p>

<CodeDemo id="code-demo-0325a355" title="repeat()" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20repeat(3%2C%2033.33%25)%3B%5Cn%20%20grid-template-rows%3A%20repeat(3%2C%2033.33%25)%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<p>上面的代码用 <code>repeat()</code> 改写如下。</p>
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> <span>repeat</span><span>(</span>3<span>,</span> 33.33%<span>)</span><span>;</span>
  <span>grid-template-rows</span><span>:</span> <span>repeat</span><span>(</span>3<span>,</span> 33.33%<span>)</span><span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br></div></div></CodeDemo><p><code>repeat()</code> 接受两个参数，第一个参数是重复的次数 (上例是 <code>3</code>) ，第二个参数是所要重复的值。</p>
<p><code>repeat()</code> 重复某种模式也是可以的。</p>

<CodeDemo id="code-demo-583169d8" title="%E9%87%8D%E5%A4%8D%E6%A8%A1%E5%BC%8F" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20width%3A%20300px%3B%5Cn%20%20height%3A%20300px%3B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20repeat(2%2C%20100px%2020px%2080px)%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>width</span><span>:</span> 300px<span>;</span>
  <span>height</span><span>:</span> 300px<span>;</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> <span>repeat</span><span>(</span>2<span>,</span> 100px 20px 80px<span>)</span><span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br></div></div></CodeDemo><p>上面代码定义了 6 列，第一列和第四列的宽度为 <code>100px</code>，第二列和第五列为 <code>20px</code>，第三列和第六列为 <code>80px</code>。</p>
<h4 id="auto-fill-关键字" tabindex="-1"> auto-fill 关键字</h4>
<p>有时，单元格的大小是固定的，但是容器的大小不确定。如果希望每一行 (或每一列) 容纳尽可能多的单元格，这时可以使用 <code>auto-fill</code> 关键字表示自动填充。</p>

<CodeDemo id="code-demo-b716e728" title="%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%85%85" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20repeat(auto-fill%2C%20100px)%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20height%3A%20100px%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> <span>repeat</span><span>(</span>auto-fill<span>,</span> 100px<span>)</span><span>;</span>
<span>}</span>

<span>.grid-demo > div</span> <span>{</span>
  <span>height</span><span>:</span> 100px<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br></div></div></CodeDemo><p>上面代码表示每列宽度 <code>100px</code>，然后自动填充，直到容器不能放置更多的列。</p>
<h4 id="fr-关键字" tabindex="-1"> fr 关键字</h4>
<p>为了方便表示比例关系，网格布局提供了 <code>fr</code> 关键字 (fraction 的缩写，意为&quot;片段&quot;) 。如果两列的宽度分别为 <code>1fr</code> 和 <code>2fr</code>，就表示后者是前者的两倍。</p>

<CodeDemo id="code-demo-071e137d" title="fr" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%201fr%201fr%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20height%3A%20100px%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<p>下面代码表示两个相同宽度的列。</p>
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 1fr 1fr<span>;</span>
<span>}</span>

<span>.grid-demo > div</span> <span>{</span>
  <span>height</span><span>:</span> 100px<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br></div></div></CodeDemo><p><code>fr</code> 可以与绝对长度的单位结合使用，这时会非常方便。</p>

<CodeDemo id="code-demo-492e030f" title="fr%20%E7%9A%84%E6%B7%B7%E7%94%A8" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20150px%201fr%202fr%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20height%3A%20100px%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<p>下面代码表示，第一列的宽度为 150 像素，第二列的宽度是第三列的一半。</p>
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 150px 1fr 2fr<span>;</span>
<span>}</span>

<span>.grid-demo > div</span> <span>{</span>
  <span>height</span><span>:</span> 100px<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br></div></div></CodeDemo><h4 id="minmax" tabindex="-1"> minmax()</h4>
<p><code>minmax()</code> 函数产生一个长度范围，表示长度就在这个范围之中。它接受两个参数，分别为最小值和最大值。</p>

<CodeDemo id="code-demo-32b6706a" title="minmax()" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%201fr%201fr%20minmax(100px%2C%201fr)%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20height%3A%20100px%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<p>下面代码中，<code>minmax(100px, 1fr)</code> 表示列宽不小于 <code>100px</code>，不大于 <code>1fr</code>。</p>
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 1fr 1fr <span>minmax</span><span>(</span>100px<span>,</span> 1fr<span>)</span><span>;</span>
<span>}</span>

<span>.grid-demo > div</span> <span>{</span>
  <span>height</span><span>:</span> 100px<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br></div></div></CodeDemo><h4 id="auto-关键字" tabindex="-1"> auto 关键字</h4>
<p><code>auto</code> 关键字表示由浏览器自己决定长度。</p>

<CodeDemo id="code-demo-411e39e8" title="auto" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20auto%20100px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20height%3A%20100px%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<p>下面代码中，第二列的宽度，基本上等于该列单元格的最大宽度，除非单元格内容设置了 <code>min-width</code>，且这个值大于最大宽度。</p>
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px auto 100px<span>;</span>
<span>}</span>

<span>.grid-demo > div</span> <span>{</span>
  <span>height</span><span>:</span> 100px<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br></div></div></CodeDemo><h4 id="网格线的名称" tabindex="-1"> 网格线的名称</h4>
<p><code>grid-template-columns</code> 属性和 <code>grid-template-rows</code> 属性里面，还可以使用方括号，指定每一根网格线的名字，方便以后的引用。</p>

<CodeDemo id="code-demo-148ba47c" title="%E7%BD%91%E6%A0%BC%E7%BA%BF%E7%9A%84%E5%90%8D%E7%A7%B0" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20%5Bc1%5D%20100px%20%5Bc2%5D%20100px%20%5Bc3%5D%20auto%20%5Bc4%5D%3B%5Cn%20%20grid-template-rows%3A%20%5Br1%5D%20100px%20%5Br2%5D%20100px%20%5Br3%5D%20auto%20%5Br4%5D%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<p>下面代码指定网格布局为 3 行 x 3 列，因此有 4 根垂直网格线和 4 根水平网格线。方括号里面依次是这八根线的名字。</p>
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> [c1] 100px [c2] 100px [c3] auto [c4]<span>;</span>
  <span>grid-template-rows</span><span>:</span> [r1] 100px [r2] 100px [r3] auto [r4]<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br></div></div></CodeDemo><p>网格布局允许同一根线有多个名字，比如 <code>[fifth-line row-5]</code>。</p>
<h4 id="布局实例" tabindex="-1"> 布局实例</h4>
<p><code>grid-template-columns</code> 属性对于网页布局非常有用。两栏式布局只需要一行代码。</p>
<div><pre><code><span>.wrapper</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 70% 30%<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>上面代码将左边栏设为 <code>70%</code>，右边栏设为 <code>30%</code>。</p>
<p>传统的十二网格布局，写起来也很容易。</p>
<div><pre><code><span>.container</span> <span>{</span>
  <span>grid-template-columns</span><span>:</span> <span>repeat</span><span>(</span>12<span>,</span> 1fr<span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="row-gap-属性、column-gap-属性-和-gap-属性" tabindex="-1"> row-gap 属性、column-gap 属性 和 gap 属性</h3>
<p><code>row-gap</code> 属性设置行与行的间隔 (行间距) ，<code>column-gap</code> 属性设置列与列的间隔 (列间距) 。</p>
<div><pre><code><span>.container</span> <span>{</span>
  <span>row-gap</span><span>:</span> 20px<span>;</span>
  <span>column-gap</span><span>:</span> 20px<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div>
<CodeDemo id="code-demo-09fb678c" title="%E9%97%B4%E8%B7%9D%E8%AE%BE%E7%BD%AE" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20row-gap%3A%2020px%3B%5Cn%20%20column-gap%3A%2020px%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>row-gap</span><span>:</span> 20px<span>;</span>
  <span>column-gap</span><span>:</span> 20px<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br></div></div></CodeDemo><p>上面代码中，<code>row-gap</code> 用于设置行间距，<code>column-gap</code> 用于设置列间距。</p>
<p><code>gap</code> 属性是 <code>column-gap</code> 和 <code>row-gap</code> 的合并简写形式，语法如下。</p>
<div><pre><code><span>.container</span> <span>{</span>
  <span>gap</span><span>:</span> &lt;row-gap> &lt;column-gap><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>因此，上面一段 CSS 代码等同于下面的代码。</p>
<div><pre><code><span>.container</span> <span>{</span>
  <span>gap</span><span>:</span> 20px 20px<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>如果 <code>gap</code> 省略了第二个值，浏览器认为第二个值等于第一个值。</p>
<h3 id="grid-template-areas-属性" tabindex="-1"> grid-template-areas 属性</h3>
<p>网格布局允许指定&quot;区域&quot; (area) ，一个区域由单个或多个单元格组成。<code>grid-template-areas</code> 属性用于定义区域。</p>
<div><pre><code><span>.container</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-areas</span><span>:</span>
    <span>"a b c"</span>
    <span>"d e f"</span>
    <span>"g h i"</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>上面代码先划分出 9 个单元格，然后将其定名为 <code>a</code> 到 <code>i</code> 的九个区域，分别对应这九个单元格。</p>
<p>多个单元格合并成一个区域的写法如下。</p>
<div><pre><code><span>.container</span> <span>{</span>
  <span>grid-template-areas</span><span>:</span>
    <span>"a a a"</span>
    <span>"b b b"</span>
    <span>"c c c"</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>上面代码将 9 个单元格分成 <code>a</code>、<code>b</code>、<code>c</code> 三个区域。</p>
<p>下面是一个布局实例。</p>
<div><pre><code><span>.container</span> <span>{</span>
  <span>grid-template-areas</span><span>:</span>
    <span>"header header header"</span>
    <span>"main main sidebar"</span>
    <span>"footer footer footer"</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>上面代码中，顶部是页眉区域 <code>header</code>，底部是页脚区域 <code>footer</code>，中间部分则为 <code>main</code> 和 <code>sidebar</code>。</p>
<p>如果某些区域不需要利用，则使用&quot;点&quot; (<code>.</code>) 表示。</p>
<div><pre><code><span>.container</span> <span>{</span>
  <span>grid-template-areas</span><span>:</span>
    <span>"a . c"</span>
    <span>"d . f"</span>
    <span>"g . i"</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>上面代码中，中间一列为点，表示没有用到该单元格，或者该单元格不属于任何区域。</p>
<div><p>提示</p>
<p>区域的命名会影响到网格线。每个区域的起始网格线，会自动命名为 <code>区域名-start</code>，终止网格线自动命名为 <code>区域名-end</code>。</p>
<p>比如，区域名为 <code>header</code>，则起始位置的水平网格线和垂直网格线叫做 <code>header-start</code>，终止位置的水平网格线和垂直网格线叫做 <code>header-end</code>。</p>
</div>
<h3 id="grid-auto-flow-属性" tabindex="-1"> grid-auto-flow 属性</h3>
<p>划分网格以后，容器的子元素会按照顺序，自动放置在每一个网格。默认的放置顺序是&quot;先行后列&quot;，即先填满第一行，再开始放入第二行，即下方数字的顺序。</p>

<CodeDemo id="code-demo-e7eebe80" title="%E9%BB%98%E8%AE%A4%E9%A1%BA%E5%BA%8F%E2%80%9C%E5%85%88%E8%A1%8C%E5%90%8E%E5%88%97%E2%80%9D" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br></div></div></CodeDemo><p>这个顺序由 <code>grid-auto-flow</code> 属性决定，默认值是 <code>row</code>，即&quot;先行后列&quot;。也可以将它设成 <code>column</code>，变成&quot;先列后行&quot;。</p>
<p>设置了 <code>column</code> 以后，放置顺序就变成了下图。</p>

<CodeDemo id="code-demo-4d47be40" title="grid-auto-flow%3A%20column" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-auto-flow%3A%20column%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-auto-flow</span><span>:</span> column<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br></div></div></CodeDemo><p><code>grid-auto-flow</code> 属性除了设置成 <code>row</code> 和 <code>column</code>，还可以设成 <code>row dense</code> 和 <code>column dense</code>。这两个值主要用于，某些项目指定位置以后，剩下的项目怎么自动放置。</p>
<p>下面的例子让 1 号项目和 2 号项目各占据两个单元格，然后在默认的 <code>grid-auto-flow: row</code> 情况下，会产生下面这样的布局。</p>

<CodeDemo id="code-demo-07af2790" title="%E9%A1%B9%E7%9B%AE%E5%8D%A0%E6%8D%AE%E5%A4%9A%E4%B8%AA%E5%8D%95%E5%85%83%E6%A0%BC%E4%B8%8B%E7%9A%84%20grid-auto-flow%3A%20row" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20width%3A%20300px%3B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-auto-rows%3A%20100px%3B%5Cn%20%20grid-auto-flow%3A%20row%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20%2F*%20%E8%BF%99%E4%B8%AA%E5%B1%9E%E6%80%A7%E5%90%8E%E9%9D%A2%E4%BC%9A%E6%8F%90%E5%88%B0%20*%2F%5Cn%20%20grid-column-start%3A%20span%202%3B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20%2F*%20%E8%BF%99%E4%B8%AA%E5%B1%9E%E6%80%A7%E5%90%8E%E9%9D%A2%E4%BC%9A%E6%8F%90%E5%88%B0%20*%2F%5Cn%20%20grid-column-start%3A%20span%202%3B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>width</span><span>:</span> 300px<span>;</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-auto-rows</span><span>:</span> 100px<span>;</span>
  <span>grid-auto-flow</span><span>:</span> row<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>/* 这个属性后面会提到 */</span>
  <span>grid-column-start</span><span>:</span> span 2<span>;</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>/* 这个属性后面会提到 */</span>
  <span>grid-column-start</span><span>:</span> span 2<span>;</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br></div></div></CodeDemo><p>上图中，1 号项目后面的位置是空的，这是因为 3 号项目默认跟着 2 号项目，所以会排在 2 号项目后面。</p>
<p>现在修改设置，设为 <code>row dense</code>，表示&quot;先行后列&quot;，并且尽可能紧密填满，尽量不出现空格。</p>
<p>上面代码的效果如下。</p>

<CodeDemo id="code-demo-382acbde" title="grid-auto-flow%3A%20row%20dense" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20width%3A%20300px%3B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-auto-rows%3A%20100px%3B%5Cn%20%20grid-auto-flow%3A%20row%20dense%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20%2F*%20%E8%BF%99%E4%B8%AA%E5%B1%9E%E6%80%A7%E5%90%8E%E9%9D%A2%E4%BC%9A%E6%8F%90%E5%88%B0%20*%2F%5Cn%20%20grid-column-start%3A%20span%202%3B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20%2F*%20%E8%BF%99%E4%B8%AA%E5%B1%9E%E6%80%A7%E5%90%8E%E9%9D%A2%E4%BC%9A%E6%8F%90%E5%88%B0%20*%2F%5Cn%20%20grid-column-start%3A%20span%202%3B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>width</span><span>:</span> 300px<span>;</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-auto-rows</span><span>:</span> 100px<span>;</span>
  <span>grid-auto-flow</span><span>:</span> row dense<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>/* 这个属性后面会提到 */</span>
  <span>grid-column-start</span><span>:</span> span 2<span>;</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>/* 这个属性后面会提到 */</span>
  <span>grid-column-start</span><span>:</span> span 2<span>;</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br></div></div></CodeDemo><p>上图会先填满第一行，再填满第二行，所以 3 号项目就会紧跟在 1 号项目的后面。8 号项目和 9 号项目就会排到第四行。</p>
<p>如果将设置改为 <code>column dense</code>，表示&quot;先列后行&quot;，并且尽量填满空格。</p>
<p>上面代码的效果如下。</p>

<CodeDemo id="code-demo-7916a6cd" title="grid-auto-flow%3A%20column%20dense" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20width%3A%20300px%3B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-auto-columns%3A%20100px%3B%5Cn%20%20grid-auto-flow%3A%20column%20dense%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20%2F*%20%E8%BF%99%E4%B8%AA%E5%B1%9E%E6%80%A7%E5%90%8E%E9%9D%A2%E4%BC%9A%E6%8F%90%E5%88%B0%20*%2F%5Cn%20%20grid-column-start%3A%20span%202%3B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20%2F*%20%E8%BF%99%E4%B8%AA%E5%B1%9E%E6%80%A7%E5%90%8E%E9%9D%A2%E4%BC%9A%E6%8F%90%E5%88%B0%20*%2F%5Cn%20%20grid-column-start%3A%20span%202%3B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>width</span><span>:</span> 300px<span>;</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-auto-columns</span><span>:</span> 100px<span>;</span>
  <span>grid-auto-flow</span><span>:</span> column dense<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>/* 这个属性后面会提到 */</span>
  <span>grid-column-start</span><span>:</span> span 2<span>;</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>/* 这个属性后面会提到 */</span>
  <span>grid-column-start</span><span>:</span> span 2<span>;</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br></div></div></CodeDemo><p>上图会先填满第一列，再填满第 2 列，所以 3 号项目在第一列，4 号项目在第二列。8 号项目和 9 号项目被挤到了第四列。</p>
<h3 id="justify-items-属性-align-items-属性-和-place-items-属性" tabindex="-1"> justify-items 属性，align-items 属性 和 place-items 属性</h3>
<p><code>justify-items</code> 属性设置单元格内容的水平位置 (左中右) ，<code>align-items</code> 属性设置单元格内容的垂直位置 (上中下) 。</p>
<div><pre><code><span>.container</span> <span>{</span>
  <span>justify-items</span><span>:</span> start | end | center | stretch<span>;</span>
  <span>align-items</span><span>:</span> start | end | center | stretch<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>这两个属性的写法完全相同，都可以取下面这些值。</p>
<ul>
<li>start: 对齐单元格的起始边缘。</li>
<li>end: 对齐单元格的结束边缘。</li>
<li>center: 单元格内部居中。</li>
<li>stretch: 拉伸，占满单元格的整个宽度 (默认值) 。</li>
</ul>
<div><pre><code><span>.container</span> <span>{</span>
  <span>justify-items</span><span>:</span> start<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>上面代码表示，单元格的内容左对齐，效果如下图。</p>

<CodeDemo id="code-demo-0b15f3d2" title="justify-items%3A%20start" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20justify-items%3A%20start%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20width%3A%2050px%3B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>justify-items</span><span>:</span> start<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>width</span><span>:</span> 50px<span>;</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br></div></div></CodeDemo><div><pre><code><span>.container</span> <span>{</span>
  <span>align-items</span><span>:</span> start<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>上面代码表示，单元格的内容头部对齐，效果如下图。</p>

<CodeDemo id="code-demo-c4f8558a" title="align-items%3A%20start" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20align-items%3A%20start%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20height%3A%2050px%3B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>align-items</span><span>:</span> start<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>height</span><span>:</span> 50px<span>;</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br></div></div></CodeDemo><p><code>place-items</code> 属性是 <code>align-items</code> 属性和 <code>justify-items</code> 属性的合并简写形式。</p>
<div><pre><code><span>.container</span> <span>{</span>
  <span>place-items</span><span>:</span> &lt;align-items> &lt;justify-items><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>下面是一个例子。</p>

<CodeDemo id="code-demo-6aec0eaa" title="place-items%3A%20start%20end" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20place-items%3A%20start%20end%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20width%3A%2050px%3B%5Cn%20%20height%3A%2050px%3B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>place-items</span><span>:</span> start end<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>width</span><span>:</span> 50px<span>;</span>
  <span>height</span><span>:</span> 50px<span>;</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br></div></div></CodeDemo><p>如果省略第二个值，则浏览器认为与第一个值相等。</p>
<h3 id="justify-content-属性-align-content-属性-和-place-content-属性" tabindex="-1"> justify-content 属性，align-content 属性 和 place-content 属性</h3>
<p><code>justify-content</code> 属性是整个内容区域在容器里面的水平位置 (左中右) ，<code>align-content</code> 属性是整个内容区域的垂直位置 (上中下) 。</p>
<div><pre><code><span>.container</span> <span>{</span>
  <span>justify-content</span><span>:</span> start | end | center | stretch | space-around | space-between
    | space-evenly<span>;</span>
  <span>align-content</span><span>:</span> start | end | center | stretch | space-around | space-between |
    space-evenly<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>这两个属性的写法完全相同，都可以取下面这些值。(下面的图都以 <code>justify-content</code> 属性为例，<code>align-content</code> 属性的图完全一样，只是将水平方向改成垂直方向。)</p>

<CodeDemo id="code-demo-7cf33cf0" title="start%20-%20%E5%AF%B9%E9%BD%90%E5%AE%B9%E5%99%A8%E7%9A%84%E8%B5%B7%E5%A7%8B%E8%BE%B9%E6%A1%86%E3%80%82" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20margin%3A%208px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border%3A%201px%20solid%20grey%3B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20justify-content%3A%20start%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>margin</span><span>:</span> 8px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border</span><span>:</span> 1px solid grey<span>;</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>justify-content</span><span>:</span> start<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br></div></div></CodeDemo>
<CodeDemo id="code-demo-0170a3a8" title="end%20-%20%E5%AF%B9%E9%BD%90%E5%AE%B9%E5%99%A8%E7%9A%84%E7%BB%93%E6%9D%9F%E8%BE%B9%E6%A1%86" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20margin%3A%208px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border%3A%201px%20solid%20grey%3B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20justify-content%3A%20end%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>margin</span><span>:</span> 8px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border</span><span>:</span> 1px solid grey<span>;</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>justify-content</span><span>:</span> end<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br></div></div></CodeDemo>
<CodeDemo id="code-demo-180bc5cb" title="center%20-%20%E5%AE%B9%E5%99%A8%E5%86%85%E9%83%A8%E5%B1%85%E4%B8%AD" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20margin%3A%208px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border%3A%201px%20solid%20grey%3B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20justify-content%3A%20center%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>margin</span><span>:</span> 8px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border</span><span>:</span> 1px solid grey<span>;</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>justify-content</span><span>:</span> center<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br></div></div></CodeDemo>
<CodeDemo id="code-demo-0b0b4f96" title="stretch%20-%20%E9%A1%B9%E7%9B%AE%E5%A4%A7%E5%B0%8F%E6%B2%A1%E6%9C%89%E6%8C%87%E5%AE%9A%E6%97%B6%EF%BC%8C%E6%8B%89%E4%BC%B8%E5%8D%A0%E6%8D%AE%E6%95%B4%E4%B8%AA%E7%BD%91%E6%A0%BC%E5%AE%B9%E5%99%A8" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20margin%3A%208px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border%3A%201px%20solid%20grey%3B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%201fr%201fr%201fr%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20justify-content%3A%20stretch%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>margin</span><span>:</span> 8px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border</span><span>:</span> 1px solid grey<span>;</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 1fr 1fr 1fr<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>justify-content</span><span>:</span> stretch<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br></div></div></CodeDemo>
<CodeDemo id="code-demo-33765a6a" title="space-around%20-%20%E6%AF%8F%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%B8%A4%E4%BE%A7%E7%9A%84%E9%97%B4%E9%9A%94%E7%9B%B8%E7%AD%89" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20margin%3A%208px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border%3A%201px%20solid%20grey%3B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20justify-content%3A%20space-around%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<p>这意味着项目之间的间隔比项目与容器边框的间隔大一倍。</p>
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>margin</span><span>:</span> 8px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border</span><span>:</span> 1px solid grey<span>;</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>justify-content</span><span>:</span> space-around<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br></div></div></CodeDemo>
<CodeDemo id="code-demo-74396386" title="space-between%20-%20%E9%A1%B9%E7%9B%AE%E4%B8%8E%E9%A1%B9%E7%9B%AE%E7%9A%84%E9%97%B4%E9%9A%94%E7%9B%B8%E7%AD%89" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20margin%3A%208px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border%3A%201px%20solid%20grey%3B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20justify-content%3A%20space-between%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<p>这意味着项目与容器边框之间没有间隔。</p>
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>margin</span><span>:</span> 8px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border</span><span>:</span> 1px solid grey<span>;</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>justify-content</span><span>:</span> space-between<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br></div></div></CodeDemo>
<CodeDemo id="code-demo-783e9363" title="space-evenly%20-%20%E9%A1%B9%E7%9B%AE%E4%B8%8E%E9%A1%B9%E7%9B%AE%E7%9A%84%E9%97%B4%E9%9A%94%E7%9B%B8%E7%AD%89" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20margin%3A%208px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border%3A%201px%20solid%20grey%3B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20justify-content%3A%20space-evenly%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<p>这意味着项目与容器边框之间也是同样长度的间隔。</p>
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>margin</span><span>:</span> 8px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border</span><span>:</span> 1px solid grey<span>;</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>justify-content</span><span>:</span> space-evenly<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br></div></div></CodeDemo><p><code>place-content</code> 属性是 <code>align-content</code> 属性和 <code>justify-content</code> 属性的合并简写形式。</p>
<div><pre><code><span>.container</span> <span>{</span>
  <span>place-content</span><span>:</span> &lt;align-content> &lt;justify-content><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>下面是一个例子。</p>

<CodeDemo id="code-demo-15a58058" title="place-content%3A%20space-around%20space-evenly" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20height%3A%20450px%3B%5Cn%20%20margin%3A%208px%3B%5Cn%20%20padding%3A%208px%3B%5Cn%20%20border%3A%201px%20solid%20grey%3B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20place-content%3A%20space-around%20space-evenly%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>height</span><span>:</span> 450px<span>;</span>
  <span>margin</span><span>:</span> 8px<span>;</span>
  <span>padding</span><span>:</span> 8px<span>;</span>
  <span>border</span><span>:</span> 1px solid grey<span>;</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>place-content</span><span>:</span> space-around space-evenly<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br></div></div></CodeDemo><p>如果省略第二个值，浏览器就会假定第二个值等于第一个值。</p>
<h3 id="grid-auto-columns-属性-和-grid-auto-rows-属性" tabindex="-1"> grid-auto-columns 属性 和 grid-auto-rows 属性</h3>
<p>有时候，一些项目的指定位置，在现有网格的外部。比如网格只有 3 列，但是某一个项目指定在第 5 行。这时，浏览器会自动生成多余的网格，以便放置项目。</p>
<p><code>grid-auto-columns</code> 属性和 <code>grid-auto-rows</code> 属性用来设置，浏览器自动创建的多余网格的列宽和行高。它们的写法与 <code>grid-template-columns</code> 和 <code>grid-template-rows</code> 完全相同。如果不指定这两个属性，浏览器完全根据单元格内容的大小，决定新增网格的列宽和行高。</p>
<p>下面的例子里面，划分好的网格是 3 行 x 3 列，但是，8 号项目指定在第 4 行，9 号项目指定在第 5 行。</p>
<div><pre><code><span>.container</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-auto-rows</span><span>:</span> 50px<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>上面代码指定新增的行高统一为 50px (原始的行高为 100px) 。</p>
<p><img src="@source/code/website/css/layout/assets/grid-auto-rows.png" alt="grid-auto-rows"></p>
<h3 id="grid-template-属性-和-grid-属性" tabindex="-1"> grid-template 属性 和 grid 属性</h3>
<p><code>grid-template</code> 属性是 <code>grid-template-columns</code>、<code>grid-template-rows</code> 和 <code>grid-template-areas</code> 这三个属性的合并简写形式。</p>
<p><code>grid</code> 属性是 <code>grid-template-rows</code>、<code>grid-template-columns</code>、<code>grid-template-areas</code>、<code>grid-auto-rows</code>、<code>grid-auto-columns</code>、<code>grid-auto-flow</code> 这六个属性的合并简写形式。</p>
<div><p>提示</p>
<p>从易读易写的角度考虑，还是建议不要合并属性，所以这里就不详细介绍这两个属性了。</p>
</div>
<h2 id="项目属性" tabindex="-1"> 项目属性</h2>
<p>下面这些属性定义在项目上面。</p>
<h3 id="位置指定" tabindex="-1"> 位置指定</h3>
<p>项目的位置是可以指定的，具体方法就是指定项目的四个边框，分别定位在哪根网格线。</p>
<ul>
<li><code>grid-column-start</code> 属性: 左边框所在的垂直网格线</li>
<li><code>grid-column-end</code> 属性: 右边框所在的垂直网格线</li>
<li><code>grid-row-start</code> 属性: 上边框所在的水平网格线</li>
<li><code>grid-row-end</code> 属性: 下边框所在的水平网格线</li>
</ul>
<div><pre><code><span>.item1</span> <span>{</span>
  <span>grid-column-start</span><span>:</span> 2<span>;</span>
  <span>grid-column-end</span><span>:</span> 4<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>上面代码指定，1 号项目的左边框是第二根垂直网格线，右边框是第四根垂直网格线。</p>

<CodeDemo id="code-demo-39507937" title="%E6%A1%88%E4%BE%8B%E6%B8%B2%E6%9F%93%E7%BB%93%E6%9E%9C" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-auto-rows%3A%20100px%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%20%20grid-column-start%3A%202%3B%5Cn%20%20grid-column-end%3A%204%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-auto-rows</span><span>:</span> 100px<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
  <span>grid-column-start</span><span>:</span> 2<span>;</span>
  <span>grid-column-end</span><span>:</span> 4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br></div></div></CodeDemo><p>上述案例中，只指定了 1 号项目的左右边框，没有指定上下边框，所以会采用默认位置，即上边框是第一根水平网格线，下边框是第二根水平网格线。</p>
<p>除了 1 号项目以外，其他项目都没有指定位置，由浏览器自动布局，这时它们的位置由容器的 <code>grid-auto-flow</code> 属性决定，这个属性的默认值是 <code>row</code>，因此会&quot;先行后列&quot;进行排列。您可以把这个属性的值分别改成 <code>column</code>、<code>row dense</code> 和 <code>column dense</code>，看看其他项目的位置发生了怎样的变化。</p>
<p>下面我们给出一个指定四个边框位置的案例。</p>
<div><pre><code><span>.item1</span> <span>{</span>
  <span>grid-column-start</span><span>:</span> 1<span>;</span>
  <span>grid-column-end</span><span>:</span> 3<span>;</span>
  <span>grid-row-start</span><span>:</span> 2<span>;</span>
  <span>grid-row-end</span><span>:</span> 4<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div>
<CodeDemo id="code-demo-6a3e4ac2" title="%E6%A1%88%E4%BE%8B%E6%B8%B2%E6%9F%93%E7%BB%93%E6%9E%9C" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-auto-rows%3A%20100px%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%20%20grid-column-start%3A%201%3B%5Cn%20%20grid-column-end%3A%203%3B%5Cn%20%20grid-row-start%3A%202%3B%5Cn%20%20grid-row-end%3A%204%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-auto-rows</span><span>:</span> 100px<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
  <span>grid-column-start</span><span>:</span> 1<span>;</span>
  <span>grid-column-end</span><span>:</span> 3<span>;</span>
  <span>grid-row-start</span><span>:</span> 2<span>;</span>
  <span>grid-row-end</span><span>:</span> 4<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br></div></div></CodeDemo><p>这四个属性的值，除了指定为第几个网格线，还可以指定为网格线的名字。</p>
<div><pre><code><span>.item1</span> <span>{</span>
  <span>grid-column-start</span><span>:</span> header-start<span>;</span>
  <span>grid-column-end</span><span>:</span> header-end<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>上面代码中，左边框和右边框的位置，都指定为网格线的名字。</p>
<p>这四个属性的值还可以使用 <code>span</code> 关键字，表示&quot;跨越&quot;，即左右边框 (上下边框) 之间跨越多少个网格。</p>
<div><pre><code><span>.item1</span> <span>{</span>
  <span>grid-column-start</span><span>:</span> span 2<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>上面代码表示，1 号项目的左边框距离右边框跨越 2 个网格。</p>

<CodeDemo id="code-demo-ab2fa680" title="grid-column-start%3A%20span%202" code="%7B%22html%22%3A%22%3Cdiv%20class%3D%5C%22grid-demo%5C%22%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item1%5C%22%3E1%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item2%5C%22%3E2%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item3%5C%22%3E3%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item4%5C%22%3E4%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item5%5C%22%3E5%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item6%5C%22%3E6%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item7%5C%22%3E7%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item8%5C%22%3E8%3C%2Fdiv%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22item9%5C%22%3E9%3C%2Fdiv%3E%5Cn%3C%2Fdiv%3E%5Cn%22%2C%22css%22%3A%22.grid-demo%20%7B%5Cn%20%20display%3A%20grid%3B%5Cn%20%20grid-template-columns%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-template-rows%3A%20100px%20100px%20100px%3B%5Cn%20%20grid-auto-rows%3A%20100px%3B%5Cn%7D%5Cn%5Cn%2F*%20Common%20styles%20*%2F%5Cn.grid-demo%20%3E%20div%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-size%3A%2032px%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item1%20%7B%5Cn%20%20background-color%3A%20%23ff69b4%3B%5Cn%20%20grid-column-start%3A%20span%202%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item2%20%7B%5Cn%20%20background-color%3A%20%23ffa500%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item3%20%7B%5Cn%20%20background-color%3A%20%233cb371%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item4%20%7B%5Cn%20%20background-color%3A%20%2387cefa%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item5%20%7B%5Cn%20%20background-color%3A%20%239370db%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item6%20%7B%5Cn%20%20background-color%3A%20%23f0e68c%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item7%20%7B%5Cn%20%20background-color%3A%20%23fa8072%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item8%20%7B%5Cn%20%20background-color%3A%20%23ffd700%3B%5Cn%7D%5Cn%5Cn.grid-demo%20%3E%20.item9%20%7B%5Cn%20%20background-color%3A%20%23008b8b%3B%5Cn%7D%5Cn%22%7D">
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>grid-demo<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>1<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>2<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>3<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span>4<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span>5<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span>6<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span>7<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item8<span>"</span></span><span>></span></span>8<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>item9<span>"</span></span><span>></span></span>9<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><pre><code><span>.grid-demo</span> <span>{</span>
  <span>display</span><span>:</span> grid<span>;</span>
  <span>grid-template-columns</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-template-rows</span><span>:</span> 100px 100px 100px<span>;</span>
  <span>grid-auto-rows</span><span>:</span> 100px<span>;</span>
<span>}</span>

<span>/* Common styles */</span>
<span>.grid-demo > div</span> <span>{</span>
  <span>color</span><span>:</span> black<span>;</span>
  <span>font-size</span><span>:</span> 32px<span>;</span>
<span>}</span>

<span>.grid-demo > .item1</span> <span>{</span>
  <span>background-color</span><span>:</span> #ff69b4<span>;</span>
  <span>grid-column-start</span><span>:</span> span 2<span>;</span>
<span>}</span>

<span>.grid-demo > .item2</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffa500<span>;</span>
<span>}</span>

<span>.grid-demo > .item3</span> <span>{</span>
  <span>background-color</span><span>:</span> #3cb371<span>;</span>
<span>}</span>

<span>.grid-demo > .item4</span> <span>{</span>
  <span>background-color</span><span>:</span> #87cefa<span>;</span>
<span>}</span>

<span>.grid-demo > .item5</span> <span>{</span>
  <span>background-color</span><span>:</span> #9370db<span>;</span>
<span>}</span>

<span>.grid-demo > .item6</span> <span>{</span>
  <span>background-color</span><span>:</span> #f0e68c<span>;</span>
<span>}</span>

<span>.grid-demo > .item7</span> <span>{</span>
  <span>background-color</span><span>:</span> #fa8072<span>;</span>
<span>}</span>

<span>.grid-demo > .item8</span> <span>{</span>
  <span>background-color</span><span>:</span> #ffd700<span>;</span>
<span>}</span>

<span>.grid-demo > .item9</span> <span>{</span>
  <span>background-color</span><span>:</span> #008b8b<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br></div></div></CodeDemo><p>这与下面的代码效果完全一样。</p>
<div><pre><code><span>.item-1</span> <span>{</span>
  <span>grid-column-end</span><span>:</span> span 2<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><p>相关信息</p>
<p>使用这四个属性，如果产生了项目的重叠，则使用 <code>z-index</code> 属性指定项目的重叠顺序。</p>
</div>
<h3 id="grid-column-属性-和-grid-row-属性" tabindex="-1"> grid-column 属性 和 grid-row 属性</h3>
<ul>
<li><code>grid-column</code> 属性是 <code>grid-column-start</code> 和 <code>grid-column-end</code> 的合并简写形式</li>
<li><code>grid-row</code> 属性是 <code>grid-row-start</code> 属性和 <code>grid-row-end</code> 的合并简写形式。</li>
</ul>
<div><pre><code><span>.item</span> <span>{</span>
  <span>grid-column</span><span>:</span> &lt;start-line> / &lt;end-line><span>;</span>
  <span>grid-row</span><span>:</span> &lt;start-line> / &lt;end-line><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>下面是一个例子。</p>
<div><pre><code><span>.item-1</span> <span>{</span>
  <span>grid-column</span><span>:</span> 1 / 3<span>;</span>
  <span>grid-row</span><span>:</span> 1 / 2<span>;</span>
<span>}</span>
<span>/* 等同于 */</span>
<span>.item-1</span> <span>{</span>
  <span>grid-column-start</span><span>:</span> 1<span>;</span>
  <span>grid-column-end</span><span>:</span> 3<span>;</span>
  <span>grid-row-start</span><span>:</span> 1<span>;</span>
  <span>grid-row-end</span><span>:</span> 2<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>上面代码中，项目 <code>item-1</code> 占据第一行，从第一根列线到第三根列线。</p>
<p>这两个属性之中，也可以使用 <code>span</code> 关键字，表示跨越多少个网格。</p>
<div><pre><code><span>.item-1</span> <span>{</span>
  <span>background</span><span>:</span> #b03532<span>;</span>
  <span>grid-column</span><span>:</span> 1 / 3<span>;</span>
  <span>grid-row</span><span>:</span> 1 / 3<span>;</span>
<span>}</span>
<span>/* 等同于 */</span>
<span>.item-1</span> <span>{</span>
  <span>background</span><span>:</span> #b03532<span>;</span>
  <span>grid-column</span><span>:</span> 1 / span 2<span>;</span>
  <span>grid-row</span><span>:</span> 1 / span 2<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>上面代码中，项目 <code>item-1</code> 占据的区域，包括第一行 + 第二行、第一列 + 第二列。</p>
<p><img src="@source/code/website/css/layout/assets/grid8.png" alt="grid 8"></p>
<p>斜杠以及后面的部分可以省略，默认跨越一个网格。</p>
<div><pre><code><span>.item-1</span> <span>{</span>
  <span>grid-column</span><span>:</span> 1<span>;</span>
  <span>grid-row</span><span>:</span> 1<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>上面代码中，项目 <code>item-1</code> 占据左上角第一个网格。</p>
<h3 id="grid-area-属性" tabindex="-1"> grid-area 属性</h3>
<p><code>grid-area</code> 属性指定项目放在哪一个区域。</p>
<div><pre><code><span>.item-1</span> <span>{</span>
  <span>grid-area</span><span>:</span> e<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>上面代码中，1 号项目位于 <code>e</code> 区域，效果如下图。</p>
<p><img src="@source/code/website/css/layout/assets/grid-area.png" alt="grid-area"></p>
<p><code>grid-area</code> 属性还可用作 <code>grid-row-start</code>、<code>grid-column-start</code>、<code>grid-row-end</code>、<code>grid-column-end</code> 的合并简写形式，直接指定项目的位置。</p>
<div><pre><code><span>.item</span> <span>{</span>
  <span>grid-area</span><span>:</span> &lt;row-start> / &lt;column-start> / &lt;row-end> / &lt;column-end><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>下面是一个例子。</p>
<div><pre><code><span>.item-1</span> <span>{</span>
  <span>grid-area</span><span>:</span> 1 / 1 / 3 / 3<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="justify-self-属性-align-self-属性-和-place-self-属性" tabindex="-1"> justify-self 属性，align-self 属性 和 place-self 属性</h3>
<p><code>justify-self</code> 属性设置单元格内容的水平位置 (左中右) ，跟 <code>justify-items</code> 属性的用法完全一致，但只作用于单个项目。</p>
<p><code>align-self</code> 属性设置单元格内容的垂直位置 (上中下) ，跟 <code>align-items</code> 属性的用法完全一致，也是只作用于单个项目。</p>
<div><pre><code><span>.item</span> <span>{</span>
  <span>justify-self</span><span>:</span> start | end | center | stretch<span>;</span>
  <span>align-self</span><span>:</span> start | end | center | stretch<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>这两个属性都可以取下面四个值。</p>
<ul>
<li>start: 对齐单元格的起始边缘。</li>
<li>end: 对齐单元格的结束边缘。</li>
<li>center: 单元格内部居中。</li>
<li>stretch: 拉伸，占满单元格的整个宽度 (默认值) 。</li>
</ul>
<p>下面是 <code>justify-self: start</code> 的例子。</p>
<div><pre><code><span>.item-1</span> <span>{</span>
  <span>justify-self</span><span>:</span> start<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p><img src="@source/code/website/css/layout/assets/grid-justify-self.png" alt="justify-self: start"></p>
<p><code>place-self</code> 属性是 <code>align-self</code> 属性和 <code>justify-self</code> 属性的合并简写形式。</p>
<div><pre><code><span>.item-1</span> <span>{</span>
  <span>place-self</span><span>:</span> &lt;align-self> &lt;justify-self><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>下面是一个例子。</p>
<div><pre><code><span>.item-1</span> <span>{</span>
  <span>place-self</span><span>:</span> center center<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>如果省略第二个值，<code>place-self</code> 属性会认为这两个值相等。</p>
]]></content:encoded>
    </item>
    <item>
      <title>设计文章</title>
      <link>https://mrhope.site/design/articles/</link>
      <guid>https://mrhope.site/design/articles/</guid>
      <source url="https://mrhope.site/rss.xml">设计文章</source>
      <category>设计</category>
      <pubDate>Sat, 26 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="文章列表" tabindex="-1"> 文章列表</h2>
<ul>
<li>
<p><a href="/design/articles/gestalt-principle.html">格式塔原则</a></p>
</li>
<li>
<p><a href="/design/articles/left-or-right.html">布局中的左和右</a></p>
</li>
<li>
<p><a href="/design/articles/infomation-flow.html">信息流介绍</a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>格式塔原则</title>
      <link>https://mrhope.site/design/articles/gestalt-principle.html</link>
      <guid>https://mrhope.site/design/articles/gestalt-principle.html</guid>
      <source url="https://mrhope.site/rss.xml">格式塔原则</source>
      <category>设计</category>
      <pubDate>Sat, 26 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>好的设计师理解心理学在视觉感知中的强大作用。当别人的目光与您的设计创作相遇时，会发生什么? 他们对您分享的信息有什么反应?</p>
<h2 id="格式塔原理概述" tabindex="-1"> 格式塔原理概述</h2>
<h3 id="前言" tabindex="-1"> 前言</h3>
<p>举一个场景化的栗子，大家平时逛街的时候能记住哪些广告呢? 我们虽然每天看到那么多的信息，但是真正记住的却不多。还有当我们看到复杂的事物的时候，心里会涌现不舒服的奇怪感受，有时候这种感受没有办法用语言来描述。那么为什么会有这些感受呢?</p>
<p><img src="@source/design/articles/assets/gestalt-principle1.jpg" alt="图片1"></p>
<p>其实道理很简单，我们做的东西是给人用的。人是动物不是一台机器，人的认知和记忆能力是有限的。视觉设计和心理是相互联系的，并且可以相互影响。格式塔原则可以帮助我们理解和控制这些联系。</p>
<p>今天就给大家科普下格式塔原则到底是什么? 在设计中如何运用? 是如何影响到我们的生活学习的? 本文会结合大量案例分析讲解，无论您是平面设计师，UI 设计师，插画师，设计小白还是路人，一篇文章让格式塔帮您做出更好的设计!</p>
<h3 id="什么是格式塔原理" tabindex="-1"> 什么是格式塔原理</h3>
<p>格式塔学习理论可谓是现代认知主义学习理论的先驱，自 1912 年由韦特海墨(Ｍ，Wetheimer)提出后，在德国得到迅速发展。</p>
<p><img src="@source/design/articles/assets/gestalt-principle-history.jpg" alt="格式塔原理发展历史"></p>
<p>1910，这位心理学家乘坐火车度假旅行。当火车经过一个铁路道口的时候，他发现道口闪烁的灯竟然像马戏团表演时剧院帐篷上环绕的灯光，令他产生了光在运动的错觉。(而我们坐火车永远就只会遇到熊孩子和熊孩子)然后他赶紧下火车买了一个西洋镜，来测试自己的想法。</p>
<p>他将一张图片放在西洋镜内部并通过狭缝观看时，一系列静止图像看起来像是动图。接着他用简单的抽象线条制作不同的画条，通过改变这些元素来研究导致错觉的原因。似动(Apparent Movement)实验成为格式塔心理学的起点。</p>
<h3 id="解决什么问题" tabindex="-1"> 解决什么问题</h3>
<p>他们认为思维是整体的、有意义的知觉，而不是联结起来的表象的简单集合；主张学习是在于构成一种完形，是改变一个完形为另一完形。我们的视觉系统自动对视觉输入构建结构，并在神经系统层面上感知形状、图形和物体，而不是只看到互不相连的边、线和区域。所谓格式塔，是德语 Gestalt 的译音，意即「完形」或「形状」；他们认为学习的过程不是试尝错误的过程，而是顿悟的过程，即结合当前整个情境对问题的突然解决。再通俗一点就是人是怎样认知和记忆所看到的事物。</p>
<h2 id="格式塔实验研究" tabindex="-1"> 格式塔实验研究</h2>
<p>主要包括以下三方面的实验研究:</p>
<h3 id="_1-似动现象" tabindex="-1"> 1. 似动现象</h3>
<p>似动现象是形成格式塔心理学的基础。是指两个相距不远、相继出现的视觉刺激物，呈现的时间间隔如果在 1/10 秒到 1/30 秒之间，那么我们看到的不是两个物体，而是一个物体在移动。</p>
<p>例如，我们看到灯光从一处向另一处移动，事实上是这只灯熄了，那只灯同时亮了。这种现象正是不能把整体分解成部分的证据。这种现象的组成部分是一些独立的灯在一开一关，但组成一个整体后，给人造成这些灯在动的假象。</p>
<p>后来，格式塔心理学把重点放在整体系统上，在这个系统中，各个部分是以一种能动的方式相互联系在一起的，也就是说，仅根据各分离的部分，无法推断出这个整体。所以人们把它称为「格式塔或完形心理学」。</p>
<p><img src="@source/design/articles/assets/gestalt-principle-move.jpg" alt="似动现象"></p>
<ul>
<li>
<p>A: 这张螺旋图是静态还是动态的? 盯着漩涡看一会，您就会感觉到它在转动。</p>
</li>
<li>
<p>B: 您数数看有几个黑点? 当您的眼睛离开那个白点时，就出现白的负象，即黑。当您重新把视点 集中在原来的白点上时，它又变成白色的了。因此，当您的眼睛不断地 在移动的时候，那些黑白点 (正负像) 也就在不断地变化。</p>
</li>
<li>
<p>C: 您看是水平线还是不规则的斜线? 事实上所有的横线都是水平的，不信您拿尺子比一下。</p>
</li>
</ul>
<h3 id="_2-整体与部分" tabindex="-1"> 2. 整体与部分</h3>
<p>看起来格式塔心理学是把重点放在整体上，但这并不意味着他们不承认分离性。事实上，格式塔也可以是指一个分离的整体。</p>
<p>研究认为，一个人的知觉场始终被分成图形与背景两部分。「图形」是一个格式塔，是突出的实体，是我们知觉到的事物；「背景」则是尚未分化的、衬托图形的东西。知觉帮助我们把图形从背景中分离出来。图形与背景的对比越大，图形的轮廓越明显，则图形越容易被发觉。</p>
<p><img src="@source/design/articles/assets/gestalt-principle-shape.jpg" alt="整体与部分"></p>
<ul>
<li>
<p>A: 这幅美食节广告中，酒瓶是被战略性地放置，以创造一个叉子的错觉。黑色酒瓶是图形，白色叉子是背景；在另一种情况下，黑色酒瓶是背景，白色叉子是图形。</p>
</li>
<li>
<p>B: 一黑一白两只天鹅，白天鹅和黑天鹅可以互充图形与背景的关系。</p>
</li>
<li>
<p>C: 这幅海报中，小女孩和气球是被战略性的放置，以创造一个字母「R」的错觉。这两个角色同样可以在图形和背景中互换。</p>
</li>
</ul>
<p><img src="@source/design/articles/assets/gestalt-principle-shape2.jpg" alt="整体与部分"></p>
<h3 id="_3-顿悟实验" tabindex="-1"> 3. 顿悟实验</h3>
<p>W·科勒在一次实验中用绳子把一只香蕉悬挂在笼子的顶棚上。笼子里只有惟一的一只木箱可以使用。6 只黑猩猩看到香蕉时跳跃起来竭力想抓住香蕉，但是徒劳。有一只名叫苏尔坦的黑猩猩马上停止了这些白费力气的努力，开始从各个方向打量箱子。忽然它停在箱子前面，抓起它并径直朝目标走去。它把木箱迅速放到地上，爬上箱子，从木箱上面使劲跳起，终于抓住了香蕉。</p>
<p>W·科勒还对这组黑猩猩使用其他工具进行了观察，如利用木棍去获取放在笼子外面的水果。这些黑猩猩甚至能够将两根短棍连接起来做成一根长棍。同样，它们还能把两三个箱子叠放在一起，再爬到放在最上面的箱子顶上，借助一根木棍去获取香蕉。</p>
<p>苛勒通过对黑猩猩进行的许多实验，提出了顿悟理论。他认为问题的解决不是由于尝试错误，而是由于顿悟。所谓顿悟，就是内在地把握情境的关系性，并依此改变整个情境。</p>
<p>或许正如一些批评家所指出的那样，顿悟不是一种独立的学习过程或学习形式，而是学习达到一定程度的表现或者结果。一定的经验积累，是产生顿悟的前提。</p>
<h2 id="影响记忆的三个因素" tabindex="-1"> 影响记忆的三个因素</h2>
<p>沃尔夫实验时要求实验体观看样本图形并记住它们，然后在不同的时间里根据记忆把它们画出来。结果发现实验体在不同的间隔时间画出来的图像都有不同。有时再现的图画比原来的图画更简单更有规则，有时原来图画中显著的细节在再现时被更加突出了。还有的比原来的图像更像某些别的我们都很熟悉的图案了。沃尔夫把这三种记忆规律称之为格式塔三大记忆律: 「水平化」、「尖锐化」、「常态化」。</p>
<p><img src="@source/design/articles/assets/gestalt-principle-logo.jpg" alt="这两个品牌logo哪个才是正确的? "></p>
<h3 id="水平化-leveling" tabindex="-1"> 水平化 leveling</h3>
<p>水平化是指在记忆中我们趋向于减少知觉图形小的不规则部分使其对称；或趋向于减少知觉图形中的具体细节。</p>
<h3 id="尖锐化-sharpening" tabindex="-1"> 尖锐化 sharpening</h3>
<p>尖锐化是在记忆中与水平化过程伴随而行的。尖锐化是指在记忆中，人们往往强调知觉图形的某些特征而忽视其它具体细节的过程。在有些心理学家看来，人类记忆的特征之一，就是客体中最明显的特征在再现过程中往往被夸大了。</p>
<h3 id="常态化-normalizing" tabindex="-1"> 常态化 normalizing</h3>
<p>常态化是指人们在记忆中，往往根据自己已有的记忆痕迹对知觉图形加以修改，即一般会趋向于按照自己认为它似乎应该是什么样子来加以修改的。</p>
<h2 id="格式塔原理在设计中的应用" tabindex="-1"> 格式塔原理在设计中的应用</h2>
<p>格式塔的七个基本原则:</p>
<ul>
<li>接近性原则</li>
<li>相似性原则</li>
<li>连续性原则</li>
<li>闭合性原则</li>
<li>主体/背景原则</li>
<li>简单对称性原则</li>
<li>共同命运原则</li>
</ul>
<div><p>格式塔原理的核心</p>
<p><strong>整体决定部分的性质并且部分依从与整体</strong></p>
</div>
<h3 id="接近性原则-law-of-proximity" tabindex="-1"> 接近性原则 law of proximity</h3>
<p>人们对知觉场中客体的知觉，是根据它们各部分彼此接近或邻近的程度而组合在一起的。两个元素越是接近，组合在一起的可能性就越大。说明它们之间关系更强。但是接近也是有对比的，在复杂的设计中，我们要一边考虑它们之间内部的逻辑关系一边来排版。</p>
<p><img src="@source/design/articles/assets/gestalt-principle-proximity.jpg" alt="接近性原则"></p>
<blockquote>
<p>同样都是 12 个圆形，您会把左图的 12 个圆形当成一个整体；右边那幅图，上面 4 个圆和下面 8 个圆距离较远，所以您会把上面 4 个圆当成一个整体，下面 8 个圆当成另外一个整体。</p>
</blockquote>
<p>需要注意的是，接近性比重较大，把上图的圆形改变形状，甚至添加颜色，人们也会把相近的一组当成一个整体:</p>
<p><img src="@source/design/articles/assets/gestalt-principle-proximity2.jpg" alt="接近性原则"></p>
<div><p>案例</p>
<p><img src="@source/design/articles/assets/gestalt-principle-proximity-app-store.jpg" alt="App Store"></p>
<p>板块之间的大间距把页面信息分割成各种不同栏目，距离更近的信息暗示了他们有内在的逻辑关系</p>
<p><img src="@source/design/articles/assets/gestalt-principle-proximity-zhanku.jpg" alt="站酷"></p>
<p>设计师模块，每个设计师信息组之间有足够大的留白，即使去掉分割线，用户也会清晰分清每一组的边界</p>
</div>
<div><p>提示</p>
<p>在界面设计中常用的设计方法就是划分固定的位置区域，比如导航栏，内容区，操作栏。还有就是通过距离远近来进行信息归类，同类信息接近，不同信息远离。</p>
</div>
<div><p>相关信息</p>
<p>属性相同、场景相似的信息应该放到一起，降低阅读成本，提高用户感知效率;不相关的信息尽量区分开，不要放到一起模糊不清引起不必要的误解。</p>
</div>
<h3 id="相似性原则-law-of-similarity" tabindex="-1"> 相似性原则 law of similarity</h3>
<p>人们在感知时，会对那些相似的项目，只要不被接近因素干扰，会倾向于把它们联合在一起。换言之，相似的部分在知觉中会形成若干组。</p>
<p>例如，我们在小组辩论中，往往几个人争着发言，但我们仍然能从嘈杂的声音中听出某个人的讲话，这是因为这个人讲话的音质始终有相似性的缘故。如果他讲话的音质经常在变化，那就很难从噪音声中分辨出他的话来。</p>
<p>人们会把那些明显具有共同特性(如形状、大小、共同运动、方向、颜色等)的事物当成一个整体。与不具有相似视觉特征的元素相比，具有相似视觉特征的元素被认为更加相关。</p>
<p><img src="@source/design/articles/assets/gestalt-principle-similarity.jpg" alt="相似性原则"></p>
<p>举个例子相似性原则在实际产品中的应用:</p>
<p><img src="@source/design/articles/assets/gestalt-principle-similarity-bilibili.jpg" alt="bilibili"></p>
<blockquote>
<p>上图全部频道页面，我们在浏览时，会从心理上默认，把频道头像、介绍和订阅按钮自动归为一类。类似外形的单元会被我们人脑默认为同一属类</p>
</blockquote>
<div><p>相关信息</p>
<p>看起来跟亲密性非常类似，但是他们确实不同的两个概念。亲密性强调位置，相似性则强调内容。通常把有明显特征的事物(形状、颜色、大小)组合在一起。多用于表单和导航。</p>
</div>
<h3 id="连续性原则-law-of-continuity" tabindex="-1"> 连续性原则 law of continuity</h3>
<p>在知觉过程中人们往往倾向于使知觉对象的直线继续成为直线，使曲线继续成为曲线，也就是视觉的惯性。利用连续律我们可以让用户操作界面时不经过思考就点击一个固定的位置。</p>
<p>我们倾向于完整地连接一个图形，而不是观察残缺的线条或形状。这种知觉上的结束，称之为闭合。如果局部形象过于陌生或者简略，则不会产生整体闭合联想。</p>
<p>人的视觉有追随一个方向的延续，以便把元素联接在一起，使它们看来是连续向着特定的方向。</p>
<p><img src="@source/design/articles/assets/gestalt-principle-continuity.jpg" alt="连续性原则"></p>
<p>△ 左图我们不会认为是两个残缺的圆，而是两个相交的圆；中间的 IBM 商标我们之所以能看出来是 IBM，就是因为我们在视觉上看到的不是离散的线条，而是连续的图形；右图我们会看到是向两个方向连续的曲线。</p>
<div><p>案例</p>
<p><img src="@source/design/articles/assets/gestalt-principle-continuity-stock.jpg" alt="股市"></p>
<p>每天的股市数据构成走势图，视觉上会跟随曲线方向知道由左向右去看走势</p>
</div>
<div><p>相关信息</p>
<p>视觉倾向于感知连续的形式而不是分散的碎片通过找到非常微小的共性，将多个不同的信息结成一个整体，是界面设计和 logo 设计常用的原则之一</p>
</div>
<h3 id="闭合性原则-law-of-closure" tabindex="-1"> 闭合性原则 law of closure</h3>
<p>人们在观察熟悉的视觉形象时，会把不完整的局部形象当作一个整体的形象来感知，这种知觉上的结束，称之为闭合。如果局部形象过于陌生或者简略，则不会产生整体闭合联想。</p>
<p>闭合是一种完成某种图形(完形)的行动。就算没有外形的约束，我们也会自动把图形脑补完全。比如半个形状或者有缺口的形状我们不会认为是一条线或各种零碎的图形，而是一个完整的形状。闭合是指一种完形的认知规律。</p>
<p><img src="@source/design/articles/assets/gestalt-principle-closure.jpg" alt="闭合性原则"></p>
<div><p>案例</p>
<p><img src="@source/design/articles/assets/gestalt-principle-closure-apple-music.jpg" alt="Apple Music"></p>
<p>我们常见的页面横滑组件就运用了闭合律原则，通常在界面右侧露出一半(或少部分)内容，来提示用户右边还隐藏着更多内容</p>
</div>
<div><p>相关信息</p>
<p>人们的视觉系统会自动将不相干的图形元素封闭起来感知为完整的个体为不实单独的碎片</p>
<p>表现手法有:正负形、封闭边界、不完全闭合</p>
</div>
<h3 id="主体-背景原则" tabindex="-1"> 主体/背景原则</h3>
<p>主体指的是在界面当中占据我们主要注意力的所有元素，其余的元素在此时均成为背景。当主体与背景重叠时，人的视觉更加倾向于将小的物体视为主体，大的物体视为背景，所以我们可以通过大小与图的关系，将我们希望传递的不同层次的内容进行展示。</p>
<p>当小图形重叠大图形之上，我们的视觉会倾向于将小图形归为主体，大色块为背景，这就是格式塔中的主体与背景原则。</p>
<p><img src="@source/design/articles/assets/gestalt-principle-main.jpg" alt="主体/背景原则"></p>
<div><p>案例</p>
<p><img src="@source/design/articles/assets/gestalt-principle-main-doubanFM.jpg" alt="豆瓣 FM"></p>
<p>在白色背景上有非常突出的主体: 歌曲封面、歌名、进度条、播放/暂停、收藏等，歌曲播放时，进度条有非常明显的进度变化，切换歌曲时，封面的前后错层，这些都与背景有非常鲜明的对比</p>
</div>
<div><p>相关信息</p>
<p>在界面设计中，主体背景是弹窗常常运用到的表现手法利用空间感给用户带来视觉引导，让用户快速感知重要的信息内容，和可忽略的信息内容</p>
</div>
<h3 id="简单对称性原则-simple-principle" tabindex="-1"> 简单对称性原则 Simple principle</h3>
<p>在观察事物过程中，我们第一印象更倾向于简单而且对称的图形，这就是格式塔的简化对称性原则。</p>
<p>具有对称、规则、平滑的简单图形特征的各部分趋于组成整体。对称的元素往往被认为是归属在一起的，而不管它们之间的距离，都给我们一种牢固和有序的感觉。</p>
<p><img src="@source/design/articles/assets/gestalt-principle-simple.jpg" alt="简单对称性原则"></p>
<p>人的眼睛喜欢在复杂的形状中找到简单而有序的对象，当我们在一个设计中看到复杂的物体时，眼睛更愿意将它们转换为单一统一形状，并尝试从这些形状中移除无关的细节来简化这些物体。</p>
<p>对称的构图是令人满意的，但它们也会变得有点沉闷。在对称的设计中加入不对称的元素可以在给人留下印象的同时吸引注意力。</p>
<div><p>案例</p>
<p><img src="@source/design/articles/assets/gestalt-principle-simple-pinterest.jpg" alt="Pinterest"></p>
<p>左右布局的瀑布流就是格式塔的简化对称性的体现，用户在浏览的的过程中有效减轻了阅读压力。特别适合这种以图片流为主的产品，能大大提高浏览效率。</p>
</div>
<div><p>相关信息</p>
<p>对称元素简单、和谐，但往往容易单调，一般来说加入不对称的样式会更容易让人印象深刻，在平面设计中对称的使用趣味性更加广泛</p>
</div>
<h3 id="共同命运原则-common-destiny" tabindex="-1"> 共同命运原则 Common destiny</h3>
<p>无论元素之间的距离有多远，或者它们看起来有多不同，如果它们一起运动或变化，它们都被认为是相关的。这里的共同命运针对的是运动的物体。与接近性原理和相似性原理相像，都与我们的视觉系统会有着给对象进行分组来感知事物的倾向相关，但是一起运动的物体会被感知为属于同一组或是彼此相关这样的一种视觉现象，这就是格式塔中的共同命运原则。</p>
<p><img src="@source/design/articles/assets/gestalt-principle-common-destiny.jpg" alt="共同命运原则"></p>
<p>向同一方向移动的元素，我们在处理的过程当中，会默认把它们归为一类。</p>
<div><p>案例</p>
<p><img src="@source/design/articles/assets/gestalt-principle-common-destiny-iOS.jpg" alt="ios 桌面"></p>
<p>iPhone 删除应用时候，所有图标都一起晃动起来(意思瑟瑟发抖，不要删我不要删我! )，左上角都有一个删除的按钮，要么删除，要么保留，这就是共同命运原则。</p>
</div>
<div><p>相关信息</p>
<p>共同命运强调的是方向，当元素的运动、方向具有共同运动形式或者某种规律使，我们会将其视为为彼此相关的一个群组或整体</p>
</div>
<h3 id="更多" tabindex="-1"> 更多</h3>
<p>事实上，以上 7 条原则只是格式塔心理学中的一小部分而已，比如还有:</p>
<h4 id="成员特性律" tabindex="-1"> 成员特性律</h4>
<p>一个整体中的个别部分并不具有固定的特性，个别部分的特性是从它与其他部分的关系中显现出来的。</p>
<p><img src="@source/design/articles/assets/gestalt-principle-special.jpg" alt="成员特性律"></p>
<p>如果我们有很多同样的按钮，如何让某个更重要的按钮突出但是仍然让用户感知还是按钮呢? 那就要用到成员特性律了。成员特性律赋予了集体中某一个元素特殊的一些刺激元素从而突出它。</p>
<p>独特的外形暗示了它与别的元素有不同的功能</p>
<div><p>案例</p>
<p><img src="@source/design/articles/assets/gestalt-principle-special-taobao.jpg" alt="淘宝"></p>
<p>商品详情页有两个重要的操作按钮: 加入购物车、立即购买。为了促使用户尽快购买，给「立即购买」更重的红色以突出它的独特性</p>
</div>
<h2 id="格式塔学习理论的基本观点" tabindex="-1"> 格式塔学习理论的基本观点</h2>
<h3 id="认知重组" tabindex="-1"> 认知重组</h3>
<p>格式塔心理学认为，通过学习，会在头脑中留下记忆痕迹，这些痕迹不是孤立的要素，而是一个有组织的整体，即完形。因此，学习主要不是加进新痕迹或减去旧痕迹的问题，而是要使一种完形改变成另一种完形。一个人学习的过程，通常是从一种混沌的模糊状态，转变成一种有意义的、有结构的状态，这就是知觉重组的过程。</p>
<h3 id="顿悟学习" tabindex="-1"> 顿悟学习</h3>
<p>顿悟学习可以避免多余的试误，同时又有助于迁移。格式塔心理学家认为，通过对问题情境的内在性质有所顿悟的方式来解决问题，就可以避免与这一问题情境不相干的大量随机的、盲目的行动，而且有利于把学习所得迁移到新的问题情境中去。顿悟学习的核心是要把握事物的本质，而不是无关紧要的细节。</p>
<h3 id="遗忘曲线" tabindex="-1"> 遗忘曲线</h3>
<p>真正的学习是不会遗忘的。通过顿悟习得的内容，一旦掌握后，永远也不会遗忘。顿悟将成为我们知识技能中永久的部分。用现代认知信息加工心理学的术语来说，顿悟的内容是进入了长时记忆将永远保留在学习者的头脑中。</p>
<div><p>提示</p>
<p>有人在一项实验中，把 149162536496481 写在一张卡片上，要一组被试看 15 秒钟，然后试图回忆它。这是一项相当困难的任务。在一般情况下，除了记住其中少数几个数字外，没有人能全部记住。但在给另一组被试看这张卡片之前，告诉他们在试图记住它以前，先想一下这些数字为什么这样排列，是否有规律可循。结果不少被试都觉察到，这些数原是用 1 到 9 的平方排列起来的。这样一来，回忆这些数字就毫无困难，哪怕是在几周或几个月之后也能轻易做到。</p>
</div>
<h3 id="学习奖励" tabindex="-1"> 学习奖励</h3>
<p>格式塔心理学家认为，真正的学习常常会伴随着一种兴奋感。例如，一些人对智力拼图、字迷填空玩得津津有味。也因此有人抨击滥用各种外部奖励，诸如使用糖果、好分数、五角星或金钱之类的东西来驱动学习。对于教育工作者来说，不加区分地使用奖励物，可能会使学生分心，不把心思用在学习上，而只关心能得到什么奖励上，从而不可能达到对问题情境有顿悟的理解。</p>
<h3 id="顿悟说对错误说的批判" tabindex="-1"> 顿悟说对错误说的批判</h3>
<p>还记得第二部分对猩猩的实验吗，实验表明猩猩在行动之前，已经领会到了自己的动作为什么进行，怎样去进行以及最终的结果为何，在苛勒看来，猩猩对问题的解决并非是一种盲目尝试错误的过程，而是处于对问题产生了顿悟。</p>
<p>在格式塔心理学家看来，学习是一种智慧行为，是一种顿悟过程，需要有理解、领会与思维等认识活动的参与，并且它是一种突现、速变、飞跃的过程。顿悟学习特点可归纳如下: 问题解决前尚有一个困惑或沉静的时期，表现得迟疑不决，有长时间停顿；从问题解决前到问题解决之间的过渡不是一种渐变的过程，而是一种突发性的质变过程；在问题解决阶段，行为操作是一个顺利的不间断的过程，形成一个连续的完整体，很少有错误的行为；由顿悟获得的问题解决方法能在记忆中保持较长的时间；由顿悟而掌握的学习原则有利于适应新的情境，解决新的问题。</p>
<h3 id="创造性思维" tabindex="-1"> 创造性思维</h3>
<p>韦特默认为要想创造性地解决问题必须让整体支配部分。即使在必要的关注问题的细节时，也决不能忽视问题的整体。必须把细节放在问题的整体中，把它们与整体结构联系起来加以考虑。这是一种自上而下、由整体到部分的思维。他认为要使人们顺利地解决问题，必须把问题的整个情境呈现出来，使之能对问题有个完全概观，决不能像桑代克那样，有意地把解决问题的方法和途径藏起来，迫使被试不得不去盲目试误。学习贵在打破旧有知识和模式的束缚，争取在对问题领域的基础上产生顿悟，掌据解决问题的原则，做到触类旁通、举一反三，促进智力水平的提高。</p>
<h2 id="格式塔学习理论的分支" tabindex="-1"> 格式塔学习理论的分支</h2>
<h3 id="勒温的基本观点" tabindex="-1"> 勒温的基本观点</h3>
<p>传统的格式塔心理学在探讨学习的问题时，认为学习者「渴望达到某些目的」是理所当然的，因而他们关注的是通过知觉重组达到目的的途径；而勒温则把注意力集中在「渴望」和「目的」本身上，并把它们与个性联系起来研究。勒温由此而形成的理论体系，主要不是一种学习理论，而是一种描述系统。</p>
<h3 id="勒温论学习" tabindex="-1"> 勒温论学习</h3>
<p>勒温的基本观点是社会心理学方面的，尤其是关于个体的动机。从某种角度来看，这弥补了格式塔学习理论的不足。勒温认为，用场论来研究学习的问题，需要注意以下几个方面:</p>
<p>要使用构成法(Constructive method)，而不是用分类法或分析法。这就是说，要用心理学中最基本的几个构成来探讨学习的问题。这些基本构成就是生活空间，心理环境、诱发力和约束力等。</p>
<p>要对行为作动态分析，要了解作为行为之基础的各种力(forces)。他把行为变化看作是各种心理力量的结果。</p>
<p>要从心理的角度来分析学习者当时的生活空间和心理世界，而不能像行为主义者那样用客观的物理主义者的术语来界定刺激。</p>
<p>要从整体情境分析入手，而不能只是从刺激情境中抽取一两个孤立的要素。因为不从整体上考虑问题，是不可能作出正确判断的。</p>
<p>行为是行为发生时场的函数。勒温认为行为取决于有机体以往的经验和强化史，这是形而上学的。因为过去的事情现在并不存在，所以不可能直接影响现在的行为。虽说过去的心理场是现在的心理场的来源，但影响现在行为的，毕竟是现在的心理场。</p>
<p>在研究学习时，至少必须区别这样四种变化: 第一，作为认知结构(即知识)变化的学习；第二，作为动机变化的学习；第三，作为群体属性和意识形态变化的学习；第四，作为身体肌肉随意控制发生变化的学习。在勒温看来，学习理论要探讨的，主要是学习者认知结构和动机的变化。</p>
<h3 id="评论" tabindex="-1"> 评论</h3>
<p>勒温在格式塔心理学的框架结构内引进「场」、「生活空间」、「拓扑学」和「向量」等概念，另辟蹊径，从而丰富和发展了传统的格塔理论。尽管他研究的重心放在社会心理学方面，但他对行为、问题和动机等方面探讨，在当时是很有新意的。</p>
<h2 id="格式塔原理的贡献与局限性" tabindex="-1"> 格式塔原理的贡献与局限性</h2>
<h3 id="_1-贡献" tabindex="-1"> 1. 贡献</h3>
<h4 id="对元素主义的反击具有进步意义" tabindex="-1"> 对元素主义的反击具有进步意义</h4>
<p>格式塔学派用大量的事实证明了冯特元素主义理论的漏洞百出，并大胆地冲破了元素主义的束缚，积极而有成效地进行了大量的探索，并取得了一系列引人注目的成果，这对促进心理学事业的繁荣和发展是大有脾益的。</p>
<h4 id="格式塔学派引发了知觉心理学的革新" tabindex="-1"> 格式塔学派引发了知觉心理学的革新</h4>
<p>由于格式塔学派在知觉领域做了大量有目共睹的研究，使得经验论、联想论、官能主义的传统方法逐渐让位于先验论、整体论和突创论。知觉心理学也由感觉心理学的附庸变成一个独立的分支，并在短时期内就取得了一系列突破。</p>
<h4 id="格式塔学派的学习理论独具特色" tabindex="-1"> 格式塔学派的学习理论独具特色</h4>
<p>格式塔学派的顿悟说及对迁移、创造性思维的研究，冲击了联结主义和行为主义的框框，不论在理论创建还是在教育实践中都具有独到的价值和意义。顿悟说也成为西方学习理论中最重要的理论之一。</p>
<h4 id="对人本主义心理学影响较大" tabindex="-1"> 对人本主义心理学影响较大</h4>
<p>人本主义心理学的创建人马斯洛(就是提出人生 7 个层次的需求理论的那位)曾在他老师的惠特海默指导下，研究整体论，从而积累下了研究人的经验；同时期的对人的心理事件或整体研究。主张存在分析的心理学，这些都表明了格式塔学派的潜在影响。</p>
<h4 id="对现代认知心理学的产生起了推动作用" tabindex="-1"> 对现代认知心理学的产生起了推动作用</h4>
<p>格式塔学派研究的那些认知过程及心理过程成了现代认知心理学的基本观点，正如罗伯特逊指出，认知心理学实际上是一种新格式塔现象。</p>
<h3 id="_2-局限性" tabindex="-1"> 2. 局限性</h3>
<p>过分强调顿悟，而全面否定尝试错误，犯了以偏概全的偏激性错误。</p>
<p>顿悟似乎是一个神秘的概念，它的心理活动机制没有揭示清楚。还不能说是一个完善的理论解释。</p>
<p>顿悟说还缺乏对其他与学习有关问题的研究。而且研究的主要是动物的经验学习，还不能很好地解释人类的所有直接经验学习，如技能的习得等。</p>
<p>其理论观点和术语含糊不清。格式塔学派不加分析地采用了一些物理学的概念和数理术语，观点模棱两可，概念不确切，给人的感觉是理论主张过于晦涩深奥，神秘莫测。</p>
<p>对其他学派的批评过于苛刻，他们只批评其他学派的缺陷，却没有提出更好的改进措施，且自身的理论建设和主张又并不明确和高明多少。原来每个行业都有一条鄙视链的存在啊。</p>
<p>格式塔学派的实验不够严谨，过分依赖现象学的方法，缺乏信度和效度，就水平而言，并不比他们所批评的其他学派好多少。</p>
<h2 id="总结" tabindex="-1"> 总结</h2>
<p>我们把原理归类、总结的目的有两个: 一个是自我检查，我们在构思设计的过程中往往会多于专注视觉效果的创作而忽略最基本的原理，比如在设计之前进行完整的设计构思；设计过程中检查自己的设计作品，避免低级错误导致反复改稿，比如信息不对齐，布局杂乱等；再就是设计完成之后对需求方有理有据的陈述。第二个是在深入理解的前提下做设计时能够举一反三。</p>
<p>用户界面设计并不全是关于漂亮的像素和完美的图形。它主要是关于沟通、性能和便利性。格式塔原则总是帮助我们实现这些目标，为用户创造愉快的体验，为企业创造巨大的成功。</p>
<p>通过例子可以发现，这 7 项法则并不是独立存在的，它们之间具有高度的关联性，是相辅相成的关系，我们需要跟进不同的需求类型和用户场景，运用这些基本法则打出组合拳，使您的设计方案更有依据。在做产品或者设计的时候一定要考虑人的认知与记忆的因素，这是与生俱来的天性，人们的审美对简单与和谐具有基本的要求。我们只有更好的利用视觉空间设计作品，减少设计的复杂性，尽量保持格式塔原则的完整，用户才能更好更容易地理解使用我们的产品。</p>
<blockquote>
<p>参考文献:</p>
<ul>
<li>《格式塔心理学理论》MBA 智库</li>
<li>《格式塔心理学原理》库尔特.考夫卡</li>
<li>《视觉设计中的格式塔艺术心理学》</li>
<li>《格式塔心理学 5 项法则的学习与思考》Tencent CDC</li>
<li>《设计中的格式塔原则》Souche Blog</li>
<li>维基百科及其他</li>
</ul>
</blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>信息流介绍</title>
      <link>https://mrhope.site/design/articles/infomation-flow.html</link>
      <guid>https://mrhope.site/design/articles/infomation-flow.html</guid>
      <source url="https://mrhope.site/rss.xml">信息流介绍</source>
      <category>设计</category>
      <pubDate>Sat, 26 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>今日头条的出现颠覆了传统新闻产品(如网易、新浪和搜狐新闻)。</p>
<p>传统新闻依靠着编辑人员的推荐，将新闻触达给用户，而今日头条则依靠着新闻算法，抛弃传统人工分发的思路，使分发效率数以万计的提升，其迅速崛起，成为头部新闻资讯产品。</p>
<p>今日头条作为新闻信息流的头部产品，里面的设计细节和设计逻辑值得我们思考和分析。</p>
<h2 id="信息流样式" tabindex="-1"> 信息流样式</h2>
<p>什么是信息流? 信息流由两部分组成，信息流=信息+流。</p>
<p>信息指的是内容，这些内容可以是新闻、视频、图片等，所呈现的样式多为列表或卡片。</p>
<p>流指的是瀑布流，可以无限滑动浏览。</p>
<p>所以信息流就是可以无限滑动浏览内容信息。</p>
<p>信息流的样式的好坏，会直接影响到信息的展现效率和点击率，从而影响到用户获取信息的效率和整体阅读时长。</p>
<p>下图为今日头条首页推荐频道的信息流:</p>
<p><img src="@source/design/articles/assets/infomation-flow1.jpg" alt="信息流"></p>
<p>将信息流样式进行简单分类，使用最多的四种样式为纯文、左文右图、短内容、大图视频。如下图所示:</p>
<p><img src="@source/design/articles/assets/infomation-flow2.jpg" alt="信息流"></p>
<p>纯文样式用于新闻中没有图片的情况，当文章中没有图片时，这时候采用改样式。列表含有: 标题、来源、评论数、发布时间。</p>
<p>对于含有图片时候，采用左文右图样式。目前新闻对于含有图片的列表样式，一般有 3 种分别为: 左文右图、左图右文和三图。</p>
<p>左图右文的样式，强化图片，弱化标题。对于新闻资讯来说，图片无法准确的表达其新闻资讯的内容，所以这种样式目前没什么产品使用。</p>
<p>目前市面上绝大部分产品都采用左文右图，例如今日头条、网易新闻、腾讯新闻、新浪新闻等。只有是搜狐新闻采用左图右文。</p>
<p><img src="@source/design/articles/assets/infomation-flow3.jpg" alt="信息流"></p>
<p>三图则通过图片吸引用户点击查看，更加通过图片引导用户点击，好处是可以提升点击率，但是整个信息流显得乱，影响用户阅读。</p>
<p><img src="@source/design/articles/assets/infomation-flow4.jpg" alt="信息流"></p>
<p>和网易相比，头条信息流阅读起来更加舒服，视觉压力减少，这是基于今日头条三图样式占比很少，如下图所示，网易新闻信息流插入三图样式导致整个信息流杂乱。</p>
<p><img src="@source/design/articles/assets/infomation-flow5.jpg" alt="信息流"></p>
<p>对比下网易新闻和今日头条信息流样式，如下图所示:</p>
<p>纯文，今日头条的标题颜色更深，网易的相对而言淡一些。头条的列表高度比网易的高，这意味着，头条的屏幕展示条数比网易新闻的少，但是整体的空间感和留白呼吸感更舒服。同时今日头条含有发布时间，使得用户观看新闻资讯时，能够感知新闻的实时性。</p>
<p><img src="@source/design/articles/assets/infomation-flow6.jpg" alt="信息流"></p>
<p>左文右图，头条的列表比网易的要高一些，对比来看，头条的标题更加明显，图片含有圆角半径，使得头条整体看上去更舒服。</p>
<p><img src="@source/design/articles/assets/infomation-flow7.jpg" alt="信息流"></p>
<p>大图视频，两者的区别不大，依然是标题文字颜色、封面圆角和发布时间的差异性。</p>
<p><img src="@source/design/articles/assets/infomation-flow8.jpg" alt="信息流"></p>
<h3 id="小结" tabindex="-1"> 小结</h3>
<p>头条流整体的空间感、留白，标题颜色对比做的比较好。</p>
<p>留白相对于网易更多一些，相同的屏幕空间，展示的内容信息会少一点，屏幕展示效率会低一些。但用户在阅读过程中舒适度更强，同样的情况下用户的阅读时长会变长。</p>
<h2 id="信息流分发" tabindex="-1"> 信息流分发</h2>
<p>什么是信息流分发? 通过一定的设计策略，将用户的流量合理的分配到其他各个地方，从而达到产品的设计目标，促进流量利用最大化。提升流量最大限度的转化，获得更大的商业化价值。</p>
<p>今日头条的信息流主要包含 5 个模块: 置顶模块、资讯列表、广告模块、短内容、其他功能模块的卡片入口。如下图所示:</p>
<p><img src="@source/design/articles/assets/infomation-flow9.jpg" alt="信息流"></p>
<p>推荐流顶部的置顶内容，最多置顶两条，这里是因为相关政策原因。</p>
<p>在正常信息流第一条之后，插入广告，为平台做商业化营收。之后就会根据用户的阅读习惯，给用户推荐信息内容，并时不时的插入广告等。</p>
<p>今日头条没有编辑运营，所以几乎所有的新闻都来自于机器算法。少了编辑人员的人工运营，使得今日头条有巨量的内容按照不同用户的阅读习惯推荐用户不同的内容。</p>
<h2 id="搜索栏" tabindex="-1"> 搜索栏</h2>
<p>在新闻信息流产品里，搜索栏所承接的使用场景主要有两个。一个是提供搜索新闻功能，通过关键词对当前或过去的新闻进行搜索。</p>
<p>另一个是在搜索模块提供热搜新闻，提供用户阅读。</p>
<p>那么如何提升搜索栏的点击次数。今日头条将热搜新闻以提示语的形式展示在搜索栏滚动，吸引用户。同时为了更大限度的展示新闻条数，采用一排两个的设计，保证最大程度的提升点击率。</p>
<p><img src="@source/design/articles/assets/infomation-flow10.jpg" alt="信息流"></p>
<p>用户点击搜索框之后，搜索框里面内置第一条热搜关键词。用户可通过键盘上的搜索，进行搜索。也可以点击搜索栏下方的两个热搜新闻进行搜索查看。</p>
<h2 id="短视频" tabindex="-1"> 短视频</h2>
<p>视频标题内置于播放器中，这样的好处可以减少卡片高度，让视频曝光量提升，缺点是用户如果想看视频标题介绍时，则需要点击下播放器，标题才能再次出现。</p>
<p><img src="@source/design/articles/assets/infomation-flow11.jpg" alt="信息流"></p>
<p>标题置于播放器里面，头条可以展示 2.5 条，而好看视频将标题置于外面只能展示 2 条，如下图所示:</p>
<p><img src="@source/design/articles/assets/infomation-flow12.jpg" alt="信息流"></p>
<p>对于广告业务来说，收入的一个重要指标则是广告曝光量，为了提升广告的收入，则必须降低视频高度，使得广告曝光效率得到提升，以此提升收入，所以头条将标题放置于播放器里面符合商业目标，但是不符合用户目标。</p>
<h2 id="小视频" tabindex="-1"> 小视频</h2>
<p>小视频的布局设计大致有两种，一种是抖音式布局，采用头像和操作项位于右侧。这样的好处是，视频的互动量很明显的展示出来，可引导用户互动。但对视频的内容有一定遮挡影响。</p>
<p>另一种是好看视频式布局，将头像昵称、操作项放在底部，弱化视频的互动数据。让用户专注于视频内容。</p>
<p><img src="@source/design/articles/assets/infomation-flow13.jpg" alt="信息流"></p>
<p>今日头条的小视频采用和抖音一样的布局。头像和操作项放于右侧。但是为了引导用户评论，在界面底部加入了输入框，引导用户评论，为了让用户更加方便的看评论。上滑手势变成了调起起评论。</p>
<p><img src="@source/design/articles/assets/infomation-flow14.jpg" alt="信息流"></p>
<h2 id="短内容流" tabindex="-1"> 短内容流</h2>
<p>推荐流里面的短内容(微头条)，点击进入短内容 feed 流。而非短内容详情页。用户如果想看详情，那么需要用户再次点击。</p>
<p><img src="@source/design/articles/assets/infomation-flow15.jpg" alt="信息流"></p>
<p>这种设计明显体验不好，估计产品为其他短内容导流。这样的交互设计，可以使得整体的短内容流的曝光量提升好几倍。</p>
<p>这种做法牺牲了体验，用户如果需要看详情，则需要连续点击两次。这是为了业务指标作出牺牲的设计。</p>
]]></content:encoded>
    </item>
    <item>
      <title>布局中的左和右</title>
      <link>https://mrhope.site/design/articles/left-or-right.html</link>
      <guid>https://mrhope.site/design/articles/left-or-right.html</guid>
      <source url="https://mrhope.site/rss.xml">布局中的左和右</source>
      <category>设计</category>
      <pubDate>Sat, 26 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="左右横跳的泳道" tabindex="-1"> 左右横跳的泳道</h2>
<p>最近经常在人人视频上看电视剧，发现人人视频在设计上有个很有意思的点。</p>
<p>它的电影页中有很多推荐电影片单，每个片单里有 5-12 部电影；碍于手机尺寸，用户只能看到 3 部电影；如果您对这个片单里的电影比较感兴趣，可以滑动查看更多的电影——这种横向滑动的设计又被称之为“泳道”。</p>
<p><img src="@source/design/articles/assets/left-or-right-renren.jpg" alt="泳道"></p>
<p>那么问题来了，究竟向哪个方向滑动呢?</p>
<p>或许您会觉得这是一个送分题，肯定是左滑啊；没错，您去查看 100 个 APP，这种水平横滑的泳道，99 个都是左滑的；但是人人视频就是那唯一的特例，它是左滑和右滑相互组合的。</p>
<p><img src="@source/design/articles/assets/left-or-right-renren.gif" alt="人人交互"></p>
<p>前一个片单是左滑，后一个就是右滑；反之，前一个片单是右滑，后一个就是左滑。</p>
<p>第一次碰到这种设计，我很奇怪: 为什么要做出这种挑战用户固有认知的调整? 后来思考了一下，开始理解他们的做法。</p>
<p>当用户左滑查看电影时，浏览完最后一部电影，用户的视线是停留在在屏幕右侧；如果下一个片单依然采用左滑，那么用户的视线需要先移动到屏幕左侧，再移动到右侧——这个路线就是 Z 型浏览模式；而人人视频紧接着的是右滑，第一个视频直接从右侧开始，避免了用户视线的转移。</p>
<p><img src="@source/design/articles/assets/left-or-right-sight.jpg" alt="视线路径"></p>
<p>人人视频的这种方案，让我想起夸克浏览器——用户在夸克浏览器里观看视频，如果点击屏幕的位置靠左，那么菜单就会出现在左边；如果点击的位置靠右，菜单就会出现在右边；这样的处理方式，可以缩短用户手指的移动距离。</p>
<p><img src="@source/design/articles/assets/left-or-right-quark.gif" alt="夸克菜单"></p>
<p>一个是缩短视线移动距离，一个是缩短手指移动距离。</p>
<h2 id="左还是右" tabindex="-1"> 左还是右</h2>
<p>设计中有很多这样“左、右”的争论。最经典的就是: 对话框的确定按钮到底是在左边还是右边? 这个话题被讨论了无数次。</p>
<p>那么不管是左还是右，我们到底在争论什么? 左和右代表了什么?</p>
<p>我们习惯的浏览方向是由左至右，那么左代表了用户视线的起点。</p>
<p>我们经常说用户的浏览模式是 Z 型的，但是在移动端界面中，左边为信息区，右边为操作区。</p>
<p>用户在快速浏览页面的模式下，根据左边的信息区判断自己是否对这条内容感兴趣，如果感兴趣才进行操作；所以更多的情况下，用户的浏览模式不是 Z 型，而是 L 型的。</p>
<p><img src="@source/design/articles/assets/left-or-right-L.jpg" alt="视线移动"></p>
<p>iOS 11 与 iOS 10 相比，我们可以发现页面标题、搜索框文案和内容都是改成放在左边。</p>
<p><img src="@source/design/articles/assets/left-or-right-app-store.jpg" alt="iOS页面对比"></p>
<p>整体的视觉动线由中间改成了左边，用户在快速浏览过程中视线不需要发生偏移。</p>
<p><img src="@source/design/articles/assets/left-or-right-app-store2.jpg" alt="iOS 页面对比"></p>
<p>右代表着更好的易用性。因为在移动端，用户更习惯单手握持手机进行操作；而我们大部分人都是右撇子。</p>
<p>谷歌的 MD 设计中的浮动按钮，是位于界面右侧；微信的浮窗也是位于界面右侧，就是为了方便用户操作。</p>
<p><img src="@source/design/articles/assets/left-or-right-float.jpg" alt="浮动按钮"></p>
<p>看到这里或许您会理解为什么“对话框的确定按钮在左边还是右边? ”这个话题经久不衰了吧。</p>
<p>因为左边和右边背后都有理论支撑——左代表着离您的眼睛更近，右代表着离您的手更近。</p>
<p>我们再来设想一个场景，针对左撇子用户，界面设计应该怎么调整；用户的惯用手是左手，那是不是要做镜面反转，把操作区移动到左边呢? 读者中肯定有左撇子用户，您们会喜欢这种布局吗?</p>
<p><img src="@source/design/articles/assets/left-or-right-direction.jpg" alt="文字方向"></p>
<h2 id="流量分发" tabindex="-1"> 流量分发</h2>
<p>当然也会有一些设计方案在“左/右”的选择上没这么纠结，例如在微博、抖音这类社交产品中，其主页的“推荐”栏目永远在“关注”栏目的左边。</p>
<p><img src="@source/design/articles/assets/left-or-right-flow.jpg" alt="流量分发"></p>
<p>以微博为例，“关注”和“推荐”在信息架构上是类似的，下面都有一些细分类目: “关注”里有不同的分组，“推荐”里也有不同内容类别，例如热门、同城、榜单等。</p>
<p>但是“关注”用户需要点击下拉框才能筛选，而“推荐”里用户直接右滑就可以切换不同的内容类别；如果把“关注”里的分组也改成滑动切换的样式，那么必然会降低“推荐”栏目的流量。</p>
<p><img src="@source/design/articles/assets/left-or-right-flow2.jpg" alt="流量分发"></p>
<p>抖音也是类似的道理，因为用户左滑可以查看作者的主页，如果把推荐栏目放在左边，那么用户左滑就会进入关注栏目。</p>
<p>引导用户进入已经关注的作者主页，相对来说意义不是很大；抖音的想法是——用户在刷推荐视频的时候，觉得这个视频很好玩，对这个视频的作者产生兴趣；用户可以直接滑动进入作者的主页，而不是需要点击头像才能进入主页。</p>
<p><img src="@source/design/articles/assets/left-or-right-flow3.jpg" alt="流量分发"></p>
<p>微博和抖音的“左关注，右推荐”的模式都是为了往推荐栏目引流。</p>
<p>社交产品追求的是用户可以在这个产品里建立更多关系链，关系链是社交产品的护城河；既然这个人您已经关注了，说明关系链已经形成，那就没有必要引流了。</p>
<p>从这里我们也能看出，在考虑方案的时候，不仅仅要考虑交互易用性，更要着眼于流量分配——哪个方案的流量分配更符合您的诉求，哪个就是好的方案。</p>
<p>甚至在很多时候，当交互易用性跟流量分配相冲突时，交互易用性是被牺牲的一方，因为流量代表了产品经理的 KPI。</p>
<p><img src="@source/design/articles/assets/left-or-right-flow4.jpg" alt="流量分发"></p>
<p>最典型的例子就是知乎为了给答案底部的广告引流把左右滑动切换答案改成了上下滑动；当然，我们也不能批判知乎的这种行为。</p>
<p>还是回到对话框的话题，“确定按钮到底在左边还是右边? ”，最好的办法就是 A/B 测试；如果是一个引导用户安装 APP 的对话框，您就看“确定”按钮放在哪边可以带来更多的转化率。</p>
<p>这个 A/B 测试，搜狗输入法曾经做过，结果显示: 确定按钮放在左边转化率更高，误操作率更低，操作平均时长也更短；那么我们是否可以说，以后“确定”按钮就放在左边了?</p>
<p>当然不可以，因为这个测试是在安卓 4.0 时期进行的；安卓 4.0 之前的系统对话框的确定按钮是在左边的，4.0 才改成右边——用户之前的操作习惯会影响测试结果。</p>
<p>还有一个因素就是设备尺寸，手机尺寸现在越来越大，用户需要双手握持手机；那么在双手操作的模式下，手指可以全覆盖屏幕，那么右边的易用性就没那么高了。</p>
<p>总之，同一个交互问题，在不同的设备，系统，时间和场景下，会有不同的答案。</p>
]]></content:encoded>
    </item>
    <item>
      <title>交互设计</title>
      <link>https://mrhope.site/design/interact/</link>
      <guid>https://mrhope.site/design/interact/</guid>
      <source url="https://mrhope.site/rss.xml">交互设计</source>
      <category>设计</category>
      <pubDate>Sat, 26 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="文章列表" tabindex="-1"> 文章列表</h2>
<ul>
<li>
<p><a href="/design/interact/search.html">搜索框</a></p>
</li>
<li>
<p><a href="/design/interact/text-field.html">文本框</a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>文本框设计</title>
      <link>https://mrhope.site/design/interact/text-field.html</link>
      <guid>https://mrhope.site/design/interact/text-field.html</guid>
      <source url="https://mrhope.site/rss.xml">文本框设计</source>
      <category>设计</category>
      <pubDate>Sat, 26 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>文本框的出现几乎可以追溯到可视化交互诞生的源头，是一个再经典不过的「鼻祖」控件了。我们每天都在和文本框打交道，不论您是产品设计者还是用户。</p>
<h2 id="文本框的拆解" tabindex="-1"> 文本框的拆解</h2>
<p>文本框(Text Fields)根据 Material Design 指导规范，被拆解为七个部分。分别是:</p>
<p><img src="@source/design/interact/assets/text-field.jpg" alt="文本框的拆解"></p>
<ul>
<li>容器(Container)</li>
<li>前导图标(Leading icon)</li>
<li>标签文本(Label text)</li>
<li>输入文本(Input text)</li>
<li>尾随图标(Trailing icon)</li>
<li>激活指示器(Activation indicator)</li>
<li>帮助文本(Helper text)</li>
</ul>
<p>当然，MD 为我们展示的是已经经过其团队长期摸索之后，基于其平台规范下的标准样式。想要探索文本框的交互演变，我们还是要回溯到文本框最初的模样。</p>
<p><img src="@source/design/interact/assets/text-field-original.jpg" alt="文本框基础样式"></p>
<p>这就是一个文本框最基础的样式了， 一个标签文本+容器，已经基本可以确保向用户传递文本框最直观的信息。</p>
<p>但如今的文本框已经演变出了形形色色的样式和交互形式，究竟 MD 的文本框是如何演变到今天这番样子?</p>
<h2 id="基础的文本框布局方式" tabindex="-1"> 基础的文本框布局方式</h2>
<p>激励设计师不停探索文本框新的交互形式的根本原因之一，一定包含总让人头疼的排版问题。在解决了基本视觉问题之后，才是思考如何设计文本框来 提升用户的填写和使用效率。</p>
<p>例如前面我们所看到的最基础的文本框样式，如果简单地进行单列布局，自然而然会出现让众多设计师纠结的一个问题: 标签文本究竟应该如何对齐?</p>
<p><img src="@source/design/interact/assets/text-field-align.jpg" alt="文本框对齐"></p>
<p>如果标签文本采用右对齐，标签文本的长短问题容易导致左侧的视觉隐形边界错乱，用户的规律眼动容易被打乱；</p>
<p>如果标签文本采用左对齐，文本的长短问题又会导致部分较短标签文本与容器间距增大，让用户从左至右浏览的效率降低，并且看起来不够协调。</p>
<p>于是乎文本框的布局方式有了进一步的演变: 标签文本与容器顶端对齐。</p>
<p><img src="@source/design/interact/assets/text-field-align2.jpg" alt="文本框对齐"></p>
<p>顶端对齐的方式使得用户眼动变得十分规律，竖直向下浏览可以便捷地理解标签文本并进行填写，文本的长短问题不再成为干扰设计师进行排版的一个纠结点。</p>
<p>但纵向布局的的方式只是把问题迁移到了另一个维度，那就是在表单数据量过多时，纵向布局会使得纵向空间耗损增加，用户需要不停地滑动页面才能实现表单的完整填写。</p>
<p>所以，文本框的布局需要多方位评估标签文本长度、表单数据量等问题，才能对具体场景进行有效设计。</p>
<h2 id="文本框的改良" tabindex="-1"> 文本框的改良</h2>
<p>当文本框横向布局或是纵向布局都很难解决具体场景问题的时候，更新颖的文本框交互形式就出现了。</p>
<p>最初的演变形式是众多的应用开始采用前导图标来替代标签文本，使用图标可以有效地解决标签文本导致的排版错落问题。</p>
<p><img src="@source/design/interact/assets/text-field-icon.jpg" alt="图标提示"></p>
<p>这种方案在轻量表单中较为常见，一般都是在表单内容少、用户对于场景的熟悉度较高的情景当中(例如登录场景)。</p>
<p>因为每个用户对于图标的认知性存在差异，在生疏场景或表单内容过多的情况下，图标容易导致用户对文本框信息产生更多的认知成本。所以用图标来代替标签文本的普适性其实并不高。</p>
<p>于是后来 iOS 人机交互规范 和 MD 规范 都给设计师提出了一条指导建议: 当占位符字段中不包含必要内容时，可以合理地使用占位符来承载标签文本。</p>
<p>例如 iOS 通讯录新增联系人，就采用了占位符承载标签文本的方式。</p>
<p><img src="@source/design/interact/assets/text-field-placeholder.jpg" alt="iOS 占位符提示"></p>
<p>但这种形式同样也存在一个弊端: 用户一旦输入内容之后，占位符就被内容文本填充覆盖了，有时用户会忘记所填写的信息是关于什么内容，必须要清空文本进行重新确认。对于表单内容繁多或重要内容需要谨慎填写的场景，这样的交互其实还是有一些不妥。</p>
<p>于是乎，类似 MD 的指导规范下这样普适性较高的文本框形式就诞生了。采用占位符承载标签文本，并且在用户填写信息时，标签文本始终可见，由占位符转移到文本框顶部。</p>
<p><img src="@source/design/interact/assets/text-field-md.gif" alt="MD 标签"></p>
<p>这一文本框交互形式的诞生，不论是对于排版空间的节省、遵循用户眼动习惯、微动效提升文本框趣味性等方面，都得到了一定提升。并且许多应用开始进行借鉴效仿。</p>
<p>其实像以上这种巧用占位符的场景已经越来越常见了，占位符已经不再仅仅用来承载无用信息或提示性信息，也可以用于承载 默认值，帮助用户自动填充， 提高用户填写信息的效率(例如手游当中，创建账号时系统帮玩家默认填充一个可用昵称)。</p>
<p>但填充默认值的手法也不仅仅局限于提升用户体验和填写效率，甚至也被运用到了一些商业场景中。</p>
<p>例如淘宝、京东等电商平台，将商品名称作为占位符填充在搜索栏中，一方面给所推荐商品增加了曝光；另一方面，在用户直接点击搜索时，将会以当前占位符内容进行搜索，达到为所推荐商品引流的效果。</p>
<p><img src="@source/design/interact/assets/text-field-placeholder-search.jpg" alt="引流"></p>
<h2 id="合理的反馈" tabindex="-1"> 合理的反馈</h2>
<p>合理的反馈机制对于提升用户填写文本框效率也起着重要的作用，MD 规范中的帮助文本不仅仅是告诉设计者可以用于指导用户该如何正确填写文本框信息，也为反馈提示提供了展示空间。</p>
<p>MD 的反馈状态可以归纳为以下几种:</p>
<p><img src="@source/design/interact/assets/text-field-feedback.jpg" alt="反馈"></p>
<p>在这里我大概总结了一下文本框的负反馈提示信息，希望在您设计表单的时候，能够帮助到您对负反馈提示状态进行走查(可能不全，欢迎补充):</p>
<ul>
<li>内容是否为空(例: 必填项不能为空)</li>
<li>二次确认内容是否一致(例: 确认密码与首次输入不一致)</li>
<li>内容是否合规 (例: 昵称中包含不文明词语)</li>
<li>内容格式是否合规(例: 昵称中不能包含特殊字符)</li>
<li>内容长度是否合规(例: 手机号输入不足 11 位)</li>
<li>内容的是否符合唯一性(例: 验证码输入错误)</li>
</ul>
<p>及时给予用户负反馈，可以让用户清晰地排查所发生的错误。但交互设计讲究「以人为本」，在某些场景中，当用户所填写的信息是合理的，及时地展示 正向反馈也是有必要的。</p>
<p>例如，部分应用在用户创建账号的场景中，当用户输入账号信息后，系统将立刻检索用户的账号是否已存在在当前数据库中，避免用户忘记已创建过该账号而进行重复创建的徒劳步骤。</p>
<p><img src="@source/design/interact/assets/text-field-feedback2.jpg" alt="反馈"></p>
<p>所以不要狭隘地认为 MD 所给到的帮助文本只能用于「批评」用户(负反馈)， 当用户做了正确的事时，也应该适当地激励用户，这也正符合了尼尔森可见性原则。</p>
]]></content:encoded>
    </item>
    <item>
      <title>快捷键</title>
      <link>https://mrhope.site/software/vscode/shortcut-key.html</link>
      <guid>https://mrhope.site/software/vscode/shortcut-key.html</guid>
      <source url="https://mrhope.site/rss.xml">快捷键</source>
      <category>VS Code</category>
      <pubDate>Thu, 17 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>通过快捷键，Visual Studio Code 可让您直接从键盘执行大多数任务。</p>
<h2 id="常用的快捷键" tabindex="-1"> 常用的快捷键</h2>
<div><p>提示</p>
<p>以下这些快捷键建议大家熟练掌握，能够很大程度提高开发效率。</p>
</div>
<h3 id="鼠标操作" tabindex="-1"> 鼠标操作</h3>
<ul>
<li>
<p>在当前行的位置，鼠标三击，可以选中当前行。</p>
</li>
<li>
<p>用鼠标单击文件的行号，可以选中当前行。</p>
</li>
<li>
<p>在某个行号的位置，上下移动鼠标，可以选中多行。</p>
</li>
</ul>
<h3 id="移动光标" tabindex="-1"> 移动光标</h3>
<ul>
<li>
<p>「方向键」: 在<strong>单个字符</strong>之间移动光标</p>
</li>
<li>
<p>「Ctrl + 左右方向键」: 在<strong>单词</strong>之间移动光标(很常用)。</p>
</li>
</ul>
<h3 id="快速选中" tabindex="-1"> 快速选中</h3>
<p>在任意位置单击放置光标，按住 <code>shift</code> 在第二个位置单击，即可选中两光标位置间的所有文字。</p>
<ul>
<li>
<p><code>Ctrl + Alt + ↑/↓</code>: 向方向键方向的相邻行放置一个光标；</p>
</li>
<li>
<p><code>Alt + Click</code>: 放置辅助游标；</p>
</li>
<li>
<p><code>Shift + Alt + ←/→</code>: 收缩/扩展选择；</p>
</li>
<li>
<p><code>Shift + Alt</code> 同时拖动到对角: 列(框)选择；</p>
</li>
</ul>
<h3 id="删除" tabindex="-1"> 删除</h3>
<ul>
<li>
<p><code>Ctrl + Backspace</code>: 删除光标之前的一个单词</p>
</li>
<li>
<p><code>Ctrl + delete</code>: 　删除光标之后的一个单词</p>
</li>
<li>
<p><code>Ctrl + Shift + K</code>: 删除整行</p>
</li>
</ul>
<h3 id="移动文字" tabindex="-1"> 移动文字</h3>
<ul>
<li>
<p><code>Alt + ↑</code>: 光标所在行或选中的文字的所有行整体上移一行；</p>
</li>
<li>
<p><code>Alt + ↓</code>: 光标所在行或选中文字的所有行整体下移一行</p>
</li>
</ul>
<h3 id="复制文字" tabindex="-1"> 复制文字</h3>
<ul>
<li>
<p><code>Alt + shift + ↑</code>: 光标所在行或选中的文字的所有行整体向下复制一行(如果选中了多行就是复制多行)；</p>
</li>
<li>
<p><code>Alt + shift + ↓</code>: 光标所在行或选中文字的所有行整体向上复制一行(如果选中了多行就是复制多行)；</p>
</li>
<li>
<p><code>Ctrl + D</code>: 选择光标处的单词，或下一次出现的当前选择；</p>
</li>
</ul>
<h3 id="代码操作" tabindex="-1"> 代码操作</h3>
<ul>
<li>
<p><code>Ctrl + /</code>: 添加单行注释</p>
</li>
<li>
<p><code>Alt + shift + F</code>: 代码格式化</p>
</li>
<li>
<p><code>Ctrl + U</code>: 将光标的移动回退到上一个位置、撤销光标的移动和选择</p>
</li>
<li>
<p><code>Ctrl + Enter</code>: 在当前行下面新增一行，然后跳至该行 (即使光标不在行尾，也能快速向下插入一行)</p>
</li>
<li>
<p><code>Ctrl + P</code>: 在当前的项目工程里，<strong>全局</strong>搜索文件</p>
</li>
<li>
<p><code>Ctrl + G</code>: 跳转到指定行</p>
</li>
<li>
<p><code>Ctrl + shift + O</code>: 在当前文件的各种<strong>方法之间</strong>进行跳转</p>
</li>
</ul>
<h4 id="搜索" tabindex="-1"> 搜索</h4>
<ul>
<li>
<p><code>Ctrl + F</code>: 查找，光标在搜索框里；</p>
</li>
<li>
<p><code>F3</code>: 在当前文件中搜索，光标仍在编辑器里</p>
</li>
<li>
<p><code>Ctrl + Shift +F</code>: 全局搜索</p>
</li>
<li>
<p><code>Ctrl + H</code>: 替换。</p>
</li>
</ul>
<h4 id="多光标的使用" tabindex="-1"> 多光标的使用</h4>
<ol>
<li>
<p>按住 Alt 键，然后在页面中希望中现光标的位置点击鼠标。</p>
</li>
<li>
<p>选中某个文本，然后反复按住快捷键 <code>Ctrl + D</code> 键， 即可将全文中与光标当前所在位置的词相同的词逐一加入选择。</p>
</li>
<li>
<p>选中一堆文本后，按住 <code>Alt + Shift + I</code> 键，既可在<strong>每一行的末尾</strong>都创建一个光标。</p>
</li>
</ol>
<h4 id="工作区快捷键" tabindex="-1"> 工作区快捷键</h4>
<ul>
<li>
<p><code>Ctrl + B</code>: 显示/隐藏侧边栏</p>
</li>
<li>
<p><code>Ctrl + \</code>: 创建多个编辑器</p>
</li>
<li>
<p><code>Ctrl + Pagedown/Pageup</code>: 在已经打开的文件之间进行<strong>切换</strong></p>
</li>
<li>
<p><code>Ctrl + `</code>: 打开终端</p>
</li>
</ul>
<h3 id="代码折叠" tabindex="-1"> 代码折叠</h3>
<p><code>Ctrl + Shift + [</code>: 折叠光标处最内部的未折叠区域；</p>
<p><code>Ctrl + Shift +]</code>: 展开光标处的折叠区域；</p>
<p><code>Ctrl + K Ctrl + [</code>: 折叠光标处最内部的未折叠区域以及该区域内的所有区域；</p>
<p><code>Ctrl + K Ctrl +]</code>: 展开光标处的区域以及该区域内的所有区域；</p>
<p><code>Ctrl + K Ctrl + 0</code>: 折叠编辑器中的所有区域；</p>
<p><code>Ctrl + K Ctrl + J</code>: 展开编辑器中的所有区域；</p>
<p><code>Ctrl + K</code> <code>Ctrl</code> + <code>X</code>: 折叠级别 <code>X</code> 的所有区域，但当前光标位置的区域除外；</p>
<p><code>Ctrl + K Ctrl + /</code>: 折叠以块注释标记开头的所有区域；</p>
<div><p>官方文档</p>
<p><a href="/file/vscodeKeyboardShortcutsWindows.pdf">Windows 下 VS Code 快捷键指南</a> (英文)</p>
</div>
<h3 id="windows-快捷键" tabindex="-1"> Windows 快捷键</h3>
<p><code>Ctrl + X</code>: 剪切；</p>
<p><code>Ctrl + C</code>: 复制；</p>
<p><code>Ctrl + V</code>: 粘贴；</p>
<p><code>Ctrl + A</code>: 全选；</p>
<p><code>Ctrl + Z</code>: 撤销；</p>
<p><code>Ctrl + Y</code>: 恢复；</p>
<div><p>相关信息</p>
<p>更多请见 <a href="/code/windows/shortcut-key.html">Windows 快捷键介绍</a></p>
</div>
<hr>
<p>以下是一些高级内容</p>
<h2 id="快捷键编辑器" tabindex="-1"> 快捷键编辑器</h2>
<p>Visual Studio Code 使用 <strong>键盘快捷键编辑器</strong> 提供了丰富而便捷的键盘快捷键编辑体验。它列出了所有可用命令(无论是否已有快捷键绑定)，您可以轻松 更改 / 删除 / 重置 其键绑定。它还在顶部有一个搜索框，可帮助您查找命令或快捷键。您可以通过转到 <code>文件 &gt; 首选项 &gt; 键盘快捷方式</code> 下的菜单来打开此编辑器。(macOS 上为 <code>代码 &gt; 首选项 &gt; 键盘快捷键</code>)</p>
<h3 id="检测键绑定冲突" tabindex="-1"> 检测键绑定冲突</h3>
<p>如果您安装了许多扩展程序或自定义了键盘快捷键，则有时会将同一键盘快捷键映射到多个命令时会发生键绑定冲突。这可能导致混乱的行为，尤其是当您在编辑器中移动时，不同的键绑定进入和超出范围时。</p>
<p>该键盘快捷键编辑器有一个上下文菜单命令显示相同的按键组合，这将筛选基于键盘快捷键来显示冲突的键绑定。</p>
<p>选择一个您认为被覆盖掉的键绑定命令，您可以查看是否定义了多个命令，键绑定的来源以及它们何时处于活动状态。</p>
<h3 id="查看修改键绑定" tabindex="-1"> 查看修改键绑定</h3>
<p>您可以使用 <strong>更多操作(...)</strong> 菜单中的 <strong>显示用户按键绑定</strong>命令。</p>
<h3 id="高级定制" tabindex="-1"> 高级定制</h3>
<p>VS Code 中的所有键盘快捷键都可以通过该 <code>keybindings.json</code> 文件进行自定义。</p>
<ul>
<li>要通过 JSON 文件配置键盘快捷键，请打开 <strong>键盘快捷键</strong> 编辑器，然后选择编辑器标题栏右侧的 **打开键盘快捷键 (JSON)**按钮。</li>
<li>这将打开您的 <code>keybindings.json</code> 文件，您可以在其中覆盖默认的案件绑定。</li>
</ul>
<p>您也可以使用从命令面板(Ctrl + Shift + P)中选择 <strong>首选项: 打开键盘快捷方式 (JSON)</strong> 命令打开 <code>keybindings.json</code> 文件。</p>
]]></content:encoded>
    </item>
    <item>
      <title>用户界面</title>
      <link>https://mrhope.site/software/vscode/ui.html</link>
      <guid>https://mrhope.site/software/vscode/ui.html</guid>
      <source url="https://mrhope.site/rss.xml">用户界面</source>
      <category>VS Code</category>
      <pubDate>Thu, 17 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>本质上，Visual Studio Code 是代码编辑器。像许多其他代码编辑器一样，VS Code 在左边采用通用的用户界面和资源管理器布局，以显示您有权访问的所有文件和文件夹，而在右边的编辑器则显示您已打开文件的内容。</p>
<h2 id="基本布局" tabindex="-1"> 基本布局</h2>
<p>VS Code 具有简单直观的布局，可最大程度地为编辑器提供空间，同时为浏览和访问文件夹或项目的整个上下文留出足够的空间。用户界面分为五个区域:</p>
<ul>
<li><strong>编辑器</strong>: 用于编辑文件的主要区域。您可以在垂直和水平方向上并排打开任意多个编辑器。</li>
<li><strong>侧边栏</strong>: 包含诸如资源管理器之类的不同视图，可在您处理项目时为您提供帮助。</li>
<li><strong>状态栏</strong>: 有关打开的项目和您编辑的文件的信息。</li>
<li><strong>任务栏</strong>: 位于最左侧，可让您在视图之间进行切换，并为您提供特定于上下文的其他指示符，例如启用 Git 时传出更改的数量。</li>
<li><strong>面板</strong>: 您可以在编辑器区域下方显示不同的面板，以获取输出或调试信息，错误和警告或集成终端。面板也可以向右移动以获得更多垂直空间。</li>
</ul>
<p>每次启动 VS Code 时，它的打开状态与上次关闭时的状态相同。文件夹，布局和打开的文件将保留。</p>
<p>在每个编辑器中打开的文件都显示在编辑器区域顶部，带有选项卡式标题(Tab)。要了解有关选项卡式标题的更多信息，请参见下面的  部分。</p>
<div><p>提示</p>
<p>您可以将侧栏移至右侧(<strong>查看 &gt; 外观 &gt; 向右移动侧边栏</strong>)或切换其可见性(<code>Ctrl + B</code>)。</p>
</div>
<h2 id="并排编辑" tabindex="-1"> 并排编辑</h2>
<p>您可以在垂直和水平方向上并排打开任意多个编辑器。如果您已经打开了一个编辑器，则可以通过多种方式在现有编辑器的一侧打开另一个编辑器:</p>
<ul>
<li><code>Alt</code>: 在资源管理器中单击一个文件。</li>
<li><code>Ctrl + \</code>: 将活动编辑器一分为二。</li>
<li>从文件的资源管理器上下文菜单中选择 <strong>在侧边打开</strong>(<code>Ctrl + Enter</code>)。</li>
<li>单击编辑器右上方的 <strong>向右拆分编辑器</strong> 按钮。</li>
<li>将文件拖放到编辑器区域的任何一侧。</li>
<li>在 <strong>快速打开</strong> (<code>Ctrl + P</code>)文件列表中，按 <code>Ctrl + Enter</code>(macOS: <code>Cmd + Enter</code>)。</li>
</ul>
<p>每当您打开另一个文件时，处于活动状态的编辑器都会显示该文件的内容。因此，如果您有两个并排的编辑器，并且想要将文件打开到右侧编辑器中，请在打开文件之前，确保该编辑器处于活动状态(通过在其中单击)。</p>
<p>默认情况下，编辑器将打开到活动窗口的右侧。您可以通过设置更改此行为，<code>workbench.editor.openSideBySideDirection</code> 并配置为在活动编辑器的底部打开新编辑器。</p>
<p>当您有一个以上的编辑器打开您可以按住 Ctrl 键的同时按 1、2、3 在它们之间迅速切换。</p>
<div><p>提示</p>
<p>您可以调整编辑器的大小并重新排序。拖放编辑器标题区域以重新定位编辑器或调整其大小。</p>
</div>
<h2 id="小地图" tabindex="-1"> 小地图</h2>
<p>Minimap(代码大纲)为您提供了源代码的高级概述，这对于快速导航和理解代码很有用。文件的小地图显示在编辑器的右侧。您可以单击或拖动阴影区域以快速跳转到文件的不同部分。</p>
<p><img src="@source/software/vscode/assets/minimap.png" alt="小地图"></p>
<div><p>提示</p>
<p>您可以通过分别设置 <code>&quot;editor.minimap.side&quot;: &quot;left&quot;</code> 或 <code>&quot;editor.minimap.enabled&quot;: false</code> 在用户或工作空间设置中将小地图移到左侧或完全禁用它。</p>
</div>
<h3 id="缩进指南" tabindex="-1"> 缩进指南</h3>
<p><img src="@source/software/vscode/assets/indent-raindow.png" alt="缩进提示"></p>
<p>上图还显示了压痕指南(垂直线)，可帮助您快速查看匹配的压痕级别。如果您要禁用缩进指南，则可以 <code>&quot;editor.renderIndentGuides&quot;: false</code> 在用户或工作空间设置中进行设置。</p>
<div><p>提示</p>
<p>请安装 <strong>Bracket Pair Colorizer 2</strong> 扩展来启用彩虹缩进</p>
</div>
<h2 id="导航痕迹" tabindex="-1"> 导航痕迹</h2>
<p>编辑器在其内容上方有一个导航栏，称为 <strong>导航痕迹</strong>。它显示当前位置，并允许您在文件夹，文件和符号之间快速导航。</p>
<p><img src="@source/software/vscode/assets/breadcrumb.png" alt="导航痕迹"></p>
<p>导航痕迹始终显示文件路径，如果当前文件类型支持符号的语言，则符号路径直至光标位置。您可以使用 <strong>查看 &gt; 显示导航痕迹</strong> 切换命令禁用导航痕迹。有关导航痕迹功能的更多信息，例如如何自定义其外观，请参见 <a href="https://code.visualstudio.com/docs/editor/editingevolved#_breadcrumbs" target="_blank" rel="noopener noreferrer">导航痕迹<ExternalLinkIcon/></a> 部分。</p>
<h2 id="资源管理器" tabindex="-1"> 资源管理器</h2>
<p>资源管理器用于浏览，打开和管理项目中的所有文件和文件夹。VS Code 基于文件和文件夹-您可以直接在 VS Code 中打开文件或文件夹并开始使用。</p>
<p>在 VS Code 中打开文件夹后，该文件夹的内容将显示在资源管理器中。您可以从这里做很多事情:</p>
<ul>
<li>创建，删除和重命名文件和文件夹。</li>
<li>通过拖放移动文件和文件夹。</li>
<li>使用上下文菜单浏览所有选项。</li>
</ul>
<div><p>提示</p>
<p>您可以从 VS Code 外部将文件拖放到资源管理器中以进行复制(如果资源管理器为空，则 VS Code 将打开它们)</p>
</div>
<p>VS Code 与您可能会使用的其他工具(特别是命令行工具)配合得很好。如果要在当前已在 VS Code 中打开的文件夹的上下文中运行命令行工具，请右键单击该文件夹，然后选择在命令提示符下打开(或在 macOS 或 Linux 上在终端中打开)。</p>
<p>您还可以通过右键单击本机资源管理器中的文件或文件夹，然后选择 <strong>在文件资源管理器中显示</strong> 来导航到文件或文件夹的位置。</p>
<div><p>提示</p>
<p>键入 <code>Ctrl + P</code>(快速打开)可按文件名快速搜索和打开文件。</p>
</div>
<p>默认情况下，VS Code 从资源管理器中排除某些文件夹(例如 .git)。使用 <code>files.exclude</code> 设置可配置用于从资源管理器隐藏文件和文件夹的规则。</p>
<div><p>提示</p>
<p>这对于隐藏派生的资源文件非常有用，例如 Unity 中的 <code>*.meta</code> 、TypeScript 项目中的 <code>*.js</code>。为了使 Unity 排除 <code>*.cs.meta</code> 文件，要选择的模式是: <code>&quot;**/*.cs.meta&quot;: true</code>。对于 TypeScript，可以使用以下命令排除为 TypeScript 文件生成的 JavaScript: <code>&quot;**/*.js&quot;: {&quot;when&quot;: &quot;$(basename).ts&quot;}</code>。</p>
</div>
<h3 id="多选" tabindex="-1"> 多选</h3>
<p>您可以在 <strong>文件资源管理器</strong> 和 <strong>打开的编辑器</strong> 视图中选择多个文件，以对多个项目运行动作( <strong>删除</strong>，<strong>拖放</strong>，<strong>在侧边打开</strong>)。使用 Ctrl / Cmd 键和单击选择单个文件，使用 <code>Shift + click</code> 选择范围。如果选择两个项目，则现在可以使用上下文菜单 <strong>将已选项进行比较</strong> 来快速比较两个文件。</p>
<h3 id="过滤文档树" tabindex="-1"> 过滤文档树</h3>
<p>您可以在文件资源管理器中键入以过滤当前可见的文件。以 <strong>文件资源管理器</strong> 为重点，开始键入要匹配的文件名的一部分。您将在文件资源管理器的右上方看到一个过滤器框，其中显示了您到目前为止所键入的内容，并且匹配的文件名将突出显示。当您按下光标键上下移动文件列表时，它将在匹配的文件或文件夹之间跳转。</p>
<p>将鼠标悬停在过滤器框上并选择 <strong>启用输入时筛选</strong> 将仅显示匹配的文件/文件夹。使用 <strong>X</strong> 清除按钮清除过滤器。</p>
<p><img src="@source/software/vscode/assets/filter-files.png" alt="在文件资源管理器中过滤文件"></p>
<h3 id="大纲视图" tabindex="-1"> 大纲视图</h3>
<p>大纲视图是文件资源管理器底部的单独部分。展开后，它将显示当前活动的编辑器的符号树。</p>
<p><img src="@source/software/vscode/assets/outline-view.png" alt="大纲视图"></p>
<p>大纲视图具有不同的 <strong>排序依据</strong> 模式，可选的光标跟踪，并支持通常的打开手势。它还包括一个输入框，可在您键入时查找或过滤符号。错误和警告也显示在 <strong>大纲</strong> 视图中，使您可以快速查看问题的位置。</p>
<p>该视图依赖于已安装的扩展针对不同文件类型计算出的信息来显示符号。例如，内置的 Markdown 支持会返回 Markdown 标题层次结构。</p>
<p>有几种 <strong>大纲</strong> 视图设置，可用于启用/禁用图标以及控制错误和警告显示(默认情况下全部启用):</p>
<ul>
<li><code>outline.icons</code>: 切换带有图标的渲染轮廓元素。</li>
<li><code>outline.problems.enabled</code>: 在大纲元素上显示错误和警告。</li>
<li><code>outline.problems.badges</code>: 切换使用徽章的错误和警告。</li>
<li><code>outline.problems.colors</code>: 切换颜色使用错误和警告。</li>
</ul>
<h2 id="打开的编辑器" tabindex="-1"> 打开的编辑器</h2>
<p>在资源管理器的顶部是一个标记为 <strong>打开的编辑器</strong> 的视图。这是活动文件或预览的列表。这些是您以前使用 VS Code 打开的文件。例如，如果您执行以下操作，文件将在 <strong>打开的编辑器</strong> 视图中列出:</p>
<ul>
<li>更改文件。</li>
<li>双击文件的标题。</li>
<li>在资源管理器中双击一个文件。</li>
<li>打开一个不属于当前文件夹的文件。</li>
</ul>
<p>只需在 <strong>打开的编辑器</strong> 中单击一个项目，该项目就会在 VS Code 中变为活动状态。</p>
<p>完成任务后，可以从 <strong>打开的编辑器</strong> 中单独删除文件，也可以使用 <strong>关闭所有编辑器</strong> 按钮来关闭所有文件。</p>
<h2 id="查看" tabindex="-1"> 查看</h2>
<p>文件浏览器只是 VS Code 中可用的视图之一。也有以下视图:</p>
<ul>
<li>搜索: 提供全局搜索并在打开的文件夹中进行替换。</li>
<li>源代码控制: VS Code 默认包含 Git 源代码控制。</li>
<li>运行: VS Code 的运行和调试视图显示变量，调用堆栈和断点。</li>
<li>扩展: 在 VS Code 中安装和管理扩展。</li>
<li>自定义视图: 扩展贡献的视图。</li>
</ul>
<div><p>提示</p>
<p>您可以使用 <strong>查看 &gt; 打开视图</strong> 命令打开任何视图。</p>
</div>
<p><img src="@source/software/vscode/assets/outline-view.png" alt="打开视图"></p>
<p>您可以在主视图中显示或隐藏视图，也可以通过拖放对其进行重新排序。</p>
<h3 id="任务栏" tabindex="-1"> 任务栏</h3>
<p>左侧的任务栏使您可以在视图之间快速切换。您还可以通过将视图拖放到任务栏上来重新排列视图，或完全删除视图(右键单击 &gt; 隐藏)。</p>
<p><img src="@source/software/vscode/assets/activity-bar.png" alt="任务栏"></p>
<h2 id="命令面板" tabindex="-1"> 命令面板</h2>
<p>同样可以从键盘访问 VS Code。要知道的最重要的组合键是 <code>Ctrl + Shift + P</code>，它会弹出 Command Palette。从这里，您可以访问 VS Code 的所有功能，包括最常用操作的键盘快捷键。</p>
<p><img src="@source/software/vscode/assets/command-palette.png" alt="命令面板"></p>
<p>该命令面板提供了访问很多命令。您可以使用相同的交互式窗口执行编辑器命令，打开文件，搜索符号以及查看文件的快速轮廓。这里有一些提示:</p>
<ul>
<li><code>Ctrl + P</code> 将允许您通过键入文件或符号的名称来导航到任何文件或符号</li>
<li><code>Ctrl + Tab</code> 将使您循环浏览打开的最后一组文件</li>
<li><code>Ctrl + Shift + P</code> 将直接带您进入编辑器命令</li>
<li><code>Ctrl + Shift + O</code> 将让您导航到文件中的特定符号</li>
<li><code>Ctrl + G</code> 将允许您导航到文件中的特定行</li>
</ul>
<p>在输入字段中键入 <code>?</code> 以获取可以从此处执行的可用命令的列表:</p>
<p><img src="@source/software/vscode/assets/help.png" alt="快速打开帮助"></p>
<h2 id="配置编辑器" tabindex="-1"> 配置编辑器</h2>
<p>VS Code 提供了许多用于配置编辑器的选项。在 <strong>查看</strong> 菜单中，您可以隐藏或切换用户界面的各个部分，例如侧栏，状态栏和任务栏。</p>
<h3 id="隐藏菜单栏-windows-和-linux" tabindex="-1"> 隐藏菜单栏(Windows 和 Linux)</h3>
<p>您可以使用 <strong>查看 &gt; 外观</strong> 命令隐藏 Windows 和 Linux 上的菜单栏。您仍然可以通过按 Alt 键(<code>window.menuBarVisibility</code> 设置)来访问菜单栏。</p>
<h3 id="设置" tabindex="-1"> 设置</h3>
<p>大多数编辑器配置保留在可以直接修改的设置中。您可以通过用户设置全局设置选项，也可以通过工作区设置针对每个项目/文件夹设置选项。设置值保存在 <code>settings.json</code> 文件中。</p>
<ul>
<li>选择 <strong>文件 &gt; 首选项 &gt; 设置</strong>(或按 <code>Ctrl + ,</code>) 来编辑用户 settings.json 文件。</li>
<li>要编辑工作区的设置，请选择 <strong>工作区设置</strong> 选项卡以编辑工作空间 settings.json 文件。</li>
</ul>
<p>您将在左侧窗口中看到 <strong>VS Code 默认设置</strong>，而 settings.json 在右侧则可编辑。您可以使用顶部的搜索框轻松过滤设置。<code>settings.json</code> 通过单击设置左侧的编辑图标，将设置复制到右侧的可编辑内容。具有固定值集的设置允许您选择一个值作为其编辑图标菜单的一部分。</p>
<p>编辑设置后，键入 <code>Ctrl + S</code> 保存更改。所做的更改将立即生效。</p>
<div><p>提示</p>
<p>工作区设置将覆盖用户设置，对于在团队中共享项目特定的设置很有用。</p>
</div>
<h3 id="禅模式" tabindex="-1"> 禅模式</h3>
<p>通过 Zen 模式，您可以隐藏除编辑器之外的所有 UI(没有任务栏，状态栏，侧边栏和面板)，然后全屏显示并集中编辑器布局，从而专注于代码。可以使用 <strong>查看</strong> 菜单，<strong>命令面板</strong> 或快捷键 <code>Ctrl + K Z</code> 来切换 Zen 模式。双击 <code>Esc</code> 退出 Zen 模式。可以通过 <code>zenMode.fullScreen</code> 禁用向全屏过渡。禅模式可以通过下面的设置来进一步调整: <code>zenMode.hideStatusBar</code>，<code>zenMode.hideTabs</code>，<code>zenMode.fullScreen</code>，<code>zenMode.restore</code> 和 <code>zenMode.centerLayout</code>。</p>
<h3 id="中心编辑布局" tabindex="-1"> 中心编辑布局</h3>
<p>居中的编辑器布局使您可以居中对齐编辑器区域。在大型监视器上使用单个编辑器时，这特别有用。您可以使用侧面的窗框调整视图的大小(按住 Alt 键以独立移动窗框)。</p>
<h2 id="选项卡" tabindex="-1"> 选项卡</h2>
<p>Visual Studio Code 在编辑器上方的标题区域中显示带有选项卡(带选项卡的标题)的打开的项目。</p>
<p>当您打开文件时，将为该文件添加一个新的选项卡。</p>
<p>选项卡使您可以在项目之间快速导航，并且可以拖放选项卡来重新排序它们。</p>
<p>如果打开的项目超出标题区域的容纳范围，则可以使用 <strong>显示打开的编辑器</strong> 命令(可通过 <code>...</code> 更多按钮使用)来显示选项卡式项目的下拉列表。</p>
<h3 id="tab-顺序" tabindex="-1"> tab 顺序</h3>
<p>默认情况下，新标签页会添加到现有标签页的右侧，但是您可以在设置中使用 <code>workbench.editor.openPositioning</code> 控制新标签页的显示位置。</p>
<p>例如，您可能希望新的选项卡式项目显示在左侧:</p>
<div><pre><code>    <span>"workbench.editor.openPositioning"</span><span>:</span> <span>"left"</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><h2 id="预览模式" tabindex="-1"> 预览模式</h2>
<p>在资源管理器中单击或选择一个文件时，该文件以预览模式显示，并重复使用现有的选项卡。如果您正在快速浏览文件并且不希望每个访问的文件都有其自己的选项卡，则此功能很有用。当您开始编辑文件或使用双击从资源管理器中打开文件时，新的选项卡将专用于该文件。</p>
<p>预览模式在选项卡标题中以斜体表示:</p>
<p><img src="@source/software/vscode/assets/preview-mode.png" alt="预览模式"></p>
<p>如果您不想使用预览模式而总是创建一个新的选项卡，则可以使用以下设置来控制行为:</p>
<ul>
<li><code>workbench.editor.enablePreview</code>: 全局启用或禁用预览编辑器</li>
<li><code>workbench.editor.enablePreviewFromQuickOpen</code>: 从快速打开中启用或禁用预览编辑器</li>
</ul>
<h2 id="编辑器组" tabindex="-1"> 编辑器组</h2>
<p>拆分编辑器时(使用 <strong>拆分编辑器</strong> 或 <strong>在侧边打开</strong> 命令)，将创建一个新的编辑器区域，该区域可以容纳一组项目。您可以在垂直和水平方向上并排打开任意多个编辑器区域。</p>
<p>您可以在资源管理器视图顶部的 <strong>打开的编辑器</strong> 部分中清楚地看到这些内容:</p>
<p><img src="@source/software/vscode/assets/editor-group.png" alt="标签编辑器组"></p>
<p>您可以在工作台上拖放编辑器组，在组之间移动单个 Tab，然后快速关闭整个组( <strong>全部关闭</strong>)。</p>
<div><p>提示</p>
<p>无论您是否启用了选项卡，VS Code 都会使用编辑器组。如果没有选项卡，则编辑器组是您打开的项目的堆栈，在编辑器窗格中可见最近选择的项目。</p>
</div>
<h2 id="网格编辑器布局" tabindex="-1"> 网格编辑器布局</h2>
<p>默认情况下，编辑器组以垂直列布局(例如，当您拆分一个编辑器以将其打开到侧面时)。您可以轻松按自己喜欢的任何布局(垂直和水平)排列编辑器组:</p>
<p>为了支持灵活的布局，您可以创建空的编辑器组。默认情况下，关闭编辑器组的最后一个编辑器也会关闭该组本身，但是您可以使用新设置 <code>workbench.editor.closeEmptyGroups: false</code> 更改此行为。</p>
<p>在 <strong>查看 &gt; 编辑器布局</strong> 菜单中有一组预定义的编辑器布局。</p>
<p>默认情况下，打开到一侧的编辑器(例如，通过单击编辑器工具栏的 <strong>向右拆分编辑器</strong> 操作)将打开到活动编辑器的右侧。如果您希望在活动的编辑器下面打开编辑器，请配置新设置 <code>workbench.editor.openSideBySideDirection: down</code>。</p>
<p>有许多键盘命令可用于仅使用键盘来调整编辑器布局，但是如果您更喜欢使用鼠标，则拖放是将编辑器按任何方向划分的快速方法:</p>
<p><img src="@source/software/vscode/assets/drag-editor.gif" alt="网格编辑器拖放"></p>
<div><p>提示</p>
<p>如果在将鼠标悬停在工具栏上以拆分编辑器时按住 Alt 键，它将提供拆分为其他方向的功能。这是在右侧或底部拆分的快速方法。</p>
</div>
<h3 id="键盘快捷键" tabindex="-1"> 键盘快捷键</h3>
<p>这是一些方便的键盘快捷键，可在编辑器和编辑器组之间快速导航。</p>
<ul>
<li><code>Ctrl + PageDown</code>: 转到右侧的编辑器。</li>
<li><code>Ctrl + PageUp</code>: 转到左侧的编辑器。</li>
<li><code>Ctrl + Tab</code>: 打开编辑器组 MRU 列表中的上一个编辑器。</li>
<li><code>Ctrl + 1</code>: 转到最左边的编辑器组。</li>
<li><code>Ctrl + 2</code>: 转到中心编辑器组。</li>
<li><code>Ctrl + 3</code>: 转到最右边的编辑器组。</li>
<li><code>Ctrl + F4</code>: 关闭活动的编辑器。</li>
<li><code>Ctrl + K W</code>: 关闭编辑器组中的所有编辑器。</li>
<li><code>Ctrl + K Ctrl + W</code>: 关闭所有编辑器。</li>
</ul>
<h2 id="窗口管理" tabindex="-1"> 窗口管理</h2>
<p>VS Code 提供了一些选项来控制在会话之间应如何打开或还原窗口(实例)。</p>
<p><code>window.openFoldersInNewWindow</code> 和 <code>window.openFilesInNewWindow</code> 设置提供在打开新的窗口或者是在最后一个活动的窗口中打开文件或文件夹，可能得值有 <code>default</code>，<code>on</code> 和 <code>off</code>。</p>
<p>如果配置为 <code>default</code>，我们将根据发出打开请求的上下文来对是否重用窗口进行最佳猜测。将此设置为 <code>on</code> 或 <code>off</code> 始终表现相同。例如，如果您认为从 <strong>文件</strong> 菜单中选择文件或文件夹应始终打开到新窗口，请将其设置为 <code>on</code>。</p>
<p><code>window.restoreWindows</code> 设置告诉 VS Code 如何还原上一个会话的打开的窗口。默认情况下，VS Code 将还原您在上一个会话中使用过的所有窗口(设置为 <code>all</code> )。将此设置更改 <code>none</code> 为从不重新打开任何窗口，并始终以空的 VS Code 实例开头。更改为 <code>one</code> 则重新打开您上次打开的窗口的最后一个。</p>
]]></content:encoded>
    </item>
    <item>
      <title>显示文件后缀名与隐藏文件</title>
      <link>https://mrhope.site/code/windows/hidden-file.html</link>
      <guid>https://mrhope.site/code/windows/hidden-file.html</guid>
      <source url="https://mrhope.site/rss.xml">显示文件后缀名与隐藏文件</source>
      <category>基础</category>
      <pubDate>Tue, 15 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>显示文件后缀名与隐藏文件</p>
<p><img src="@source/code/windows/assets/hidden-file.png" alt="如何显示隐藏的文件与文件夹"></p>
]]></content:encoded>
    </item>
    <item>
      <title>图标绘制流程</title>
      <link>https://mrhope.site/design/icon/draw.html</link>
      <guid>https://mrhope.site/design/icon/draw.html</guid>
      <source url="https://mrhope.site/rss.xml">图标绘制流程</source>
      <category>设计</category>
      <pubDate>Tue, 15 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="情绪板" tabindex="-1"> 情绪板</h2>
<p>情绪板是在执行一项设计操作之前非常重要的一个步骤，情绪板并不是像设计平台展示作品集里那样放几张图片，几个关键词，而是一套对接下来设计的一个风格走向定位。根据不同的用户人群，不同颜色的色彩情绪，不同产品的业务，将用户调研的结果，产品的背景进行总结与思考，定位接下来的设计风格。</p>
<h2 id="绘制流程" tabindex="-1"> 绘制流程</h2>
<h3 id="选取照片" tabindex="-1"> 选取照片</h3>
<p>观察生活，对想画的图标进行照片实物造型的提取。图标是对生活中事物的精简概括。利用现实照片作为设计参考可以让绘制出的图标更真实，辨识度更高，还可以做到差异化设计。</p>
<h3 id="造型勾勒" tabindex="-1"> 造型勾勒</h3>
<p>使用矢量软件的基本图形与钢笔工具描着照片进行轮廓的绘制。</p>
<h3 id="简化优化" tabindex="-1"> 简化优化</h3>
<p>简化草稿轮廓的结构，只保留一个物体的主要特点元素，删除多余元素。优化图标细节，需要时将图标线性转面性。</p>
<h3 id="业务属性" tabindex="-1"> 业务属性</h3>
<p>根据业务需要，调整图标风格，添加质感。</p>
<p><img src="@source/design/icon/assets/design-step.jpg" alt="图标制作流程"></p>
<h2 id="制定规范" tabindex="-1"> 制定规范</h2>
<p>无规矩不成方圆，规矩的出现可以让一切杂乱的东西变得合理，统一起来。在设计上也是如此，规范具有统一输出，指引细节、便于查看的好处，规范就是一组图标中的规矩，所有图标的绘制都按照规矩来，最终的成品就会显得井然有序。</p>
<p>在制定规范时，通常先绘制出一个符合业务风格的图标，然后根据这一个图标定制后续的图标规范，最基本的规范便是描边宽度，断点位置、圆角大小，主色辅色，渐变角度，点缀元素，光影角度等，在一组中的图标需要在这些图形属性中进行统一，这样的图标虽然形状不一样但是在视觉上看起来是属于同一合集的。</p>
<p>制定规范一般分为三个过程:</p>
<ul>
<li>拆分细节: 将图标中的细节元素进行分解，在规范中制定细节元素的使用法则。</li>
<li>风格定位: 根据产品调性，业务属性在规范中制定相应的色彩心理、质感风格。</li>
<li>功能划分: 功能相近的包括色彩、质感应该采取相近性。</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>图标设计准则</title>
      <link>https://mrhope.site/design/icon/rule.html</link>
      <guid>https://mrhope.site/design/icon/rule.html</guid>
      <source url="https://mrhope.site/rss.xml">图标设计准则</source>
      <description>规范是图标设计的重点。
</description>
      <category>设计</category>
      <pubDate>Tue, 15 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>规范是图标设计的重点。</p>

<p><img src="@source/design/icon/assets/type.jpg" alt="三种主要类型的图标"></p>
<h2 id="表意的准确" tabindex="-1"> 表意的准确</h2>
<p>第一部分已经介绍了图标的主要作用之一就是作为文字的替代品，具有明确的寓意。比如看见一个放大镜，大家会当成那是搜索；看见钥匙或者锁，大家就会理解成是密码。</p>
<p>下面这些图标，每一个指代的功能和寓意都是非常直白和清晰的。</p>
<p><img src="@source/design/icon/assets/meaning.jpg" alt="寓意明确的图标"></p>
<p>表达的寓意清晰，是图标最基本的要求，否则它只会传递错误的信息，造成用户的困惑。</p>
<p>在常见的图标类型里，如通知、设置、用户和分享之类的图标，对于任何手机用户来说都没有认知和选择压力。但表意准确麻烦的地方在于，一些非常规的寓意，极难用图标表现出来，这才是使用线性图标的首要麻烦。</p>
<p>比如下方这些图标，如果不加上文字信息，大家能理解它们是什么吗?</p>
<p><img src="@source/design/icon/assets/without-text.jpg" alt="无文字信息"></p>
<p>那么，再把文字信息补充进去，是不是就会觉得图形挺贴合内容的?</p>
<p><img src="@source/design/icon/assets/with-text.jpg" alt="有文字信息"></p>
<p>在这种案例中，需要要关注的就是，面对这样不常见的内容，设计师是怎么把图形的创意和样式想出来的，如果自己遇到一样的问题怎么办?</p>
<p>所以，除了知道每个图标都要表意准确之后，该如何通过合适的创意将图标样式确定出来?</p>
<p>一般抽象的图标，难点在于寓意信息是非实体的，很难直接构建对图形样式的联想，所以办法就是将抽象的内容「实体化」。也就是说，可以先把这个词写到纸上，把和这个抽象信息相关的所有实体物写下来。</p>
<p><img src="@source/design/icon/assets/to-goods.jpg" alt="实体化扩展"></p>
<p>之后可以挑选出某个合适的实物，以它作为原型开始绘制。如果对挑选出来的实物要以什么图形表现还没概念，那么就可以借助网上的图标素材网站，比如 iconfont、iconfinder 等，在搜索框中输入这些词语，通过别人的设计获取灵感。</p>
<p><img src="@source/design/icon/assets/iconfont.jpg" alt="Iconfont"></p>
<p>如果本身拥有比较好的手绘基础或是平面基础，也可以直接通过对照片进行提炼的方式，设计出图形内容。</p>
<p>所以，在设计图标时要符合表意准确的概念，需要设计师不断收集图形，并提升对词汇联想的能力。很多优秀的创意，就是在这些基础的积累之上逐渐形成的，而不是一蹴而就。</p>
<h2 id="图标的一致性" tabindex="-1"> 图标的一致性</h2>
<p>第二个规范，叫图标的一致性。即一个或一套图标中，应该保持一致的细节。首先看看下面的反面案例:</p>
<p><img src="@source/design/icon/assets/unconst.jpg" alt="不一致的图标"></p>
<p>在上面的案例中，不同图标间有很大的割裂感，完全不像处于同一套设计体系之下，这就是缺乏一致性的表现。这也是新手在设计一整套图标最大的难点，要让所有图标保持视觉细节上的一致。</p>
<p>那么，图标要保持视觉一致性有哪些细节呢?</p>
<h3 id="类型一致" tabindex="-1"> 类型一致</h3>
<p>前面说过，图标有线性的和填充的类型，在正常的情况中，同一套图标应该保持相同的类型，如果使用了线性图标那么后续就不要设计填充以及混合的类型。</p>
<p><img src="@source/design/icon/assets/same-type.jpg" alt="类型一致"></p>
<h3 id="风格一致" tabindex="-1"> 风格一致</h3>
<p>每一套图标都有自己的设计风格，不同风格在细节中都有不同的表现，需要让这些风格特征保持高度统一，看看下面这些案例。</p>
<p>第一，为图标添加缺口的设计风格，不过要保证这个缺口的大小是一致的，并且每一个图标中有且只有一个缺口，而不是靠感觉随意添加。</p>
<p><img src="@source/design/icon/assets/add-gap.jpg" alt="添加缺口"></p>
<p>第二，在设计一套偏圆润可爱的设计风格中，外轮廓使用了较大的圆角，那么应当尽可能保证圆角的大小是一致的，而不是有的用 4pt，有的用 2pt 或者直接使用直角。</p>
<p><img src="@source/design/icon/assets/make-round.jpg" alt="使用圆角"></p>
<p>第三，采用了填充色偏移的设计风格，首先要保证填充色一致，并且偏移的距离和方向也要保持固定的规律，不能随喜好任意制定。</p>
<p><img src="@source/design/icon/assets/fill-color.jpg" alt="填充色"></p>
<h3 id="透视一致" tabindex="-1"> 透视一致</h3>
<p>透视关系是在平面中对物体空间性质的表现方式，当图标应用了透视时，物体就有了一定的「立体感」。</p>
<p><img src="@source/design/icon/assets/3D.jpg" alt="立体感"></p>
<p>透视的表现不是绘制图标时必须使用的风格，但是如果在图标中应用了透视，就要确保使用的视角是一致的。要极力避免同一套图标中既用了正视图又包含了侧视图。</p>
<p><img src="@source/design/icon/assets/perspective.jpg" alt="不同视角"></p>
<h3 id="粗细一致" tabindex="-1"> 粗细一致</h3>
<p>在图标中会常常应用到矩形线段或是描边，应尽可能保证粗细一致。</p>
<p>比如，在线性的设计中，路径的描边尺寸要保持一致，不能这个图标用 2pt，那个图标用 1pt。</p>
<p><img src="@source/design/icon/assets/same-weight.jpg" alt="粗细一致"></p>
<p>在填充图标中，我们会在一个矩形或是圆形中增加矩形的镂空，比如下图的几个图标，在这种情况下也要保证它们的粗细是一致的，而不是各不相同。</p>
<p><img src="@source/design/icon/assets/same-weight2.jpg" alt="粗细一致2"></p>
<h3 id="大小一致" tabindex="-1"> 大小一致</h3>
<p>大小一致，就是让图标的视觉大小保持一致，而不是它们字面上的长宽属性保持一致。因为这是一个比较复杂的知识点，需要大家对几何图形的视觉差有比较完整的认识。这些和一致性有关的特征，是一套图标看起来专业、有整体感的必要条件。</p>
<p>但是，在真实的设计场景中需要灵活变通。如果有一些特定的图标，在保证了一致性的要求后却极难被人理解，且找不到更好的设计方式，就可以差别对待。比如在一套图标中，播放、快进等图标往往都是填充类型的，这并不会造成视觉或是使用上的困扰。</p>
<h2 id="几何图形的视觉差" tabindex="-1"> 几何图形的视觉差</h2>
<p>几何图形的视觉差，是对于图标来说最重要的细节，也是平面基础理论中不可忽视的内容，这个理论要解决一个核心的问题，即怎么让不同的图形看上去一样大?</p>
<p>可能大家有人会觉得这有什么难的? 通过软件的参考线或者属性设置，把它们的长宽设置成一样不就完事了。比如下图这样:</p>
<p><img src="@source/design/icon/assets/size-feel.jpg" alt="尺寸等大的几何形视觉大小并不一致"></p>
<p>画起来轻轻松松，参数上完美无缺。但是，怎么看上去这些图形大小有点不一样，为什么正方形看起来这么大，三角形看起来这么小?</p>
<p>这个问题的根源是，不同几何图形带给人们的视觉大小是不同的。而要解决这样的问题，就要对它们的尺寸做出额外的调整。比如下图这样:</p>
<p><img src="@source/design/icon/assets/size-adjust.jpg" alt="圆和三角需要进行放大修正"></p>
<p>适当调整完圆形和三角形以后，是不是觉得大小的感觉一致了? 这就要牵扯一个更基础的视觉规律，占据面积越大的图形，给人的视觉感受就越大，所以给人感受越小的元素，就要放得越大。</p>
<p>并且，这个问题在一个图形的内部也会产生影响，比如知乎 APP 下面的点赞和反对按钮，都有三角形图标，但图形其实对于外部矩形是非居中的。</p>
<p><img src="@source/design/icon/assets/weight-feel.jpg" alt="重心感觉"></p>
<p>如果一个图形其中一部分面积远大于另一部分，那么就会让这个图形的重心产生偏移，必须要往较小的部分的方向移动才能产生平衡。</p>
<p><img src="@source/design/icon/assets/weight-adjust.jpg" alt="调节重心"></p>
<p>所以，在设计一整套的应用中，如果没有对这个理论的理解，只定义一个矩形出来，把所有图形的尺寸与矩形对齐，那么最终看到的图标效果一定是极度不平衡的。</p>
<p><img src="@source/design/icon/assets/center-compare.jpg" alt="重心对比"></p>
<h2 id="图标栅格" tabindex="-1"> 图标栅格</h2>
<p>其实，针对图标的规范，大家可能第一个想到的应该就是参考线了，也就是所谓的栅格模板。之所以放在这里，是因为图标的栅格规范，是根据几何的视觉差特性衍生出来的。</p>
<p>下面是常见的图标栅格:</p>
<p><img src="@source/design/icon/assets/grid.jpg" alt="栅格"></p>
<p>里面包含了正方形、长方形和圆形。将它们分别罗列出来，可以发现这些图形的视觉尺寸是非常接近的。这样通过该尺寸设计对应的图形，也就看起来都一样大了。</p>
<p><img src="@source/design/icon/assets/grid-compare.jpg" alt="栅格对比"></p>
<p>所以，应用图标的栅格系统对于图标的设计来说，是一个用来应对几何图形视觉差的「参照物」。</p>
<p>之所以要说参照物，原因在于一套图标不会只存在这几种图形的样式，还有很多千奇百怪的形状，但大体上我们可以识别出来它的类似轮廓或者重心方向，于是就可以通过参照图形来判断设计出来的图形尺寸是否符合标准。</p>
<p>如果设计图形和参照图形类似，那么尺寸就不能大于参照图形；如果设计图形的宽大于参照图，那么高就要小于参照图，反之亦然。如果图形的重心有偏移，那就要往重心偏移的反方向移动，比如搜索按钮，Wi-Fi 图标等。</p>
<p><img src="@source/design/icon/assets/grid-usage.jpg" alt="栅格使用"></p>
<p>最后，说说栅格系统的画法，和大家想象的不一样，想要画一套图标，栅格系统是自己画出来的，不是到网上下载下来的，所以怎么画也是这个知识的重点。</p>
<ol>
<li>如何绘制图标栅格系统</li>
</ol>
<p>如果定义一套 28pt 的图标，那么首先要画一个 28pt 的正方形，然后确定一个 2 - 4pt 的内边距，正所谓四边留一线，日后好相见。</p>
<p><img src="@source/design/icon/assets/grid-guide1.jpg" alt="步骤1"></p>
<p>然后就要开始在其中绘制正方形和圆形，正方形通常在整个图标尺寸 1/2 的比例，可以使用 14 或 16 的偶数(为了可以居中)。然后再确定圆形的尺寸，圆肯定比正方形大 2 - 4pt，于是就得到下方的图形。</p>
<p><img src="@source/design/icon/assets/grid-guide2.jpg" alt="步骤2"></p>
<p>之后，再确定横竖长方形的尺寸，可以直接顶到内边距的边缘。它的尺寸不是通过数值计算的，而是要先画出来，把它们和前面的圆和正方形置于一条水平线上，调整出一个平衡的视觉尺寸，再合并进栅格系统中，就完成了栅格系统的绘制，如下图的案例。</p>
<p><img src="@source/design/icon/assets/grid-guide3.jpg" alt="步骤3"></p>
<p>这一步也旨在检查参考线系统是否在基础结构上经得起考验，是非常关键的一步。因为不同尺寸的图标中，参考线系统都是有区别的，不能直接按一个固定的比例来设置，要根据实际场景做判断。</p>
<div><p>栅格素材</p>
<p>此处有一套现成的栅格素材，包含 16、24、28、32、36、48 等六个尺寸。</p>
<ul>
<li><a href="https://mrhope.site/file/design/tool-grid.ai" target="_blank" rel="noopener noreferrer">工具栅格下载<ExternalLinkIcon/></a></li>
</ul>
</div>
<h2 id="像素对齐" tabindex="-1"> 像素对齐</h2>
<p>在栅格的绘制中，如果您足够信心，您肯定发现了几个关键字，「对齐」、「偶数」，这就是在这一部分要提及的内容。关于显示器的倍率问题是 UI 基础知识点之一，可能有的同学不太了解，不过没关系，直接看下面的内容即可。</p>
<p>大家都知道像素是屏幕显示中的最小单位，一个像素只能显示一种颜色。小时候玩过的 GBA 和 FC 游戏机，都是通过像素画的形式呈现，人物锯齿是无法避免的。</p>
<p><img src="@source/design/icon/assets/old-game.jpg" alt="老游戏"></p>
<p>而随着技术发展，像素密度是降低了，但如果依旧是按过去这种一个萝卜一个坑的方式显示内容，那锯齿感无论如何是无法消除的。于是，开发了次像素渲染(Subpixel Rendering)的技术。一个在显示器中让人们觉得平滑的圆，一直放大，就可以发现它的周边充满了饱和度较低的其它方块色彩。</p>
<p><img src="@source/design/icon/assets/subpixel-rendering.jpg" alt="子像素渲染"></p>
<p>这项技术，让像素可以用特有的方式来显示非完整的色块，即尽可能还原设计师对元素定义的小数点。但为什么还要提这个概念呢?</p>
<p>因为工具的图标太小了，而且 UI 的元素对精细和准确度的要求都不低，如果没有尽可能满足像素对齐的要求，那么就可能导致元素边缘的模糊。</p>
<p><img src="@source/design/icon/assets/fuzzy.jpg" alt="模糊的边缘"></p>
<p>所以要满足像素对齐的要求，就要符合元素本身的尺寸为整数、描边为整数和 XY 轴坐标为整数的特性。</p>
<h3 id="ai-中的像素对齐设置" tabindex="-1"> AI 中的像素对齐设置</h3>
<p>在 AI 中，可以通过两个设定来查看和保证像素对齐，即网格的设置显示，以及对齐到点的设置。</p>
<p><img src="@source/design/icon/assets/AI-align.jpg" alt="AI 对齐"></p>
<p>像素的对齐主要表现在横线和竖线上，虽然现在手机显示精度越来越高，但并不意味着可以无视像素对齐的规律。在线性图标中，对于 1pt 或者 2pt 描边的应用，觉得不是太细就是太粗，可以用 1.5pt 的数值(1.5pt 在 2x 中就是 3px)，但切记不要出现类似 1.23、2.16、3.46 这种小数。</p>
<p>像素对齐是一个专业 UI 设计师对于极致追求的表现之一，是每一个一线大厂 UI 设计师的基本操作，所以，想要冲刺更高的段位，就不要忽视这个规范的使用。</p>
<h2 id="总结" tabindex="-1"> 总结</h2>
<ul>
<li>
<p>图标要表意准确，能被用户识别并契合想要表达的寓意。</p>
</li>
<li>
<p>设计整套图标的时候要符合一致性原则，包括类型、风格、粗细、透视、大小等特征。</p>
</li>
<li>
<p>不同的几何图形会给我们不同的大小视感，不能只看元素的参数。</p>
</li>
<li>
<p>栅格系统根据视觉差的方式定义出来，作为图标尺寸设定的重要参考。</p>
</li>
<li>
<p>图标的绘制要保证横竖的直线对齐到像素，图标尽量采用整数粗细，如果一定要用小数的话就使用 0.5 递进的。</p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>搜索框设计</title>
      <link>https://mrhope.site/design/interact/search.html</link>
      <guid>https://mrhope.site/design/interact/search.html</guid>
      <source url="https://mrhope.site/rss.xml">搜索框设计</source>
      <category>设计</category>
      <pubDate>Tue, 15 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>搜索框是我们最常用到的 UI 控件之一，它几乎存在于所有的网站和 APP 当中。许多人认为搜索框不需要设计，因为它似乎就是由两个最简单的元素构成的。在以内容为导向的网站中，搜索框的重要性会相对更明显，用户需要快速又无痛地找到他们想要的内容。而对于设计相对负责的网站而言，这个需求尤其明显。搜索框的可用性设计，是整个设计的关键，也就是如何让用户尽量节省时间，搜到他们想要的内容。</p>
<h2 id="使用放大镜图标" tabindex="-1"> 使用放大镜图标</h2>
<p>时至今日，搜索的概念和放大镜图标之间的关系已经深入人心，根深蒂固了。在日常最常用、最易于识别的几个图标当中，放大镜所带代表的搜索图标就是其中之一。</p>
<p><img src="@source/design/interact/assets/search-icon.png" alt="放大镜图标"></p>
<p>即使在没有文本标签标识的情况下，用户也能轻松地识别图标的含义。</p>
<div><p>提示</p>
<p>使用最简略直观的放大镜图标，细节越少，越容易识别。</p>
</div>
<h2 id="显眼的搜索输入框" tabindex="-1"> 显眼的搜索输入框</h2>
<p>如果搜索是您的网站或者 APP 的重要功能的话，您应当让搜索框足够显眼，这样的能设计让用户最快发现它的存在。</p>
<p><img src="@source/design/interact/assets/search-eye-catching.png" alt="显眼的搜索输入框"></p>
<p>左边: 搜索功能隐藏在图标之后</p>
<p>显示完整的文本输入框是很重要的，隐藏在按钮背后的输入框会让用户觉得不是那么明显，不容易被快速发现。需要点击之后用户才能看到。</p>
<p><img src="@source/design/interact/assets/search-using-icon.gif" alt="使用图标的搜索框"></p>
<div><p>提示</p>
<p>由于博客新用户通常会浏览博客的大致内容，而不会有目的性的搜索，所以移动视图下，博客的搜索也采用了这种设计</p>
</div>
<h2 id="提供搜索按钮" tabindex="-1"> 提供搜索按钮</h2>
<p>按钮的存在让用户能够明白搜索的触发方式——也就是说通过触发按钮来完成这一操作。</p>
<p><img src="@source/design/interact/assets/search-button.jpeg" alt="3、提供搜索按钮"></p>
<div><p>有效的建议</p>
<p>本博客由于采用了即时搜索，也就是会实时显示输入的搜索结果，所以并没有设置这个按钮</p>
<ul>
<li>控制搜索按钮的尺寸大小，让用户使用光标可以轻松找到并点击，让触发区域大小合适。</li>
<li>让用户可以通过回车键提交搜索，许多用户仍然有通过点击键盘按键来触发搜索的习惯。</li>
</ul>
</div>
<h2 id="每页都保留搜索输入框" tabindex="-1"> 每页都保留搜索输入框</h2>
<p>您应该为用户拥有在每个页面都能立刻进行搜索的权限，如果您的用户在特定的页面找不到他们想要的内容，可以立刻通过搜索获取内容，无论他在网站的哪个地方。</p>
<h2 id="让搜索框尽量简单" tabindex="-1"> 让搜索框尽量简单</h2>
<p>在您设计搜索框的时候，请尽量让它看起来就是一个搜索框，并且简单易用。可用性研究表明，默认没有显示高级选项的搜索框看起来更加友好，所以，通常情况下给用户提供的搜索框最好不要提供进阶的搜索选项。</p>
<p><img src="@source/design/interact/assets/advance-search.jpeg" alt="这可能会让新用户很困扰"></p>
<h2 id="让搜索框处于用户预期的位置" tabindex="-1"> 让搜索框处于用户预期的位置</h2>
<p>当用户想要搜索内容的时候还需要花费精力来寻找搜索框，这就非常尴尬了。这意味着搜索框本身就不容易被察觉。</p>
<p>下面这个图表来自 A. Dawn Shaikh 和 Keisi Lenz 的一项研究，它展示出了 142 名被调查者对于网站的搜索框的预期的位置。这项研究表明，网站的左上角和右上角是用户所期待的搜索框的位置，用户在使用 F 型扫视法查看内容的时候，可以轻松找到搜索框。</p>
<p><img src="@source/design/interact/assets/search-position.gif" alt="搜索框位置"></p>
<p>这份研究还表明，右上角的区域是用户搜寻输入框的首选区域。</p>
<p>因此，将输入框置于顶部靠右或者顶部居中的位置，用户会主动在这个地方寻找搜索框。</p>
<div><p>提示</p>
<p>本博客主题在 Desktop 模式下搜索栏即为居中设计，移动视图下置于右上角</p>
<ul>
<li>在理想情况下，搜索框的设计应当和整个网站的设计风格保持一致，同时在视觉上要略显突出，便于用户发觉它的存在。</li>
<li>如果网站的内容足够多，搜索框在设计上显著程度应该越高，如果搜索功能对于您的网站至关重要，那么您应该采用较大的对比度，确保输入框和按钮从背景中脱颖而出。</li>
</ul>
</div>
<h2 id="合理的输入框尺寸" tabindex="-1"> 合理的输入框尺寸</h2>
<p>输入框太小是最常见的搜索框设计错素，虽然用户可以输入比输入框更长的内容，但是可见的部分往往无法完全可见，这种设计的可用性并不强。这样的输入框可能因为可视范围的限制，促使用户使用短的、不精确的查询方式，因为更长的内容并不适合阅读。如果输入框能够符合用户的常见输入内容的尺寸来进行匹配，那么它的可用性会更强。</p>
<p>根据经验，输入框能够承载的最佳字符数量为 27 个，百分之 90 的搜索内容都在这个长度以内。</p>
<p><img src="@source/design/interact/assets/search-size.png" alt="合适的输入框长度"></p>
<p>小贴士: 建议考虑使用能根据输入长度增长而能变长的输入框，这不仅节省了屏幕空间，而且能够给予用户足够的视觉提示，并快速进入搜索环节。</p>
<p><img src="@source/design/interact/assets/search-expand.png" alt="长度增长的输入框"></p>
<h2 id="使用自动搜索建议机制" tabindex="-1"> 使用自动搜索建议机制</h2>
<p>自动建议机制能够帮助用户在输入的过程中，动态地预测正确的查询方向。自动建议并不会加快搜索的过程，但是能够帮助用户构建正确的搜索关键词/内容。普通用户在第一次搜索结果不理想的情况下，很少会继续进行尝试，而自动建议运作顺利的情况下，将会帮助用户更好的搜索。</p>
<p>谷歌搜索在这方面有着丰富的经验，自 2008 年开始，谷歌开始记录用户的搜索记录，并且通过这种方式节省时间，优化结果，创造更为优秀的体验。</p>
<div><p>提示</p>
<ul>
<li>确保您的自动搜索建议是有用的。不当的搜索建议内容可能会混淆和分散用户的注意力。尽量帮助用户更正拼写，识别词根，预测文本，并改进您的工具。</li>
<li>当用户开始输入之后，尽快开始给予用户建议，例如在第三个字符之后，为用户开始提供即时的、有价值的建议，降低用户的输入难度和工作量。</li>
<li>尽量为用户提供少于 10 个搜索结果，避免信息过载。</li>
<li>允许使用键盘进行交互，当用户使用方向键向下滚动到最后的条目之后，继续滚动会跳转到顶部的项目。允许用户使用 Esc 按键推出列表。</li>
<li>突出显示输入的信息和建议的信息之间的差异。</li>
</ul>
</div>
<p><img src="@source/design/interact/assets/auto-suggest.png" alt="自动搜索建议"></p>
<h2 id="让用户明白哪些可以搜索到" tabindex="-1"> 让用户明白哪些可以搜索到</h2>
<p>最好是在输入框中包含示例，这样可以向用户给予建议。如果用户可以输入多个关键词搜索，那么可以像下面的 IMDB 的网站一样给予建议。HTML5 可以轻松的实现在输入框内加入文本占位符。</p>
<p><img src="@source/design/interact/assets/search-hint.png" alt="搜索建议"></p>
<div><p>提示</p>
<p>建议的内容不宜过多，否则施加太多认知负荷给用户。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>导航设计教程</title>
      <link>https://mrhope.site/design/navigation/</link>
      <guid>https://mrhope.site/design/navigation/</guid>
      <source url="https://mrhope.site/rss.xml">导航设计教程</source>
      <category>设计</category>
      <pubDate>Tue, 15 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="目录" tabindex="-1"> 目录</h2>
<ul>
<li>
<p><a href="/design/navigation/intro.html">导航设计介绍</a></p>
</li>
<li>
<p><a href="/design/navigation/navbar.html">导航栏概述与设计方式</a></p>
</li>
<li>
<p><a href="/design/navigation/navbar-design.html">导航栏设计技巧</a></p>
</li>
<li>
<p><a href="/design/navigation/sidebar-navigate.html">侧边导航设计</a></p>
</li>
<li>
<p><a href="/design/navigation/tabbar.html">标签导航设计</a></p>
</li>
<li>
<p><a href="/design/navigation/tabbar-design.html">标签导航设计技巧</a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>导航设计介绍</title>
      <link>https://mrhope.site/design/navigation/intro.html</link>
      <guid>https://mrhope.site/design/navigation/intro.html</guid>
      <source url="https://mrhope.site/rss.xml">导航设计介绍</source>
      <category>设计</category>
      <pubDate>Tue, 15 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>其实网页或者 App 中的导航(Navigation)这个概念远不止我们熟悉的导航栏，而是一个更加广的交互概念: 引导用户和产品进行有效的交互，实现用户的目标。本文将详细地介绍界面的导航设计。</p>
<p>一个网页或 App 产品要想有很好的可用性(usability)，需要做好的最基本的一点是导航的设计或者说引导用户的设计。如果用户在使用一个网站或者 App 的时候找不到自己的处在什么位置或者该怎么去到想要的页面，那么视觉效果再怎么有创意或者抓人眼球都无法弥补产品的缺陷。无论您的产品想满足用户什么需求，让用户知道产品当下的状态和每一步操作之后的结果是对用户最基本的尊重。</p>
<h2 id="导航" tabindex="-1"> 导航</h2>
<p>首先，让我们弄清楚导航这个概念。最基本的含义就是在我们的现实世界中，当我们从一个地方到另一个地方，需要一些引导和指示。英文中 Navigation 这个词来源于拉丁文，原意就是: 操纵船只在海上航行。所以导航就是能够帮助我们到达目的地的行为。导航的其他意思都是建立在这个原意的基础上。</p>
<p>所以回到 UX／UI 设计上，导航毫无疑问是可用性的一个要点。它可以定义为一系列引导用户成功地与产品互动并且实现他们目标的动作组合或者技巧组合。用户带着他们的期望和目标来使用您的网站或者产品，作为设计师的您需要给他们提供实现他们目标的最好操作流程。因此当您的导航设计得非常高效，用户体验能得到极大的提升。</p>
<p>界面的导航(Navigation)是用户体验设计的核心之一。毫无疑问，如果您看不到路, 您就去不了您的目的地。用户现在正面对着越来越多的网站和 APP 产品。越来越多的选择会让用户期望这些产品具备符合他们使用习惯的导航设计。</p>
<p>在您刚开始设计您的界面时，就要思考怎么设计一个有效的无缝衔接的导航。通过一些可交互的元素，比如按钮(buttons)，开关(switches)，链接(links)，标签(tabs)，条(bas)，菜单(menus)，区域(fields)，让用户在不同的界面之间进行切换。</p>
<p>工作室的设计思路是，在界面设计的早期就全面地思考导航的设计，包括界面的布局，页面间如何切换，导航元素的放置和具体功能。并且通过低保真原型来进行验证，保证用户能清楚地理解所有重要的操作。如果跳过这一步，设计将有巨大的风险，其他事情有可能到头来都白干了。所以无论，对用户还是客户还是设计团队来讲，做好这最基础的部分是非常有好处的。</p>
<h2 id="菜单-menu" tabindex="-1"> 菜单(Menu)</h2>
<p>菜单是我们最熟悉的具备导航功能的元素，它向用户展示了界面的所有重要选项。基本上，它可以是用动词命名的一系列指令，用户可以用它来指示系统做出动作，像保存，删除等；它也可以是一个用名词命名的目录，用来代表不同内容的集合。</p>
<p>在界面设计中菜单可以放在不同的位置(侧边菜单，顶部菜单，底部菜单等)，拥有不同的交互和视觉形式(下拉菜单，上拉菜单，滑动菜单等)。要想设计好菜单的位置、交互和视觉形式，设计师需要经过全面的用户调查，包括目标用户的预期和要求、接受能力和使用情境。好的菜单设计能让用户更快地实现他们的目标，为用户体验打下坚实的基础。</p>
<p>博客的界面设计，采用了侧边菜单以及目录的形式，文字直接说明内容，再加上图标来做为辅助的视觉说明。</p>
<p><img src="@source/design/navigation/assets/color.jpg" alt="颜色的设计"></p>
<p>这个 UI 概念设计的例子很好的运用了颜色作为标记，这是一种很有效的导航技巧: 每个分类的背景色使用了和目录相同的的颜色，这样目录和内容有着非常强的相关性，用户能自然地将他们联系起来。</p>
<h2 id="行为召唤-cta" tabindex="-1"> 行为召唤(CTA)</h2>
<p>CTA 是用户行为召唤的简称(call to action)。CTA 简单来说就是指设计师通过设计，刺激用户去做出一些行动。相应的，CTA 元素就是指那些能刺激用户做出行动的交互元素。典型的 CTA 元素是按钮，标签或者链接。</p>
<p>不管在什么界面，CTA 元素都是高效的交互行为的核心，极大的关系到产品的可用性和导航有效性。如果 CTA 元素的设计不到位的话，用户会产生困惑并且得费劲地去尝试。产品的转化率和用户体验都会大打折扣。这就是为什么 CTA 元素特别值得注意。无论什么样的界面，它都必须是最瞩目的元素之一，用来直接地告诉用户怎么用这个产品。</p>
<p><img src="@source/design/navigation/assets/CTA-example.gif" alt="APP 案例"></p>
<p>一些 CTA 元素直接用图标形式而没有任何文字说明，但只适用于大家都熟知其含义的图标，比如听筒图标和信封图标。上图这个例子中，这个听筒图标就是这个界面中一个焦点，是一个典型的 CTA 元素，引导用户快速地实现他们的目标。不需要任何文字说明，用户也能懂点击这个图标的结果。</p>
<p>但是，如果一个图标的含义不是那么明显或者可能造成误解，最好还是加上文字说明。</p>
<p><img src="@source/design/navigation/assets/CTA-example.jpg" alt="网站着陆页"></p>
<p>上面这个例子是一个关于制作海鲜的网站的着陆页(Landing page)。页面的标题 let’s cook 还有食材照片是一个 CTA，但不是一个可交互的 CTA。可交互的 CTA 是下面这个红色按钮，用户点击这个按钮能看到更多关于不同主题和菜谱的信息。抓人眼球的颜色强调了页面的视觉层级关系，把用户的注意力拉到关键的交互区域中。</p>
<h2 id="条-bar" tabindex="-1"> 条(Bar)</h2>
<p>条(Bar)指的是界面中一组用户可以点击的元素，用来快速与产品进行互动，或者还能让用户知道事件的进程。</p>
<h3 id="标签条-bar" tabindex="-1"> 标签条(Bar)</h3>
<p>最基本的条是标签条(Tab bars)，常出现在 APP 界面的底部，让用户能在 APP 的不同模块间快速切换。</p>
<p><img src="@source/design/navigation/assets/tabbar.jpg" alt="Tabbar"></p>
<h3 id="载入条-loading-bar" tabindex="-1"> 载入条(Loading bar)</h3>
<p>载入条是用来告知某个动作的进展，用户可以通过时间、百分比或者其他信息了解整个过程。</p>
<div><p>提示</p>
<p>比如本博客在跳转新页面的时候导航栏下方就会出现载入条</p>
</div>
<h3 id="进度条-progress-bar" tabindex="-1"> 进度条(Progress bar)</h3>
<p>给用户提供反馈，让他们了解事件的进度，比如说计划的事情完成了多少。</p>
<div><p>提示</p>
<p>最常见的就是音乐和视频 APP</p>
</div>
<h2 id="按钮-button" tabindex="-1"> 按钮(Button)</h2>
<p>按钮应该是用得最多的元素了。按钮能让用户在对系统发出指令后得到恰当的反馈。用户通过按钮对系统下命令，跟系统进行交互从而实现他们某个目标，比如发送邮件，买一个东西，下载文件，播放音乐等等这样的指令。按钮之所以那么的常用和对用户那么友好，是因为按钮很好地模仿了人和真实世界里跟物品的交互。</p>
<p>现如今的 UI 按钮有不计其数的设计样式，能满足很多的设计需求。按钮典型的用途是表明这个地方是可点击，因此需要具有非常高的视觉识别，有着特定的形状还有文字说明它能实现什么动作。设计师通常需要花不少时间好好考虑怎么让按钮很好地融合界面的风格，同时又能在视觉上跳脱出来。</p>
<p><img src="@source/design/navigation/assets/404.jpg" alt="404 页面"></p>
<hr>
<p>以下是在 APP 和网页设计中常用的几种具备附加功能的按钮。</p>
<h3 id="汉堡按钮" tabindex="-1"> 汉堡按钮</h3>
<p>汉堡按钮隐藏着一个菜单。当用户点击他们的时候，能把菜单调出来。有这个名字是因为它是由三条水平线组成的，看起来就像是汉堡的形式。它是一个典型的交互元素，也是颇具争议的元素。</p>
<p>大多数用户知道点击这个按钮能展开一个菜单，所以不需要额外的说明。汉堡菜单极大地节省了界面的空间，能让界面看起来更简洁，也为其他重要的界面元素腾出了必要的空间。它同时非常适合响应式设计，通过隐藏菜单让整个设计更统一，界面能在不同设备间保持一致。尽管它因为一些缺点而饱受争议，但因为这极大的好处，它目前仍然被广泛的使用。关于这个元素的主要诟病是，对于一些对界面不太熟悉的用户来说，这个比较抽象的设计元素可能会让他们产生困惑。所以，在决定使用汉堡菜单前，应该调查一下目标用户的接受程度和他们的需求。</p>
<div><p>提示</p>
<p>我的博客在移动视图下左上角就应用了汉堡按钮</p>
</div>
<h3 id="加号按钮-plus-button" tabindex="-1"> 加号按钮(Plus button)</h3>
<p>一般通过这个按钮，用户可以实现添加某个内容的动作，比如添加新的联系人，状态，笔记，位置等所有用户在产品里能做的基本动作。有时候，点击这个按钮会出现新的窗口。有时候还会出现一些选项供用户进行选择添加什么内容，这取决于是什么产品。</p>
<p><img src="@source/design/navigation/assets/plus-button.jpg" alt="加号按钮"></p>
<p>上面这个例子就是用户在点击加号按钮后出现了可以选择添加的内容(图片，视频，文字)，在选择了之后才会弹出添加内容的窗口。尽管这个操作可能增加一些额外的交互动作，但因为给予了用户选择空间，所以还是对用户很友好的一种设计。</p>
<h3 id="分享按钮-share-button" tabindex="-1"> 分享按钮(Share Button)</h3>
<p>分享按钮顾名思义就是能让用户把内容分享到他们的社交平台账号上。大多数情况下，这个按钮都是用社交平台的 Logo 作为视觉形象，这样非常易于识别和认知。</p>
<div><p>提示</p>
<p>比如 in 东师小程序大部分页面都会在右下角展示分享浮窗</p>
</div>
<h2 id="开关-switch" tabindex="-1"> 开关(Switch)</h2>
<p>同样，这也是一个用户非常好理解的元素，在界面中用得也非常多。因为它很好地模仿了现实世界里人们熟悉的开关概念。关于这个元素的设计，特别要注意的是开和关的状态在视觉上要差别非常明显。这样能避免用户花时间去研究怎样是开怎样是关。很多种的形式对比或者切换动画都可以解决这个问题，从而设计出很好的用户体验。</p>
<p><img src="@source/design/navigation/assets/switch.gif" alt="开关案例"></p>
<p>这个案例是来自一款闹钟应用 Toonie。动画效果让交互变得更流畅和自然，同时整个控件颜色的改变和滑动元素形态的变化让用户能够轻易地识别出开关的状态。如果您想了解整个 App 的案例研究，可以到来源查看。</p>
<div><p>提示</p>
<p>我的主题 vuepress-theme-hope 也有一款很棒的主题模式切换开关，需将 <code>darkmode</code> 设置为 <code>'switch'</code> 即可查看</p>
</div>
<h2 id="选择器-picker" tabindex="-1"> 选择器(Picker)</h2>
<p>也很好理解，就是让用户在一些选项里选出目标选项。通常包含一个可滑动的列表，上面是一列数值，比如小时，分钟，日期，度量，币种等等。通过滑动列表，用户可以选定想要的数值。这个元素广泛地应用在有时间设定这个功能的界面设计上。</p>
<p><img src="@source/design/navigation/assets/picker.gif" alt="选择器案例"></p>
<h2 id="复选框-checkbox" tabindex="-1"> 复选框(Checkbox)</h2>
<p>复选框是可以用来同时标记多个特定的内容。同样的，也是借用了我们在现实世界里熟悉的概念。我们在考试的时候，或者填调查问卷的时候会在选项前的小方框里涂上颜色作为选中的标记。和开关一样，复选框同样用得很多，主要在设置页面设计里。不过，复选框还有另外一个用得比较多的地方，那就是含有任务管理，待办事项，时间记录等类似功能的 App 或者网页。</p>
<p><img src="@source/design/navigation/assets/checkbox.jpg" alt="复选框"></p>
<p>上面这个是一个待办事项 App 的概念设计。用户点击复选框后，表示这个内容已经完成。字体变粗的同时颜色发生了改变，这样就非常明显地把这个已完成的任务和其他未完成的任务区分开来。</p>
<h2 id="图标-icons" tabindex="-1"> 图标(Icons)</h2>
<p>图标可以定义为一个象征着某个概念或物体的视觉形象，有着加强与受众沟通的目的。会和文字结合一起使用，将想要传达给受众的信息表现出来。在界面设计中，图标通常是象形符号或表意文字，对可用性和成功的人机交互有重要意义 。</p>
<p>毫无疑问，图标的其中一个重要作用是可以有效地替代文字描述。因为比起文字，用户对图片的理解速度更快，所以这个特点能极大提升用户体验，增强产品的导航和对用户的引导。但是，需要注意，即使是轻微的歧义或者误解都会导致糟糕的用户体验。所以在设计图标的时候要做必要的测试，根据目标用户平衡好文字和图标的使用。最有效的方式是同时使用图标和文字，这样大部分用户都不会有问题。电商 APP 或者网站最常使用这样的形式来给用户足够的信息，让他们能轻松快速地浏览。</p>
<hr>
<p>根据图标的功能，我们可以将它们分为一下几类:</p>
<h3 id="交互式图标-interactive-icons" tabindex="-1"> 交互式图标(interactive icons)</h3>
<p>这类图标具备交互功能。他们是可点击的，能回应用户的要求，触发图标代表的动作。这种图标告知用户按钮、控件或者其他界面交互元素的功能或者特点。在大多数情况下，这类图标的意义明确，不需要文字辅助说明。</p>
<h3 id="说明性图标-clarifying-icons" tabindex="-1"> 说明性图标(clarifying icons)</h3>
<p>起到说明作用的图标，设计师用它来表示某一个特点或者内容的种类。它有时候不属于界面布局的元素或者并不具备直接的交互功能。经常和文字结合使用。</p>
<h3 id="娱乐性和装饰性图标-entertaining-and-decorative-icons" tabindex="-1"> 娱乐性和装饰性图标(entertaining and decorative icons)</h3>
<p>这类图标注重抓人眼球的视觉效果并非功能，通常用在节日或者特别款的场景。他们能有效地吸引用户的注意力，增强视觉冲击力。</p>
<p>复活节和春天主题的图标:</p>
<h3 id="app-图标-app-icons" tabindex="-1"> APP 图标(app icons)</h3>
<p>在各个平台上可交互的品牌标志，展示品牌和产品的形象。最常见的就是我们手机界面上每一个 App 的图标，上面通常是品牌和产品的 Logo。</p>
<h3 id="网页图标-favicons" tabindex="-1"> 网页图标(favicons)</h3>
<p>就是我们经常在网址栏或者书签里看到的 URL 前面的那个小图标，也是代表着产品或者品牌的形象。能让用户在浏览网页时给他们快速的视觉提示。</p>
<h2 id="搜索区域-search-field" tabindex="-1"> 搜索区域(Search Field)</h2>
<p>搜索区域又常常被称作搜索框(search box)或者搜索条(search bar)，代表着用户可以在这个区域内输入想要搜索的内容。它是那些有着很多内容的网站或 APP 的核心导航元素，像博客，电商，新闻等产品。设计得好的搜索框能让用户轻松地找到想要的信息。因为它能帮助用户省去很多时间和精力，所以它是一个对用户特别友好的界面元素。</p>
<p>它的设计形式有很多种，可以是标签的形态，也可以是引导输入的一条线或者简单的一个搜索图标。大多数情况下搜索框的图标是一个放大镜的样式。基本上所有的用户都懂得这个图标的含义，所以能实现非常直观的导航设计。想要在这个图标上做文章的话，要好好测试一下，因为改得不好的话会严重影响交互和界面的可用性。搜索框还可以加入提供候选项的下拉菜单或者自动填补内容的功能。</p>
<p><img src="@source/design/navigation/assets/search.gif" alt="十分有设计感的交互式设计"></p>
<p>另外需要注意的一点是搜索框控件在界面中的位置。在网页设计中，搜索框经常出现在网页的顶部。这是一个很恰当的设计，因为通常网页的顶部区域具有很高的可见性，用户打开网页就看到了，不需要再花时间去找到这个控件。举个反面例子，如果一个电商网站因为搜索框的设计有问题，导致用户没办法快速方便地找到想买的东西，网站销售表现会受到极大的影响。因为现在很多网站都将搜索框放在网页的顶部，所以用户也养成了在那里找到搜索框的习惯。</p>
<p>至于 App 界面的话，要视具体情况而定，设计师可能面临更多的限制。如果是一个有着大量内容的 APP，而且搜索是核心功能之一的话，那么一般放在一个显眼的标签条(tab bar)上。如果搜索并不是核心功能，那么可以把它藏到菜单里或者只在需要的用到的地方显示或者时刻显示出来。</p>
<h2 id="标签-tag" tabindex="-1"> 标签(Tag)</h2>
<p>标签是一个标有关键词的可交互元素。标签其实是给用户提供快速通道的元数据，用户可以通过它快速导航到与关键词相关的所有内容。除了网页或者 App 本身带有的标签，在很多情况下用户也可以自己创建标签。</p>
<p>标签这个界面元素被广泛地应用在用户原创内容平台(UGC)的界面设计里。当用户上传图片、状态到社交网络的时候，可以加上关键词作为标签。通过点击某个标签，能切换到带着这个标签的所有内容的页面。标签是友好的搜索引擎优化(SEO-friendly)技巧，能提高用户搜索内容的成功率。</p>
<p>对于一些内容站点来说，当用户想要下载图片时，可以输入描述图片的关键词作为标签。通过这样的形式帮助用户有效地找到想要的图片。我们还可以注意到，输入框内加入了引导用户进行操作的说明，这样更进一步地提高了产品的可用性。设计的细节真的很重要。总而言之，标签是一种用户可以自行创造的导航元素，拉近了界面和目标用户之间的距离。</p>
<h2 id="总结" tabindex="-1"> 总结</h2>
<p>全面地设计好整个界面的导航不是一件容易的事，需要一些心理学、交互模式、用户测试的基础知识，还需要在项目的早期思考清楚网站或者 App 的信息架构。但是做好这一点的话，能够让您的产品很好地帮助用户解决他们的问题，给优秀的用户体验打下坚实的基础，让他们对您的产品产生越来越大的粘性。</p>
]]></content:encoded>
    </item>
    <item>
      <title>导航栏设计技巧</title>
      <link>https://mrhope.site/design/navigation/navbar-design.html</link>
      <guid>https://mrhope.site/design/navigation/navbar-design.html</guid>
      <source url="https://mrhope.site/rss.xml">导航栏设计技巧</source>
      <category>设计</category>
      <pubDate>Tue, 15 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>评判导航菜单的设计好坏有多种不同的维度，由于它太过常用，它的好坏并没有得到更多重视。实际上，导航作为网站设计的一个基础组成部分，对于可用性的要求并不低。以下是一些常见的设计技巧。</p>
<h2 id="超大菜单栏" tabindex="-1"> 超大菜单栏</h2>
<p><img src="@source/design/navigation/assets/big-navbar.jpg" alt="超大菜单栏"></p>
<p>即使许多设计师不喜欢这样的设计，而且从美学的角度上它也是反智的，但是对于许多客户而言，它依然是一个客户反响很好的设计方案。但是这样的设计对于用户可能还是有一些困扰，并且没有提供真正有用的功能。</p>
<p>只有极少数的电商类网站能够真正适合使用超大导航栏的，因为他们确实需要足够的空间来承载大量的导航栏目。不过过大的导航栏可能还是存在一些可用性问题的。</p>
<p>通常，超大的导航栏存在的主要原因在于，导航栏项目很多难以缩减。这真是一个艰难的决定。对于网站的运营者而言需要仔细考量这件事情，或者通过搜集来的数据来做设计决策的论据。对于特定的内容，许多用户还是倾向于使用搜索来获取，这是毋庸置疑的。</p>
<h2 id="加入显眼的搜索框" tabindex="-1"> 加入显眼的搜索框</h2>
<p><img src="@source/design/navigation/assets/navbar-with-search.jpg" alt="加入显眼的搜索框"></p>
<p>用户常常使用搜索来筛选信息，更快更直接地获取重要的信息，所以，搜索框应该突出展示。它应该出现在每个页面上，应该和主导航栏一起存在，应该够大也易于访问。</p>
<p>强大的搜索引擎是让用户留存的重要影响因素，当搜索引擎的可用性较差的时候，网站的可访问性会受到影响。网站的页面一次展示的内容是相当有限的，一旦用户在页面中无法直接获取想要的内容，下一步就是考虑借助搜索引擎来达成目标了。</p>
<p>用户对于搜索的需求是刚性的，不要试图打破这种客观存在的规律，尽量让搜索融入到主导航当中来吧。(确保输入框足够大，可以输入，并且足以一次显示常见的搜索内容)</p>
<h2 id="限制导航内条目数量" tabindex="-1"> 限制导航内条目数量</h2>
<p>作为设计师，您需要预测用户经常访问的内容，将最重要、最常用到的条目置于导航栏当中。值得一提的是，几乎每个网站的导航中都会包含搜索、关于我们、首页，而电商类网站则通常会包含购物车、购买的按钮。</p>
<p>但是无论如何，永远将最关键、最重要的导航类目让用户看到，才是导航所应该做到的事情，换句话来说，就是关键内容驱动导航分类。</p>
<h2 id="更聪明的导航机制" tabindex="-1"> 更聪明的导航机制</h2>
<p>好的导航设计，能让用户能在页面和页面之间合理快速切换，网站不同的内容和功能之间是有一定的自然逻辑的，这个自然逻辑可以作为导航设计的一个重要参考。</p>
<p>在这个用户体验高度个性化的时代，网页导航的玩法可以更加多样。以 Amazon 为例，当您登录了之后，会发现导航开始围绕着您的信息进行了调整，导航栏从通用的条目变为更贴近您的个人情况的样式，其中包括最近的购买记录，信用额度和 Amazon 的服务信息等。</p>
<h2 id="正确地排布导航内的条目" tabindex="-1"> 正确地排布导航内的条目</h2>
<p>导航内的元素的排布顺序和条目内容同样重要。导航栏两头的条目是最引人注意的，并且也通常是用户点击最多的，所以作为设计者，您需要特别注意这些条目的设计。</p>
<p>对于这一点，还有不少科学研究和理论支持。比如，序列位置效应指的就是人会更容易记住列表的开头和结尾的条目。新近效应说的是用户更容易记住最新看到的条目，而首位效应说的是，相比于列表中间的内容，用户更容易记住列表开头的几个条目。</p>
<h2 id="长滚动页面上使用悬浮导航" tabindex="-1"> 长滚动页面上使用悬浮导航</h2>
<p>对于长滚动页面而言，导航设计是否可靠是一件颇为重要的事情，无论导航是在顶部、侧边栏还是在底部，它最好能够悬浮置顶，不论用户滚动到哪个地方都时刻存在于界面上。让用户尽量轻松自然地同您的网站进行交互，而不需要费力。交互越是方便，用户便越是会在您的网站中四处探索，自然而然的，用户在网站中停留的时间就越长。</p>
<div><p>提示</p>
<p>比如我博客的导航栏就是一个悬浮导航，确保用户可以随时接触到菜单(移动端)和导航栏与搜索框(PC 端)。</p>
</div>
<h2 id="不要隐藏导航" tabindex="-1"> 不要隐藏导航</h2>
<p>超小的汉堡图标，隐藏在页脚、不显眼的链接，或者在长滚动页面中时隐时现的悬浮菜单，都会让用户觉得难以掌控。这些“躲闪”的导航元素让用户难以与之进行交互。相反，时刻存在的导航让用户会更加安心，让用户时刻都拥有离开、跳转的安全通道。</p>
<h2 id="使用描述性的标签文本" tabindex="-1"> 使用描述性的标签文本</h2>
<p>从导航标签到图标，UI 界面中每个交互元素都应该明确的指引用户，告诉他们点击之后会发生什么。像放大镜、购物车这样的拥有普遍认知的图标，应该尽量多用。</p>
<p>导航栏中每个条目都会有个文本标签，它们会告诉用户这个链接中所包含的内容。这个时候要尽量注意不要使用太过宽泛的描述，比如“服务”或者“产品”，尽量用更精准的描述。</p>
<h2 id="尝试全页面导航" tabindex="-1"> 尝试全页面导航</h2>
<p><img src="@source/design/navigation/assets/full-navigate.jpg" alt="全页面导航"></p>
<p>导航这件事玩法有很多，如果您真的想做的更醒目一些，不妨采用全页面式的导航，绝对不会让用户错过。</p>
<p>对于作品集和相对较小的实验性网站，这种非常规的设计有时候能出奇效。</p>
<h2 id="垂直导航" tabindex="-1"> 垂直导航</h2>
<p><img src="@source/design/navigation/assets/vertical-navbar.jpg" alt="垂直导航"></p>
<p>垂直导航设计也是目前越来越流行的设计之一。最常见的是垂直导航，是侧边栏导航，它和许多软件的 UI 设计不谋而合。</p>
<p>侧边栏导航对于如今的许多网站是个合理的选择，尤其是诸如长滚动式的页面。侧边栏导航通常为常驻式的，让用户可以随时定位，快速跳转，并且其中所能承载的元素相对比顶部导航更多。垂直导航尤其要注意条目之间的空间间隔。</p>
]]></content:encoded>
    </item>
    <item>
      <title>导航栏设计</title>
      <link>https://mrhope.site/design/navigation/navbar.html</link>
      <guid>https://mrhope.site/design/navigation/navbar.html</guid>
      <source url="https://mrhope.site/rss.xml">导航栏设计</source>
      <category>设计</category>
      <pubDate>Tue, 15 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>其实网页或者 App 中的导航(Navigation)这个概念远不止我们熟悉的导航栏，而是一个更加广的交互概念: 引导用户和产品进行有效的交互，实现用户的目标。</p>
<h2 id="导航栏究竟在哪里" tabindex="-1"> 导航栏究竟在哪里</h2>
<p>导航栏 Navigation Bar，也简称为 Navbar。一定会有不少刚入门的 UI 新人，在诸多的 Bar 控件中，难以区分它所指代的区域。</p>
<p>在 iOS 上，导航栏是指显示在应用程序顶部，位于状态栏下方的容器区域，层级应高于当前页面内容。</p>
<p>在安卓上，Google 公司在 Material Design 中也赋予了它同样的定义，但是却给了它另一个名称，顶部应用栏(Top App Bar)。</p>
<p><img src="@source/design/navigation/assets/navbar-name.jpg" alt="iOS 与安卓的规范与命名区别"></p>
<p>请务必要记住: 导航栏是用于构架当前屏幕的内容，阐述当前屏幕的状态，并且起到连接父子级页面层次结构的作用。所以回到开头的小故事，为什么标签栏不能叫做底部导航，因为标签栏是构架了多个屏幕之间平级页面的内容切换，和「导航」的定义没有关系。</p>
<h2 id="规范里告诉我们该怎么做-vs-实际项目我们该怎么做" tabindex="-1"> 规范里告诉我们该怎么做 vs 实际项目我们该怎么做</h2>
<p>一个基本的导航栏容器一般承载的信息可能会有: 标题、导航按钮、内容控件按钮、其他控件(比如搜索栏、分页标签或分页控件等)，千万别忘了还有分割线。(比如微信的导航栏)</p>
<h3 id="导航栏标题" tabindex="-1"> 导航栏标题</h3>
<p>时间倒退回 2017 年以前，这时候的移动端规范下的导航栏还是循规蹈矩的，样式单一。但随着 iPhone X 等一系列全面屏手机相继问世后，移动设备在屏幕高度上有了进一步的扩展，界面设计在一屏内的发挥空间也随之增加。iOS11 发布后，大标题导航栏设计风格兴起，随后被引入平台规范。</p>
<p>于是现在 iOS 与 Material Design 在导航栏上也都定义了两种导航栏标题规范，常规标题与大标题。</p>
<p>常规标题是指在高度为 88px(iOS@2x 下)的导航容器中，居中放置一个当前页面的标题。标题字号一般为 34px-38px(34px 为 iOS 标准规范，但实际项目中可以尽量在不小于 34px 标准的情况下根据设计需求确定)。</p>
<p><img src="@source/design/navigation/assets/ios-navbar.jpg" alt="常规导航不同标题字号的案例及视觉效果"></p>
<p>大标题是将导航栏高增加到 192px(iOS@2x)，保留高度为 88px 的导航容器来承载内容控件按钮，将标题下坠居左。iOS 的标准规范定义大标题的字号为 68px。但由于英文有大小写区分，在视觉上有一定的层次表现，而中文因为缺少一定的层次结构，并且相同字号的中文视觉大小大于英文，所以大多数时候我们在进行大标题设计时，会适当缩小，一般为 56px-64px 居多。</p>
<p><img src="@source/design/navigation/assets/ios-navbar-big.jpg" alt="大标题不同标题字号的案例及视觉效果"></p>
<p>大标题导航栏的优点毋庸置疑，页面留白更多，呼吸感更强，大气现代、格调更高，因为页面标题巨大，能够帮助用户快速确认当前所处位置。采用统一的大标题，让页面布局风格快速统一。但缺点也显而易见，因为增加了导航栏的高度，导致屏幕利用率降低，一些通过广告变现或更加注重一屏内内容呈现的应用便中和了常规导航与大标题导航的优缺点，进行了风格改进。</p>
<p><img src="@source/design/navigation/assets/navbar-big-improve.jpg" alt="改进的大标题案例"></p>
<p>那我们如何在常规标题和大标题之间抉择呢? 这可不单单是设计风格的问题，还受产品定位与功能的影响。苹果的设计师在 Apple Music 中实验并验证了一条结论——在内容非常丰富、层级结构较深的产品当中，大标题能够帮用户快速确认自己的位置。</p>
<p>所以我理解的适合使用大标题风格的产品一定是: 突出内容呈现而不是功能繁琐的；产品定位更偏向于现代或文艺艺术的；需要快速统一界面风格的。而层级结构需不需要很深，这并不一定，我反而觉得功能越单一、产品体量级越轻的应用，越适合大标题。</p>
<p>所以如此看来，国内使用大标题成功的案例就为数不多了，这可能与中文字体还有国内 app 产品功能都比较繁琐的原因有关，真正做到了使用大标题快速帮助用户确认自己位置，并且结合了产品特性与风格的，我认为人人都是产品经理的移动端在这方面做得非常棒。</p>
<h3 id="导航按钮及内容控件按钮" tabindex="-1"> 导航按钮及内容控件按钮</h3>
<p>iOS 规定导航按钮位置仅能用于放置返回按钮，可以添加一个层级的面包屑，帮助用户有效地明确当前页面层级；Material Design 中，不仅可以放置返回按钮，还另有作用，菜单图标-用于打开导航抽屉或者关闭图标-关闭工具栏。</p>
<p><img src="@source/design/navigation/assets/ios-nav-back.jpg" alt="iOS 与安卓的导航按钮区域区别"></p>
<p><img src="@source/design/navigation/assets/android-nav-back.gif" alt="iOS 与安卓的导航按钮区域区别"></p>
<p>这一点与 iOS 的定义有着天壤之别，iOS 非常明确地赋予了工具栏的定义，并且将导航栏和工具栏(Toolbars)彻底地分离开，典型案例就是 Safari。</p>
<p><img src="@source/design/navigation/assets/safari.jpg" alt="iOS 明确地将导航栏与工具栏分离开"></p>
<p>在内容控件上 iOS 与 Material Design 也大相径庭，Material Design 不去限制您的内容控件多少，因为它提供了溢出菜单，并可以根据屏宽的变化，自适应释出和收纳溢出菜单中的控件。</p>
<p><img src="@source/design/navigation/assets/android-size-adjust.gif" alt="安卓动态调整"></p>
<p>而 iOS 则规定我们，要给内容控件按钮足够多的空间，必要的时候，隐藏导航栏标题也未尝不可。</p>
<p><img src="@source/design/navigation/assets/ios-nav-space.jpg" alt="iOS 导航栏空间"></p>
<p>那么真实的项目中，我们往往为了快速落地，会存在一稿适配双平台的情况。这时候我们应该遵从哪一个平台的规范呢? 答案是: 许多大厂的做法已经向我们验证，规范不分家。</p>
<p>在 iOS 诸多的应用中溢出菜单早已普及，尽管这是 Material Design 提出的设计理念。</p>
<p><img src="@source/design/navigation/assets/ios-callout.jpg" alt="Material Design的溢出菜单也被运用在iOS端"></p>
<p>虽然国内遵从 Material Design 进行 Android 应用设计的情况相对较少，但它提供的设计理念与方案却并不局限在安卓平台。</p>
<h3 id="分割线" tabindex="-1"> 分割线</h3>
<p>分割线只是一种体现形式，我想要表达的是，别忘记区分导航栏与内容界面的视觉层级关系。Matetial Design 提醒我们，顶部应用栏可以与内容位于同一高度，但滚动时，请增加导航栏的视觉高度，让内容在其后方滚动。而 iOS 则默认采用了背景模糊的方式区分了导航栏与内容区域的层级关系。</p>
<p><img src="@source/design/navigation/assets/android-shadow.gif" alt="区分导航栏与内容区域的层级关系"></p>
<p><img src="@source/design/navigation/assets/ios-divide.jpg" alt="区分导航栏与内容区域的层级关系"></p>
<p>缺少视觉分割会让用户分不清导航栏与内容界面，它们看起来会更像一个平级。对用户视觉区分内容主次其实是极不友好的。</p>
<h3 id="其他控件" tabindex="-1"> 其他控件</h3>
<p>关于其他控件，iOS 只在规范中提及到了分页控件。苹果设计师考虑到部分场景在当前页面中还存在信息层级结构划分，此时建议可以在导航栏中使用分段控件。</p>
<p>但国内的应用程序早已将导航栏容器的作用发挥到极致，基于导航栏层级始终高于内容区域的特性，我们通常可以将分段控件、分页标签、搜索栏等等用户可能随时使用的工具放在导航栏中。</p>
<p><img src="@source/design/navigation/assets/nav-control.jpg" alt="导航栏通常会承载的其他控件"></p>
<h2 id="总结" tabindex="-1"> 总结</h2>
<p>导航栏是几乎每一个界面都必定存在的控件，正因为无法轻易删减，逃不掉就必须用好它，不然很容易沦为页面的减分项。</p>
<p>设计好导航栏不仅仅是视觉上的工作，表现的方式、承载的按钮与组件、滚屏时的组合操作还能给用户带来极大的体验增益。</p>
]]></content:encoded>
    </item>
    <item>
      <title>侧边栏导航</title>
      <link>https://mrhope.site/design/navigation/sidebar-navigate.html</link>
      <guid>https://mrhope.site/design/navigation/sidebar-navigate.html</guid>
      <source url="https://mrhope.site/rss.xml">侧边栏导航</source>
      <category>设计</category>
      <pubDate>Tue, 15 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>厌倦了传统顶部导航的设计师，越来越偏爱侧边栏导航了。这种常见于页面左侧的侧边栏设计，已经成了许多独树一帜的设计师的选择了。</p>
<h2 id="无处不在的侧边栏导航" tabindex="-1"> 无处不在的侧边栏导航</h2>
<p>侧边栏导航和菜单设计的演变有着密不可分的关系。响应式设计的流行使得向移动端偏移的网页设计，不得不采用菜单栏来替代传统的导航模式，其直接的影响就是催生了汉堡图标。</p>
<p><img src="@source/design/navigation/assets/sidebar-navigate1.jpg" alt="侧边栏导航"></p>
<p>随着汉堡图标的流行，弹出式的菜单也越发的常见。其中有些菜单是完全开放式的，而有的菜单则带着下拉框，还有一部分直接是弹出的菜单界面。而为了兼容大量的移动端界面，下拉和弹出式的菜单大多采用的是纵向布局——而这和侧边栏的设计，是如此的相似。换句话来说，这种垂直的导航就是一种弹出式的侧边栏导航。</p>
<p>目前，这种左侧侧边栏导航的设计已经成为一种持续迭代中的设计趋势了。现在我们看到的侧边栏设计，常常使用单一的纯色打底，包含较少(但是重要或常用的)选项，导航栏顶端通常会包含有品牌或者网站 LOGO，文字链接，以及带有小图标的社交媒体帐号的链接。</p>
<p>想要这种侧边栏设计能够最大化的发挥作用，诀窍在于控制好侧边栏本身和右侧网站内容的对比度，它要包含足够清晰可见的导航条目，还要能在移动端上良好地运作。</p>
<p>还有一点值得一提: 不要因为屏幕侧边够长，就试图用链接和内容将侧边栏填满。留白是完全可以接受的，在简约之风大行其道的今天，尽量只保留必须的内容，让留白来凸显它们，才是合乎道理又符合趋势的设计。今天的文章中的许多优质案例，都遵循着这样的设计逻辑。</p>
<h2 id="侧边栏导航的优点" tabindex="-1"> 侧边栏导航的优点</h2>
<p>侧边栏导航的美学特征是毋庸置疑的。它在互联网存在的早期就已经存在，在软件的 GUI 设计中常常可以看到，但是在今天它仍然以一种时尚而前卫的姿态出现。</p>
<p><img src="@source/design/navigation/assets/sidebar-navigate2.jpg" alt="侧边栏导航示意图"></p>
<div><p>侧边栏导航的优点</p>
<ul>
<li>侧边栏导航通常位于左侧，它位于 F 式布局的最左侧，作为信息主干，也符合用户的浏览习惯</li>
<li>侧边栏导航不会像汉堡菜单一样一开始就隐藏其中的条目</li>
<li>侧边栏中的条目优先级基本一致</li>
<li>当间距足够的时候，侧边栏中的条目会非常的一目了然</li>
<li>今天的侧边栏通常会留有足够的空间，让后续的条目能够加入进去</li>
<li>侧边栏让右侧的画板形状尺寸不尽相同，设计师可以以非常规的方式来展现视频和图片，创造更独特的视觉体验</li>
<li>侧边栏导航以更加干净优雅的方式呈现更多的链接</li>
</ul>
</div>
<h2 id="侧边栏导航的缺点" tabindex="-1"> 侧边栏导航的缺点</h2>
<p>不喜欢侧边栏导航的人也很多，有些争论是关于导航栏放在右侧会不会更好，还有人则觉得侧边栏导航本身就是个麻烦，一方面让用户面对更复杂的布局，另一方面还增加了开发的难度。</p>
<p><img src="@source/design/navigation/assets/sidebar-navigate3.jpg" alt="侧边栏导航示意图"></p>
<div><p>使用垂直导航存在的问题</p>
<ul>
<li>垂直式的导航在响应式布局当中很难正常工作</li>
<li>导航中的词汇必须足够简短，否则导航栏会设计的很宽，或者部分内容无法显示</li>
<li>垂直导航所占据的空间，可能会挤压其他更有价值的内容</li>
<li>在同等内容量之下，侧边栏导航会让用户滚动页面的时间更长</li>
<li>顶部导航通常只能放四五个链接，而侧边栏导航无疑能放更多，这可能会促使部分设计师，在导航栏中塞入过多导航条目</li>
<li>绝大多数用户是右撇子，这些用户需要横快整个屏幕去点击导航</li>
<li>垂直导航通常在单页式页面上非常好用，但是其他类型的网页上则没有想象中那么好使</li>
</ul>
</div>
<h2 id="侧边栏导航是否好用" tabindex="-1"> 侧边栏导航是否好用</h2>
<p><img src="@source/design/navigation/assets/sidebar-navigate4.jpg" alt="侧边栏导航示意图"></p>
<p>说真的，讨论很多，结论并不那么明朗。</p>
<p>作为一种设计趋势，侧边栏导航是引人注意的，作为导航栏，它常驻式的设计，让它的功能性更强。如果您的导航是用户流程中非常重要的存在，那么侧边栏导航是个不错的选择。</p>
<p>总而言之，这种导航设计对于较少的导航内容的小型网站而言，颇为有用，尤其是对于产品展示型的网站而言。</p>
<h2 id="其他的导航模式" tabindex="-1"> 其他的导航模式</h2>
<p>非常规的导航模式是打破了旧有的常规导航模式的有趣尝试，除了侧边栏导航之外，还有一些其他的有趣的导航设计。</p>
<p>当然，非常规的导航设计最主要的问题在于，用户不熟悉，容易混淆，迷惑。对于小型站点，适当的尝试还好，对于复杂的大型网站，这样的尝试就有点得不偿失了。</p>
<p>在这里另外介绍两种有趣的导航设计。Aurora 所采用的是隐藏式的导航，点击 LOGO 旁边的菜单按钮能够显示，而 AndCulture 则直接将顶部导航旋转了 90 度直接放到侧面。</p>
<p><img src="@source/design/navigation/assets/sidebar-navigate5.gif" alt="侧边栏导航示意图"></p>
<p><img src="@source/design/navigation/assets/sidebar-navigate6.jpg" alt="侧边栏导航示意图"></p>
<p>两种设计虽然都有人让人意想不到，但是都在各自的网站中良好的运行。当然，不管您要做多么奇怪的尝试，在真正决定投入使用之前，尽量多做用户测试，确保它们是有效的。</p>
]]></content:encoded>
    </item>
    <item>
      <title>标签导航设计技巧</title>
      <link>https://mrhope.site/design/navigation/tabbar-design.html</link>
      <guid>https://mrhope.site/design/navigation/tabbar-design.html</guid>
      <source url="https://mrhope.site/rss.xml">标签导航设计技巧</source>
      <category>设计</category>
      <pubDate>Tue, 15 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="底部导航栏图标重要性及维度" tabindex="-1"> 底部导航栏图标重要性及维度</h2>
<h3 id="重要性" tabindex="-1"> 重要性</h3>
<p>底部导航栏的图标是路牌，承担着指路的作用，给用户指明进入产品后可以分别通往什么页面。早期的底部导航栏是单一的指路功能，经过多年的交互设计迭代后，附加了「信息展示」和「引导操作」的作用，这点会在下文中详细阐述。</p>
<h3 id="三个重要评估维度" tabindex="-1"> 三个重要评估维度</h3>
<h4 id="品牌调性" tabindex="-1"> 品牌调性</h4>
<p>品牌调性决定了图标的体量感、差异化和创意延展。怎样评估图标设计能够体现出品牌调性呢? 最简单直接的方法: 截屏首页，不看顶部栏，仅从底部导航栏能看出来这是什么产品，就算成功体现了品牌调性。</p>
<p><img src="@source/design/navigation/assets/tabbar-style.jpg" alt="品牌调性"></p>
<h4 id="识别度" tabindex="-1"> 识别度</h4>
<p>识别度决定了用户辨识其它页面功能的速度。高识别度的图标能协助用户辨识，低识别度的图标会阻碍用户辨识。在选择做这部分图标的时候，一定要考虑识别度的问题，进行创新要建立在高识别度的基础上。</p>
<h4 id="美观" tabindex="-1"> 美观</h4>
<p>导航栏图标美观的要义是: 统一、精致。统一不代表绝对统一，精致不代表过于精细。要做到美观，可以遵循以下几点: 大小统一和谐、线条粗细一致、圆角视觉统一、内容繁简平衡。</p>
<p>将三个维度按重要程度来排序，是品牌调性&gt;识别度&gt;美观。有的设计师会选择以美观度作为优先标准。但站在产品的角度来说，应该以体现品牌调性和识别度为重要标准，在这基础上再进行美观设计。下图中，新华书店 APP 的底部导航栏图标略显年代感，图标细节表现不一显得不够统一和精致，然而用户还是能够根据图标一眼区分各个导航入口的功能。它们可能不是设计师眼中好看的图标，但它们是用户眼中好用的图标。</p>
<p><img src="@source/design/navigation/assets/xinhua.jpg" alt="新华书店 APP"></p>
<h2 id="底部导航入口的数量" tabindex="-1"> 底部导航入口的数量</h2>
<p>底部导航入口一般在 3-5 个，最常见的是 4-5 个。这个数量由什么决定呢?</p>
<h3 id="最高数值由认知心理学决定" tabindex="-1"> 最高数值由认知心理学决定</h3>
<div><p>相关信息</p>
<p>在认知心理学理论中，人的记忆系统由三个储存器组成: 感觉寄存器，短时记忆和长时记忆。来自环境的刺激经过过滤首先进入感觉寄存器，通过选择性直觉，信息被临时传入短时记忆(STM)。它是一个过渡性的记忆缓冲期，容量有限，只能记录 7+-2 个信息组块，且只能保持大约 15-30 秒。</p>
</div>
<p>在使用 APP 的时候，底部导航栏使用到的是人记忆系统中的感觉寄存器和短时记忆。考虑到 APP 面对的人群非常广，短时记忆容量不一，选择了 7-2(也就是 5)作为底部导航入口的最高数值。</p>
<h3 id="具体数值由产品的框架决定" tabindex="-1"> 具体数值由产品的框架决定</h3>
<p>产品经理会通过项目背景和用户调研，决定产品的功能结构。而功能结构图划分的类别决定了底部导航入口数量。有的产品功能非常单一，结构也单一，三个导航入口已经能够满足需求；有的产品功能复杂，则需要更多的导航入口，用以划分 APP 功能，帮助用户快速识别。</p>
<p><img src="@source/design/navigation/assets/tabbar-needs.jpg" alt="产品需求"></p>
<h2 id="底部导航栏模式" tabindex="-1"> 底部导航栏模式</h2>
<p>底部导航栏有权重平分、强调信息、引导操作这三种模式。本次深度分析采用了 30 个产品作为对象进行研究，其中大部分为知名社交电商类产品。因为这类型的产品比较多，迭代完善，可参考性强。</p>
<h3 id="权重平分" tabindex="-1"> 权重平分</h3>
<p>当产品的功能结构权重比较平均，不希望突出其中某个结构时，一般采用权重平分的模式，即每个底部入口的分量都是平均的。常规产品会采用这样的形式。</p>
<p><img src="@source/design/navigation/assets/tabbar-same-weight.jpg" alt="权重平分"></p>
<h3 id="强调信息" tabindex="-1"> 强调信息</h3>
<p>当产品需要强调某些信息引起用户注意或同一个按钮承担两个功能时，设计便可以选择在某个入口添加明显的信息指示或功能。增加功能的底部导航入口不一定是首页，也可以是其它入口。</p>
<div><p>相关信息</p>
<p>严选的首页按钮承担着「回到顶部/快速定位推荐模块/品牌展示」的功能；淘宝、飞猪的首页按钮承担着「回到顶部/品牌展示」的功能；微博的视频按钮承担着「视频/关注的人更新内容提示」的功能。</p>
</div>
<p><img src="@source/design/navigation/assets/tabbar-yanxuan.jpg" alt="强调信息"></p>
<h3 id="引导操作" tabindex="-1"> 引导操作</h3>
<p>当产品希望用户能够进行某个操作，需要进行强操作提醒时，可以选择引导操作的导航栏模式，在中心突出操作按钮。大众点评、百果园、转转、星巴克、闲鱼等都是采用这种模式。</p>
<p><img src="@source/design/navigation/assets/tabbar-guide.jpg" alt="引导操作"></p>
<h2 id="底部导航栏图标表现形式" tabindex="-1"> 底部导航栏图标表现形式</h2>
<h3 id="线性图标的优势" tabindex="-1"> 线性图标的优势</h3>
<p>从大多数 APP 设计来看，未选中状态下，线性图标占有优势。相对面性图标来说，线性图标有更多可能性，且选中与未选中的区分落差较大，对比明显。</p>
<p><img src="@source/design/navigation/assets/tabbar-icon-style.jpg" alt="两种设计方式对比"></p>
<h3 id="其它图标趋势" tabindex="-1"> 其它图标趋势</h3>
<p>未选中状态的图标常用线性方式，目前的主要趋势还是在图标表意上下功夫；选中状态的图标常用面性、微质感、立体、插画等方式。</p>
<h2 id="图标设计思路与创意" tabindex="-1"> 图标设计思路与创意</h2>
<p>为了直观表现图标设计的思路，我为权重平分模式、强调信息模式、引导操作模式分别设定不同的产品背景，把图标设计的过程写下来供大家参考。</p>
<ol>
<li>
<p>权重平分模式示例</p>
<p><img src="@source/design/navigation/assets/tenghe.jpg" alt="权重平分模式示例"></p>
</li>
<li>
<p>强调信息模式示例</p>
<p><img src="@source/design/navigation/assets/zizaixiong.jpg" alt="强调信息模式示例"></p>
</li>
<li>
<p>引导操作模式示例</p>
<p><img src="@source/design/navigation/assets/yuyou.jpg" alt="引导操作模式示例"></p>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>标签导航设计</title>
      <link>https://mrhope.site/design/navigation/tabbar.html</link>
      <guid>https://mrhope.site/design/navigation/tabbar.html</guid>
      <source url="https://mrhope.site/rss.xml">标签导航设计</source>
      <category>设计</category>
      <pubDate>Tue, 15 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>导航分很多类别，如标签导航、抽屉式导航、九宫格导航、混合组合导航、列表式导航、Tab 导航、平铺导航等等。</p>
<p>现在用到更多的导航其实是标签导航(tabbar)，它随处可见，相信目前大部分的 App 用的导航都是标签形式的。</p>
<h2 id="理清产品框架" tabindex="-1"> 理清产品框架</h2>
<p>相信很多设计师在设计导航时，一上来就开始 YY 自己的导航要放什么，因为这个时候他已经被标签形式的导航洗脑了，认为自己的 App 就应该用标签导航。然后继续 YY 产品的功能，自己理出个最适合的，放上去就好了。</p>
<p>其实不然。做好一个导航要考虑的问题其实非常多，还要考虑产品后期发展的延展性。必须定好整个产品的框架，把最核心的功能放在第一层页面，再根据产品的深度来设计导航的模式。</p>
<h2 id="标签导航的优劣势" tabindex="-1"> 标签导航的优劣势</h2>
<p>先来看个图:</p>
<p><img src="@source/design/navigation/assets/wechat.png" alt="微信页面"></p>
<p>不要看上面的列表，就看下面的标签。是不是特别熟悉? 很多 App 都是用这类标签式导航来引导用户切换功能。</p>
<h3 id="优势" tabindex="-1"> 优势</h3>
<ol>
<li>
<p>简单高效，操作方便</p>
<p>下面的四个功能可以快速切换，用户在使用的过程中不会迷失方向，且简单清晰，层级明确。</p>
</li>
<li>
<p>更好的用户体验</p>
<p>试想一下，一般在使用 App 时，用户更多的会怎么使用手机? 双手还是单手呢? 肯定都有。所以单手使用手机的用户碰到的 App 是标签导航时，可以更方便的操作，不需要一定得使用另一只手。而某些导航如果不用两只手是没办法操作的。</p>
</li>
<li>
<p>快速了解 App 主要功能</p>
<p>一般来说，用户第一次使用产品，会关注这个 App 有什么功能，它能帮助自己完成什么任务。所以标签导航可以很好地帮助用户了解产品的主要功能，让用户看到的第一眼就知道自己能做什么。</p>
</li>
</ol>
<h3 id="劣势" tabindex="-1"> 劣势</h3>
<ol>
<li>
<p>功能不能过多</p>
<p>有些产品功能过多，但是却又都是必要的，不能做删减。而一旦超过五个，就不适合用标签导航。因为标签导航不适合做滑动，所以功能多了可点击区域(热区)就变小了，操作上会有一定影响。</p>
</li>
<li>
<p>占用一定屏幕尺寸</p>
<p>标签导航占用了屏幕下方不少的位置。</p>
<div><p>相关信息</p>
<p>不过也正是因为顶部和底部的 navbar 与 tabbar 会占据太多的屏幕空间，所以现在屏幕尺寸普遍改为了 2:1 而不是原来的 16:9。</p>
</div>
</li>
</ol>
<h2 id="标签导航的延展" tabindex="-1"> 标签导航的延展</h2>
<p>有的人会问，如果我的产品很想用标签导航，但是又超过了 5 个功能，那有办法解决么?</p>
<p><img src="@source/design/navigation/assets/zhihu.png" alt="知乎页面"></p>
<p>当然有，当您的主功能超过 5 个又一定要使用标签导航的话，那知乎的这个解决方案很适合您(最右边的功能是“更多”)。</p>
<p>还有一类情况是:主功能是标签导航，次要功能也是标签导航。这些在资讯 APP 是很常见的，比如主功能是“新闻”，次要功能是顶部的“要闻”、“NBA”等等，如果在某个主功能中，次要功能很多，就可以使用这类方式来解决这个问题。</p>
]]></content:encoded>
    </item>
    <item>
      <title>图标应用</title>
      <link>https://mrhope.site/design/icon/apply.html</link>
      <guid>https://mrhope.site/design/icon/apply.html</guid>
      <source url="https://mrhope.site/rss.xml">图标应用</source>
      <description>在 UI 设计中，图标不是孤立存在的。我们学习图标的设计，不是为了画一组套图，然后上传到设计平台中分享或求赞，而是要在真实的项目中发挥作用。如果不了解图标应用到项目中的知识点，那么真实的图标设计水平就会在项目设计过程中被损耗。
所以，本章讲述工具图标在项目中应用的方法。
</description>
      <category>设计</category>
      <pubDate>Mon, 14 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>在 UI 设计中，图标不是孤立存在的。我们学习图标的设计，不是为了画一组套图，然后上传到设计平台中分享或求赞，而是要在真实的项目中发挥作用。如果不了解图标应用到项目中的知识点，那么真实的图标设计水平就会在项目设计过程中被损耗。</p>
<p>所以，本章讲述工具图标在项目中应用的方法。</p>

<h2 id="一套应用中的图标规格" tabindex="-1"> 一套应用中的图标规格</h2>
<p>图标是一个应用不可或缺的组成元素，在应用的界面中随处可见。也因为图标的常见性，我们往往需要在一个应用中应用多套图标，这和崇尚简约的第一印象是有背离的。</p>
<p>很多新手，都以为我们只要设计一套大而全的图标，在项目中对应提取即可。但有很多场景，如果只使用一种图标类型，那么效果会非常差劲。比如，我们看看下面的淘宝设置页，前后包含了 6 种以上的图标。是太复杂了没错，但如果我们把图标都替换成同一套呢?</p>
<p><img src="@source/design/icon/assets/place-same.jpg" alt="替换淘宝图标"></p>
<p>可以看见，右侧替换后的案例，效果非常的不理想，缺乏对比和趣味性。交互规则中说: 如无必要，勿增实体，但对于图标的使用来说，这就是必要。</p>
<hr>
<p>应用内的图标规格不同，可以用两个属性来划分，大小和风格。</p>
<h3 id="图标的尺寸" tabindex="-1"> 图标的尺寸</h3>
<p>大小就是图标的尺寸规格，有些界面的元素权重低，图标的尺寸就小，有些权重高的则反之。比如在 Apple Music 的播放界面，播放快进等按钮，作为页面最重要的按钮，尺寸非常大，其它可以点击的图标次之，而表示音量的两个按钮则最小。</p>
<p><img src="@source/design/icon/assets/icon-size.jpg" alt="图标尺寸"></p>
<p>确定图标尺寸，是我们在项目中进行图标设计的第一件事。但尺寸的确定，不是我们凭空制定出来的，我们要先构建出实际的「场景」进行分析，即先完成了界面的高保真原型或交互原型。</p>
<p>下方是一个原型演示，在构建了这样的页面以后可以在原型中检查，总共用了多少种图标的尺寸，它们分别会应用在哪些场景中，然后整理出来。如果出现了一些觉得没有必要的，可以将它们进行调整合并成一种尺寸。</p>
<p><img src="@source/design/icon/assets/icon-template.jpg" alt="图标模板"></p>
<p>所以，在这个案例中，我整理出了 4 种图标的尺寸:</p>
<ul>
<li>48pt: 分类、快速入口大图标</li>
<li>32pt: 底部 TabBar 图标</li>
<li>24pt: 常规工具图标</li>
<li>16pt: 小型提示图标</li>
</ul>
<p>定好了这 4 种规格，我们在后续的设计上才有明确的设计方向。再复习一遍，为什么我们需要先定尺寸再设计，而不是统一设计一套很大的图标进行缩小。</p>
<p>因为图标要尽可能满足像素对齐的要求，通过缩小的图标往往在细节上会发生错位、模糊、丢失等问题。且在大画布上设计图标和一开始就在小画布中设计，两者在过程中得到的视觉反馈是完全不一样的，先在大画布画完，再缩小到 16pt、12pt 的规格时往往会显得太复杂，或描边太粗。</p>
<h3 id="图标的风格" tabindex="-1"> 图标的风格</h3>
<p>图标尺寸确认完以后，下面就是确认图标的风格了，和尺寸一样，我们要应用什么风格的图标，是需要在已经具备视觉雏形的页面中对比确定的，而不能提前开始设计。</p>
<p>在正常的设计流程中，通常会将图标放在项目的最后再开始设计，原因就是图标的视觉样式风格是取决于所处位置和环境的，是「先有界面样式，再有图标风格」的。</p>
<p>在常规情况下，如果一个应用中有多套图标，那么普通的中小尺寸图标使用一般的线性或面性风格即可。而在分类、快速入口这些具备装饰性、大尺寸的类型中，就应该使用一些更激进的设计风格。比如下图是 58 同城客户端应用图标案例:</p>
<p><img src="@source/design/icon/assets/58icon.jpg" alt="58 同城图标"></p>
<p>通常，一种风格会应用在一种「类别」的图标中。上方案例属于比较理想的状态，一种类别的图标对应一种尺寸，但是在一些更复杂的环境中，往往同一种尺寸下还会包括不同类别的图标。</p>
<h2 id="图标的不同状态" tabindex="-1"> 图标的不同状态</h2>
<p>图标在一个产品中，除了充当装饰以外，往往也可以作为按钮来使用。每个应用中都有大量的图标可以进行点击和交互，比如底部导航栏，头部的消息图标、发布图标等等。</p>
<p>当一个图标能被操作后，那么我们就要注意到它的状态变化。从导航栏图标举例，常规的选中状态是更换色彩，但也有越来越多的应用会在选中状态采取不同的设计风格，通过更丰富的样式表现来提升可看性。比如淘宝、QQ 的底部导航栏。</p>
<p><img src="@source/design/icon/assets/icon-change.jpg" alt="改变图标状态"></p>
<p>还有，一些包含在控件内的图标，也会跟随控件状态的变更发生变更。例如在账号输入框中，如果选中了输入框，那么图标的色彩也得到改变。如果输入框目前处于不可输入状态，那么图标也会对应置灰。</p>
<p><img src="@source/design/icon/assets/icon-change2.jpg" alt="改变图标状态"></p>
<p>合格的 UI 设计师会充分考虑到图标所变换的各种状态，并在提交给开发的过程中会进行详细的说明、归类。以及，充分运用 Sketch 等软件中的组件功能，提升项目的效率和最后的产出成果。</p>
<p><img src="@source/design/icon/assets/sketch.jpg" alt="提升效率"></p>
<h2 id="图标的标注和切图" tabindex="-1"> 图标的标注和切图</h2>
<p>在我们完成了界面和图标的设计以后，要提交我们的设计给开发人员。其中，包含我们的标注和切图。抛开其它设计元素不谈，我们就讲讲图标的切图需要遵循哪些规范，它和字体都是在这个过程中最容易出错的地方。</p>
<p>应用图标的导出我们已经在上一章提到过，所以下面还是以工具图标的说明为主。</p>
<h3 id="图标的边界" tabindex="-1"> 图标的边界</h3>
<p>我们要回到第二章工具图标的规范中，当我们确定出图标的尺寸时，不是要把图形设计得正好撑满这个尺寸，而是利用格线系统来定义它们的大小。</p>
<p>很多新人会在这个过程中产生疑惑，那么在标注的过程中，我们标注的到底是图形到其它元素的距离，还是图标外轮廓到别的图形的距离。</p>
<p>其实，图标的距离是根据外部轮廓进行计算的。虽然这个轮廓我们肉眼不可见，但它包含的内在规律可以帮助我们忽略一些不必要的小问题。</p>
<p><img src="@source/design/icon/assets/border.jpg" alt="图标的边界"></p>
<p>所以，要让标注有效，就一定不要偷懒只把图标置入画布中，而没有透明矩形背景。</p>
<h3 id="图标的画布" tabindex="-1"> 图标的画布</h3>
<p>现在有很多帮助我们进行标注和切图的协作工具，比如蓝湖、Zeplin 等。我们只要将设计稿上传，程序员可以自行获取图标对应的切图。</p>
<p>在裁切一些特定元素时很好用，但通过线上页面导出图标的方法，是非常不牢靠的。我们说过，一个应用中可能出现多种规格的图标，所以合理的图标切图，要根据不同的规格进行导出和整理，而不是让程序员自己在线上工具中下载，这样不仅操作起来困难，而且图标间不同的状态难以被轻易获取。</p>
<p>所以，要在项目设计过程中，创建不同规格的画布(Symbol)并将它们分类排列，不仅利于我们对以后图标的调用，也方便在最后批量导出切图到对应文件夹中。</p>
<h3 id="图标的命名" tabindex="-1"> 图标的命名</h3>
<p>下面我们简单讲讲图标的命名规则。有很多新手和刚入职场的 UI 设计师会不明就里的强调图标一定要用英文命名，并且各种收集常见的英文命名词汇，我首先要指出这种做法是错误的。</p>
<p>因为涉及到整个应用的图标系统时，会出现大量寓意「抽象」的图标。比如在我上方案例中，有一个启动图标的中文名是「中二」，那么这个词应该如何翻译? 即使不受制于英文水平的发挥，但是您写的英文不代表开发人员能看得懂，而大量抽象词汇的堆积最后导致命名无法成为有效的索引条件，因为没人看得懂，开发需要查找一个图标的时候依旧是通过缩略图而不是命名。</p>
<p>所以，在内部没有具体的命名规范，亦或是程序员没有特殊要求的情况下，更建议使用中文命名系统，因为国内多数程序员的习惯会将获取的图标进行二次命名。</p>
<p>命名的格式可以分成 3 级，格式大致为: 「模块_名称_状态@1x」，比如下面的案例:</p>
<ul>
<li>设置_钱包_高亮@1x.png</li>
<li>动态_评论_默认@1x.png</li>
<li>登录_按钮_点击@2x.png</li>
</ul>
<p>当然，这不是唯一准确的命名方式，可以根据实际场景自由调整，但大家要牢记，图标的命名是为了方便查找、检索。</p>
<p>最后，图标 Symbol 的命名，要和图标的命名保持一致，这样才能起到事半功倍的效果。</p>
<p><img src="@source/design/icon/assets/name-example.jpg" alt="命名示例"></p>
<h3 id="图标的格式" tabindex="-1"> 图标的格式</h3>
<p>上一章启动图标的导出格式，会根据不同设备、场景导出不同的尺寸，并且使用 PNG 的格式。不要担心，工具图标虽然也面临设备不同的问题，但不需要导出这么多的规格。下面讲讲两种图标的导出类型。</p>
<h4 id="位图格式" tabindex="-1"> 位图格式</h4>
<p>最常用的导出格式就是位图 PNG 格式，因为显示器显示倍率的不同，所以我们要导出 1x、2x、3x 三种倍率规格的图片，即设计了 16pt 的图标的话，我们需要导出 16pt、32pt、48pt 三种尺寸。并在导出的文件名后缀上标有 @1x、@2x、@3x 的标注。</p>
<p><img src="@source/design/icon/assets/png-export.jpg" alt="位图导出"></p>
<p>这个规格对于 iOS 还是 Android 都是通用的，虽然还有 3x 以上的设备，但是那些设备只要调用 3x 的规格即可。</p>
<p>虽然后面会提图标可以使用矢量格式导出，但对于使用了渐变、投影或者拟物风格的图标，必须使用位图的格式，否则无法完整记录图形的细节元素。</p>
<h4 id="矢量格式" tabindex="-1"> 矢量格式</h4>
<p>导出 3 种规格的图标很麻烦，而且位图占用的空间往往较大。所以，iOS 和 Android 为了优化这个问题，在之前的系统更新中都默认支持了矢量格式的切图文件:</p>
<ul>
<li>iOS 使用 PDF 的 1x 切图</li>
<li>Android 使用 SVG 的 1x 切图</li>
</ul>
<p>当然，如果使用矢量格式导出，那么切记在分类文件夹的时候，要将 iOS 和 Android 分开保存，而不是混合在一起。</p>
]]></content:encoded>
    </item>
    <item>
      <title>装饰性图标设计</title>
      <link>https://mrhope.site/design/icon/decorative.html</link>
      <guid>https://mrhope.site/design/icon/decorative.html</guid>
      <source url="https://mrhope.site/rss.xml">装饰性图标设计</source>
      <description>装饰图标最主要的应用区域，集中在首页的快速入口上，也是今天多数应用中会使用的组件。下面，我们会讲解国内主流应用中的几种装饰图标的设计。
</description>
      <category>设计</category>
      <pubDate>Mon, 14 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>装饰图标最主要的应用区域，集中在首页的快速入口上，也是今天多数应用中会使用的组件。下面，我们会讲解国内主流应用中的几种装饰图标的设计。</p>

<p><img src="@source/design/icon/assets/decorate-type.jpg" alt="装饰图标分类"></p>
<h2 id="扁平插画风格" tabindex="-1"> 扁平插画风格</h2>
<p>装饰图标的主要作用是丰富视觉体验，对于识别性的要求较低，所以我们可以在这里应用更复杂的图形和添加更多的细节。在这里的扁平插画风格设计更具象，而不是像工具图标一样的抽象化，所以完整的采用扁平插画的设计是没问题的。</p>
<p>例如在肯德基客户端首页的服务分类中，使用的图标就是依据扁平插画的形式设计的，有较多的色彩和完整的细节。</p>
<p><img src="@source/design/icon/assets/KFC.jpg" alt="肯德基设计图"></p>
<p>这类图标的设计并不困难，只要具备了工具图标的设计基础，就可以很快学会并运用。它的设计特征是这样的，先通过绘制具体的图形轮廓，然后为这个轮廓内添加细节，并对不同的面填充不同的色彩进行区分。</p>
<p>下面，我们通过讲解几个图标的设计过程，帮助大家学习这种设计风格。</p>
<ol>
<li>
<p>优惠券图标</p>
<p>先通过模拟现实世界的优惠券样式，确定出基本的线性轮廓。</p>
<p><img src="@source/design/icon/assets/KFC-ticket1.jpg" alt="优惠券1"></p>
<p>但作为装饰图标来说，这样的设计目前有些简陋，左侧空出了大量的留白，所以我们要考虑如何增加细节来丰富这个区域。于是，使用 % 号就可以比较好的标示折扣。</p>
<p><img src="@source/design/icon/assets/KFC-ticket2.jpg" alt="优惠券2"></p>
<p>最后，开始为图标填色。因为在这套图标中，红色是主要基调，所以我们不能大面积的使用其它颜色，于是就将其中一侧进行留白处理，只修改了它描边的色彩。并且还在票据两侧的连接处添加了一个用来标示阴影的竖线。</p>
<p><img src="@source/design/icon/assets/KFC-ticket3.jpg" alt="优惠券3"></p>
</li>
<li>
<p>店铺图标</p>
<p><img src="@source/design/icon/assets/shop.jpg" alt="店铺图标"></p>
</li>
<li>
<p>我的卡包图标</p>
<p><img src="@source/design/icon/assets/wallet.jpg" alt="我的卡包"></p>
</li>
</ol>
<h2 id="渐变几何背景" tabindex="-1"> 渐变几何背景</h2>
<p>和其它风格比较，在快速入口中，线上案例应用得最多的风格其实是渐变几何背景的设计方案，即在一个应用渐变色的背景上贴了一个线性或面性的图标。</p>
<p><img src="@source/design/icon/assets/gradient-background.jpg" alt="渐变几何背景"></p>
<p>这种风格的设计，主要在于背景渐变色的应用，通常，在一组彩色快速入口的图标中，要让它们的渐变色看起来自然和谐，是需要技巧的。</p>
<p>例如有四个图标，首先要定义出不同的色相，然后再对它们应用相同的渐变模式。例如，使用相同的渐变角度，然后在渐变的起始色使用该色相，在结尾使用不同明度、饱和度的色彩。</p>
<p><img src="@source/design/icon/assets/gradient-background2.jpg" alt="渐变几何背景1"></p>
<p>之后，再在上方置入图标的图形，并为它们添加适当的阴影即可。</p>
<p><img src="@source/design/icon/assets/gradient-background3.jpg" alt="渐变几何背景2"></p>
<p>如果在这个基础上，还想再添加细节，那么就可以在上方的图形中添加一些折叠的阴影效果，强化立体感。</p>
<p><img src="@source/design/icon/assets/gradient-background4.jpg" alt="渐变几何背景3"></p>
<h2 id="炫彩渐变风格" tabindex="-1"> 炫彩渐变风格</h2>
<p>这是一个比较奇特的设计风格，在过去只存在于飞机稿中，是一种单纯为了追求视觉表现力的设计形式，通过高饱和的渐变、撞色，抓取浏览者的眼球。</p>
<p><img src="@source/design/icon/assets/shine.jpg" alt="炫彩渐变风格"></p>
<p>这类风格的设计，在确定了图形以后，就是为它们填充高饱和度的渐变色。和扁平插画比较不同的是，色彩的填充不是用来描绘物体的颜色，而仅仅是视觉表现的一种方法，所以颜色的添加追求的不是「合理」，而是纯粹的「好看」。</p>
<p>并且，通常这类图标还会使用前两年开始流行的彩色投影，增加界面本身的层次感。下面，我们也通过 3 个案例，为大家演示一下这类图标设计的过程。</p>
<p>案例 1:</p>
<p><img src="@source/design/icon/assets/shine1.jpg" alt="炫彩渐变风格1"></p>
<p>案例 2:</p>
<p><img src="@source/design/icon/assets/shine2.jpg" alt="炫彩渐变风格2"></p>
<p>案例 3:</p>
<p><img src="@source/design/icon/assets/shine3.jpg" alt="炫彩渐变风格3"></p>
<h2 id="实物贴图风格" tabindex="-1"> 实物贴图风格</h2>
<p>最后，讲讲实物贴图的图标风格。这种图标出现在涉及到实物产品的应用中，例如电商应用，智能硬件控制应用等等。</p>
<p><img src="@source/design/icon/assets/good.jpg" alt="实物贴图风格"></p>
<p>这类设计看起来很简单，只要画出一个几何的背景，并建立蒙版将实物图置入进去即可，但还是有不少新手会犯错误，下面我们主要说说常见的问题有哪些。</p>
<ol>
<li>
<p>物体的透视</p>
<p>和工具图标一样，我们要尽可能的保证整组图标中图形的形状和透视可以统一，如果实物图采用的透视不一致，那么空间的对立感就更强，也容易被用户觉察到违和感。</p>
<p><img src="@source/design/icon/assets/good1.jpg" alt="实物贴图风格1"></p>
</li>
<li>
<p>形体和比例</p>
<p>当我们采用实物照片时，我们往往不能控制该物体完整的形状，但需要切记的是，不是物体本身是什么形状我们都要完整的置入进去。</p>
<p>比如入口中有口红和香水两种，口红是细长的而香水是圆形，那么我们可以做的就是放大口红，最终只展示它的局部，否则它们的对比会完全失衡。</p>
<p><img src="@source/design/icon/assets/good2.jpg" alt="实物贴图风格2"></p>
</li>
<li>
<p>图形的质感</p>
<p>实物的图形，还有一个非常重要的细节，就是它们的质感。这种质感指的不是物体本身的材质，而是摄影、后期产生的质感。如下图的对比，同一件商品，手机直出的图，和经过商品精修的图，展现出来的质感是完全不一样的。</p>
<p><img src="@source/design/icon/assets/good3.jpg" alt="实物贴图风格3"></p>
<p>如果强行将有精修痕迹和普通照片抠出来的商品放到一起，也只能给用户产生巨大的违和感。所以，如果提供给我们的素材本身质感不同，那么我们就要在 PS 中对它们进行调试，尽可能保证它们的一致。</p>
</li>
<li>
<p>前后对比</p>
<p>因为是摄影图，所以图形本身包含的细节会非常丰富，而且色彩也可能比较多。在采用了几何背景时，就要保证它能更好地衬托主体物。如果使用较强的颜色，或是太多细节，就会导致前后元素的分离度不足，无法凸显物体本身。所以，多数采用这种风格的设计案例中，背景用色都使用饱和度偏低的配色。</p>
<p><img src="@source/design/icon/assets/good4.jpg" alt="实物贴图风格4"></p>
</li>
</ol>
<p>只要不犯上面 4 种错误，那么设计这类图标时，就能保证最终的效果不会太差。</p>
<h2 id="小结" tabindex="-1"> 小结</h2>
<p>掌握以上这种风格的画法，已经可以应对绝大多数的需求和场景了。但这并不是终点，应用对于视觉风格的追求愈发的重要，想要尝试更多的设计风格，那么就需要掌握更多种装饰类图标的设计方法。需要大家在之后的时间里努力积累相关的技巧和思路。</p>
]]></content:encoded>
    </item>
    <item>
      <title>图标设计技巧</title>
      <link>https://mrhope.site/design/icon/skill.html</link>
      <guid>https://mrhope.site/design/icon/skill.html</guid>
      <source url="https://mrhope.site/rss.xml">图标设计技巧</source>
      <category>设计</category>
      <pubDate>Mon, 14 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>图标是 UI 设计中最基础也是很重要的部分，辅助人们更好的理解功能内容。随着扁平化设计风格的普及，图标的风格越来越简约，看似简单的图形，实际要准确的表达含义，也是需要注意一些方法的。下面是是图标设计的实用技巧。</p>
<h2 id="简单" tabindex="-1"> 简单</h2>
<p>一个图标一个非写实的表现。不需要担心图标不够真实，消除不必要的细节，用基本的形状只保留最基础的部分，让这个图标更容易被理解。</p>
<p><img src="@source/design/icon/assets/simple.jpg" alt="简单"></p>
<p>有时候图标会因为有更多细节而传达了更复杂的意思，这反而是样式问题!</p>
<h2 id="一致性" tabindex="-1"> 一致性</h2>
<p>在整个图标系统中，您的图标要保持同一种样式来确保图标完美协调。比如同样的形状，填充，描边粗细，尺寸等。要制定好可以被复用的栅格，规范和样式。</p>
<p><img src="@source/design/icon/assets/same.jpg" alt="一致性"></p>
<p>如果可以的话，尽可能重新设计这些图标，而不要混入其他不同风格的图标来使用。</p>
<h2 id="清晰" tabindex="-1"> 清晰</h2>
<p>设计「完美像素」的图标，特别是在图标非常小的时候。这样图标的描边就可以保持锐利，不会有模糊。注意半像素的情况出现，尽量避免小数点参数。</p>
<p><img src="@source/design/icon/assets/clear.jpg" alt="清晰"></p>
<p>这也可以帮您保持图标的辨识度，在您等比缩放他们的时候保持清晰。</p>
<h2 id="空间" tabindex="-1"> 空间</h2>
<p>确保您的图标的所有形状有足够的空间。笔画和空间过于狭小会使图标更难被理解。</p>
<p><img src="@source/design/icon/assets/with-space.jpg" alt="空间"></p>
<p>最少给 2px 的负空间</p>
<h2 id="视觉调整" tabindex="-1"> 视觉调整</h2>
<p>确保您的图标看起来是正确的，适当的调整元素的对齐来达到视觉上的平衡。</p>
<p><img src="@source/design/icon/assets/center-adjust.jpg" alt="视觉调整"></p>
<p>不要只关注参数，如果有需要就用上您的眼睛来衡量，轻微移动这些元素。</p>
<h2 id="布局规格" tabindex="-1"> 布局规格</h2>
<p>所有图标保持同样的尺寸，在图标周围定义一个可调整的内边距范围，尽量让元素设计在这个范围内。不要挤满所有元素。</p>
<p><img src="@source/design/icon/assets/layout.jpg" alt="布局规格"></p>
<p>当图标需要额外控件时可以超出这个内边距范围。</p>
]]></content:encoded>
    </item>
    <item>
      <title>启动图标设计指南</title>
      <link>https://mrhope.site/design/icon/start.html</link>
      <guid>https://mrhope.site/design/icon/start.html</guid>
      <source url="https://mrhope.site/rss.xml">启动图标设计指南</source>
      <category>设计</category>
      <pubDate>Mon, 14 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>想要在启动图标设计上入门，就要先从规范开始学习，然后了解不同的风格以及对应风格的设计过程。</p>
<h2 id="启动图标的设计规范" tabindex="-1"> 启动图标的设计规范</h2>
<p>说到启动图标的规范，首先会想到的，就是 iOS 提供的图标栅格。通过这个栅格，会规范图形的尺寸，以及所处的位置。</p>
<p><img src="@source/design/icon/assets/ios-grid.jpg" alt="iOS 提供的图标栅格"></p>
<p>这个模板和工具图标的使用方法类似，我们在后面的案例进一步讲解。接着，来说明一个更重要的问题，就是启动图标画布的尺寸。</p>
<p>默认的情况下，我们使用 1024×1024 尺寸来设计启动图标，这个参数在 iOS 和 Android 中都适用。</p>
<p>之所以使用这么大的尺寸，是由屏幕分辨率的差异和使用场景导致的。</p>
<p>第一，在手机硬件中，根据屏幕规格的不同，展示图标的实际像素量也不同，即图标的尺寸会发生改变。</p>
<p>例如在 1x 的屏幕中，图标使用 60x60px；在 2x 的屏幕中，就使用 120x120pt；3x 则是 180×180。</p>
<p><img src="@source/design/icon/assets/app-size.jpg" alt="不同的图标大小"></p>
<p>第二，不同设备和显示场景里，应用的图标尺寸也不一样。对于一个真实的项目来说，图标不是只放在手机上运行，无论是 iOS 还是 Android 的 APP 都可以在 PAD 上安装，图标尺寸规格就不同。并且，在网页或者手机应用商店里，也需要展示启动图标，显示的规格和真实应用列表中又不同。</p>
<p><img src="@source/design/icon/assets/app-size2.jpg" alt="不同的图标大小"></p>
<p>所以，在 iOS 官方的图标模板中，我们会看见里面罗列了非常多的图标尺寸，我们只需要设计第一个 1024 规格的，将这个图标置入到 PS 的智能对象，或者 Sketch 的 Symbol 中，就可以一次性生成所有尺寸，不需要我们自己手动调整各种规格的图标输出。</p>
<p><img src="@source/design/icon/assets/app-generate.jpg" alt="不同图标生成"></p>
<p>应该有同学这时候还会产生疑问，模板里的画布就是一个正方形，但是大多数手机的 启动图标使用的是圆角，所以，应该如何制作这个圆角，以及它的相关参数呢?</p>
<p>真实项目中，除非项目的特定要求，只需要提交正方形的图形即可，之后无论是 APP Store，还是多数安卓应用商店，都会「自动」对该图形进行裁切，生成符合自己系统的圆角图标。</p>
<p><img src="@source/design/icon/assets/app-cut.jpg" alt="图表的剪切"></p>
<p>如果我们想要设计出正方形图形后预览真实的效果，就可以用我们准备的 PSD 模板，将正方形置入到模板中即可。</p>
<p><img src="@source/design/icon/assets/app-template.jpg" alt="启动图标模板"></p>
<p>在设计已经确认以后，我们就要导出这些图标。因为启动图标有很多拟物的设计或会使用真实的摄影素材，所以应用商店提交的格式会选用位图格式而不是矢量格式，所以导出启动图标，只需要导出对应尺寸的 PNG 即可。</p>
<h2 id="启动图标的设计演示" tabindex="-1"> 启动图标的设计演示</h2>
<h3 id="图标形式" tabindex="-1"> 图标形式</h3>
<p><img src="@source/design/icon/assets/app-icon2.jpg" alt="图标形式"></p>
<p>在一些比较基础的应用类型中，通常会直接使用工具图标的图形设计启动图标。因为基础的 APP 服务大多有表意极其清晰的工具图标与之对应，例如邮箱、计算器、音乐、地图等类型应用，企业往往在使用一些抽象的品牌化图形与表意更清晰的工具图标中选择后者。</p>
<p>工具图标的设计其实很简单，就是在画板中完成两种元素的设计，一个是背景，一个是上方图标。</p>
<p>背景的设计，比较常见的有两种类型，纯色、渐变。而上方图标的设计里，包含的类型就是我们前面讲过的几种常见的工具图标。所以您看，只要将它们组合，就可以很轻松地设计出符合主流特征的启动图标。</p>
<p><img src="@source/design/icon/assets/app-combine.jpg" alt="APP 组合"></p>
<p>所以，如果我们要设计一款笔记应用，那么就可以先画一个线性的笔记图标，然后再将它置入格线模板中确认大小，再分别为它们上色，就可以完成设计了。</p>
<h3 id="文字形式" tabindex="-1"> 文字形式</h3>
<p><img src="@source/design/icon/assets/app-text2.jpg" alt="文字形式"></p>
<p>文字形式的设计，背景和上方一样，也只使用纯色和渐变，但这种设计的主要难点在于字体的设计上。</p>
<p>想要放文字，大家首先想到的肯定是直接用字体打进去，但是切记，字体的商业版权问题是不能视而不见的。选择字体前，一定要关注该字体是否是免费的，百度或者官网都可以查询。或者一开始就在免费字库中挑选，如思源黑、思源宋、王汉宗系列等等。</p>
<p>如果觉得直接使用字库文字太没有设计感，那可以选择做一次字体的二次创作，对于新手来说简单一点。即一开始挑选一个合适的字体，然后在 AI 中对该字体进行临摹，再对细节进行重新加工，比如衬线的调整，笔画粗细的调整等等。</p>
<p>比如要设计一个我的应用，那么我可以取「超级帅的 Mr.Hope」的第一个字 ── 超，作为图标上方的文字。然后我选用「方正兰亭大黑」作为基础字形，对它进行重构即可。</p>
<p><img src="@source/design/icon/assets/font-design.jpg" alt="字体设计"></p>
<p>最后建议，如果不是一些比较严肃或是传统的题材，尽量不要选用宋体或是楷体进行设计。</p>
<h3 id="拟物形式" tabindex="-1"> 拟物形式</h3>
<p><img src="@source/design/icon/assets/app-tool.jpg" alt="拟物形式"></p>
<p>虽然现在整体设计环境中，拟物已经被扁平取代，但不代表它已经消失，或是在形式上不合理。适当的拟物设计会让我们对应用功能的认识更清晰，且更有趣味性。</p>
<p>还是老惯例，我们从简单的拟物设计入手。目前拟物的领域中，使用最普遍的风格也是新手最容易学习的风格，即「轻拟物」的设计。这种风格需要刻画的细节相对较少，更易于我们掌握，只要能用好渐变即可。</p>
<p>比如，iOS 的官方应用 ── 文件，图标的形式就符合轻拟物的特征。简单分析一遍，即在确定完轮廓后，通过渐变填充来表示物体本身的高光和阴影，并添加投影来制造立体感。</p>
<p><img src="@source/design/icon/assets/app-tool-design.jpg" alt="iOS 文件设计"></p>
<p>如果要设计一些更复杂的拟物图形，可以通过多做拟物图标的练习会更有帮助。在今天扁平化图形当道的环境中，设计得精良的拟物图标往往可以在满屏的扁平图标中脱颖而出，助于吸引用户启动应用。</p>
<h2 id="小结" tabindex="-1"> 小结</h2>
<p>启动图标的介绍到这里就结束了，新手该掌握的知识点并不多。无论是更好的字体、图案、插画，都已经进入 LOGO 设计的范畴。如果要在这个领域进一步提升，那么针对性训练的效果反而不理想，需要长期积累视觉、图形的整体设计能力。</p>
]]></content:encoded>
    </item>
    <item>
      <title>图标</title>
      <link>https://mrhope.site/design/icon/</link>
      <guid>https://mrhope.site/design/icon/</guid>
      <source url="https://mrhope.site/rss.xml">图标</source>
      <description>本文介绍了 UI 设计中图标的相关介绍与技巧。
</description>
      <category>设计</category>
      <pubDate>Sun, 13 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>本文介绍了 UI 设计中图标的相关介绍与技巧。</p>

<h2 id="图标网站" tabindex="-1"> 图标网站</h2>
<ul>
<li>
<p><a href="https://www.iconfont.cn/" target="_blank" rel="noopener noreferrer">iconfont<ExternalLinkIcon/></a></p>
<p>阿里妈妈 MUX 倾力打造的矢量图标管理、交流平台。</p>
<p>设计师将图标上传到 Iconfont 平台，用户可以自定义下载多种格式的 icon，平台也可将图标转换为字体，便于前端工程师自由调整与调用。</p>
<p>强大的图标在线编辑与自定义下载</p>
<p>图标项目的项目管理、协同、分享</p>
</li>
</ul>
<h2 id="相关文档" tabindex="-1"> 相关文档</h2>
<p>图标是 UI 的设计体系最重要的组成部分之一，是任何 UI 界面中都不可或缺的视觉元素。了解图标相关的概念，以及正确绘制的方法，是入门 UI 设计的必备条件。</p>
<ul>
<li>
<p><a href="/design/icon/intro.html">图标介绍</a></p>
</li>
<li>
<p><a href="/design/icon/type.html">图标种类</a></p>
</li>
<li>
<p><a href="/design/icon/guide.html">图标设计指南</a></p>
</li>
<li>
<p><a href="/design/icon/software.html">图标设计软件</a></p>
</li>
<li>
<p><a href="/design/icon/draw.html">图标绘制流程</a></p>
</li>
<li>
<p><a href="/design/icon/rule.html">图标设计准则</a></p>
</li>
<li>
<p><a href="/design/icon/line.html">线性图标设计演示</a></p>
</li>
<li>
<p><a href="/design/icon/flour.html">面性图标设计指南</a></p>
</li>
<li>
<p><a href="/design/icon/decorative.html">装饰性图标设计指南</a></p>
</li>
<li>
<p><a href="/design/icon/start.html">启动图标设计指南</a></p>
</li>
<li>
<p><a href="/design/icon/skill.html">图标设计技巧</a></p>
</li>
<li>
<p><a href="/design/icon/apply.html">图标实践注意事项</a></p>
</li>
</ul>
<h2 id="相关要求" tabindex="-1"> 相关要求</h2>
<ul>
<li>
<p>了解图标的常见设计准则</p>
<ul>
<li>
<p>能够对一个图标的好坏做出评判。</p>
</li>
<li>
<p>了解不同的图标风格</p>
</li>
<li>
<p>能够从现有图表库中中选取合适的图标应用到项目中。</p>
</li>
</ul>
</li>
<li>
<p>简单了解图标的制作软件与制作方式</p>
<ul>
<li>
<p>能够制作简单的图标</p>
</li>
<li>
<p>在项目拥有一套完善图标风格，但部分图标存在缺失时能够自制图标补全。</p>
</li>
</ul>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>面性图标设计</title>
      <link>https://mrhope.site/design/icon/flour.html</link>
      <guid>https://mrhope.site/design/icon/flour.html</guid>
      <source url="https://mrhope.site/rss.xml">面性图标设计</source>
      <category>设计</category>
      <pubDate>Sun, 13 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>面性图标在操作中和线性图标的最大差别就在于描边和填充模式，我们知道为了满足像素对齐的要求，线性描边会在操作中产生很多不可控的因素，要用很多额外的操作步骤去弥补。在面性图标中，就不需要使用描边，并且使用相同的图标模板即可。</p>
<p><img src="@source/design/icon/assets/flour-icon.jpg" alt="面性图标"></p>
<p>下面就进入本篇的具体案例演示。</p>
<h2 id="基本面性风格" tabindex="-1"> 基本面性风格</h2>
<p><img src="@source/design/icon/assets/gen-flour-from-line.jpg" alt="使用线性图标生成面性图标"></p>
<p>如图所示，我们使用线性图标中的样式，设计成面性效果。具体的操作步骤就不需要再完整演示了，只需要将所有线性风格演示中的描边替换成填充，再使用对应的路径查找器功能即可。</p>
<p>需要注意的是，可能我们会习惯于使用线条工具绘制很多 1pt 宽的直线，这是错误的做法。我们需要使用矩形工具画出一个完整的闭合图形，再使用路径查找器工具或者对图形进行批量操作，这样才能保证统一。</p>
<p><img src="@source/design/icon/assets/flour-path.jpg" alt="面性图标路径"></p>
<p>还有，面性图标不代表完全不能出现「线性」元素，在一些特定的情况下，我们依旧要通过线条的形式展现图形轮廓，比如搜索图标的镜片，使用全填充的样式显然效果不理想，所以镂空镜片区域是不可避免的。</p>
<p><img src="@source/design/icon/assets/flour-search.jpg" alt="面性搜索图标"></p>
<p>虽然我们不可避免要使用「线性」的元素，但在面性风格中，这些图形的描边元素不能太细，应该使用不小于 2pt 的宽度。并且，为了保证图标的一致性，整套图标的线条都要尽可能使用相同的粗细，而不是这里使用了 2pt，在别的图标中就是 4pt。</p>
<h2 id="扁平插画风格" tabindex="-1"> 扁平插画风格</h2>
<p><img src="@source/design/icon/assets/flour-paint.jpg" alt="扁平插画风格"></p>
<p>扁平插画风格实际上是一个自由度非常高的图标风格，可以设计出很多有趣又极具创意的插画式图标。在本案例中，我们只讲解其中一种最基础的设计方式，便于新人入门。</p>
<p>最基础的扁平插画，就是在面性图标的基础上，将图形拆分成不同面的组合，然后分别为这些面填充纯色即可。比如心型图标，看起来像是只有一个面的图形，但我们可以人为居中将它分割成两个面，然后填充同色系的不同明度，就可以得到一个扁平插画风格的图标。</p>
<p><img src="@source/design/icon/assets/flour-heart.jpg" alt="爱心示例"></p>
<p>类似搜索或消息图标这样有镂空区域的图标，我们就可以为镂空区域填充不同的色彩，使其作为独立的面呈现，也能达到相同的风格。</p>
<p><img src="@source/design/icon/assets/flour-search2.jpg" alt="搜索示例"></p>
<p>最后一种，就是将图标「拟真」化。比如眼睛图标，我们可以用接近真实眼睛的样式来创作，为它增加瞳孔、高光等细节，只要依旧使用纯色填充，且将细节数量保持在合理的范围内，就不会与其它图标产生冲突。</p>
<p><img src="@source/design/icon/assets/flour-eye.jpg" alt="眼睛示例"></p>
<h2 id="彩色渐变风格" tabindex="-1"> 彩色渐变风格</h2>
<p><img src="@source/design/icon/assets/gradient.jpg" alt="彩色渐变风格"></p>
<p>在面性图标的彩色渐变中，有多种更细致的设计类型，比如整个图标采用同一渐变，或者图标中不同的面采取不同的渐变方式。</p>
<p>整个图标使用同一渐变色的做法，和线性图标的渐变方法几乎一样，只要在开始填充渐变前将所有图层进行合并即可。我们来讲解一个比较特殊的基础渐变风格——不同透明度渐变。</p>
<p>比如心形图标，我们把它划分成了两个不同的面的组合，然后都使用了红色的渐变色，一强一弱。通常，我们只要先设定出较强的渐变，然后再复制这个渐变色到另一个面中，降低它的透明度即可。</p>
<p><img src="@source/design/icon/assets/gradient-design.jpg" alt="渐变设计"></p>
<p>在使用了透明度的图形中，要注意的是为了保证在实际使用中不让图形背面的元素影响到图标色彩本身，我们要将这些图形复制一层填充成白色并置于底部。</p>
<h2 id="透明叠加风格" tabindex="-1"> 透明叠加风格</h2>
<p><img src="@source/design/icon/assets/transparent-add.jpg" alt="透明叠加风格"></p>
<p>最后，就是这类透明叠加的设计风格了。和线性图标中的叠加设计方式一样，我们需要将图形拆分成若干面，才能创造出重叠的区域。</p>
<p>在这个方案中，图标尽可能使用纯色，会比使用渐变的效果更好，原因在于我们对重叠区域色彩的控制上。可能很多同学看到这个风格，会以为叠加的区域只要控制透明度就可以了，但这种效果通常很不理想，尤其在配色为撞色上，相交部分的色彩就会有「朦胧」感，缺少通透的舒适性，并且图形本身的饱和度也会受到影响，比如下面的演示:</p>
<p><img src="@source/design/icon/assets/transparent-add2.jpg" alt="透明叠加设计1"></p>
<p>通常，相交区域的色彩要另外配置。也就是在绘制好图形的所有轮廓以后，将它们一起选中，然后使用「图像生成工具」，再为相交的区域单独选择配色。下图就是单独挑选的两个配色和透明度的方式对比。</p>
<p><img src="@source/design/icon/assets/transparent-add3.jpg" alt="透明叠加设计2"></p>
<h2 id="总结" tabindex="-1"> 总结</h2>
<p>相对于线性图标的设计而言，面性工具图标的设计就简单很多，虽然设计风格有非常多的延展性和可能性，但大家始终要记得它们依旧是「工具图标」，识别性是优先于视觉风格的，所以切勿过度强调视觉性而将它们做成了装饰性图标。</p>
]]></content:encoded>
    </item>
    <item>
      <title>图标设计指南</title>
      <link>https://mrhope.site/design/icon/guide.html</link>
      <guid>https://mrhope.site/design/icon/guide.html</guid>
      <source url="https://mrhope.site/rss.xml">图标设计指南</source>
      <category>设计</category>
      <pubDate>Sun, 13 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="图标的可用性" tabindex="-1"> 图标的可用性</h2>
<p>图标可用性，顾名思义就是图标绘制出来是否能被用户所看懂并快速识别，是否可以为业务赋能。以下是总结的四条图标绘制的评判标准。</p>
<p><img src="@source/design/icon/assets/rule.jpg" alt="图标绘制的评判标准"></p>
<h3 id="凸显性" tabindex="-1"> 凸显性</h3>
<p>用户是否能在某页面上迅速找到该图标，凸显性的目的是可以快速查找，帮助用户做选择。图标在识别的速度上远远大于文字，所以在一些页面中的重要功能使用图标的目的是为了吸引用户的注意力，让重要功能得到凸显，提高重要功能的点击率。</p>
<h3 id="可识别性" tabindex="-1"> 可识别性</h3>
<p>图标的目的是要让用户猜出他看到的图标所表达的意义，有什么作用，以及点击后会出现什么样的场景，发生什么样的事情。所以一个图标的好与坏最重要的因素就体现在这里: 图标的可识别性与可预知性。</p>
<div><p>影响图标可识别性的三点因素</p>
<ul>
<li>视觉复杂性: 图标的细节与组合图形的元素</li>
<li>熟悉性: 图标中图形所表达语义的熟悉程度</li>
<li>具体性: 图标或者图标中的图形与现实生活中物体的相似程度</li>
</ul>
</div>
<h3 id="美观度" tabindex="-1"> 美观度</h3>
<p>图标是否美观，对用户是否有足够的吸引力。在《设计通用法则》一书中有一条设计法则是: 美即适用效应。不管任何事物，美丽的外表都会给人带来好感，让人觉得这种事物在任何方面都非常美好。作为设计师，把一件事物美观化是一件终生的必修课，用户对图标或者界面的第一印象就是始于颜值。</p>
<h3 id="业务属性" tabindex="-1"> 业务属性</h3>
<p>图标是否符合业务属性，是否可以唤起用户的使用情绪，提高点击率，起到为业务赋能的作用。在界面中图标最终目的不只是让用户觉得它美观，而是要为产品赋能，什么是为产品赋能呢? 通俗来说就是使图标能够提升点击率从而给公司创造收益。</p>
<h3 id="图标如何为产品赋能" tabindex="-1"> 图标如何为产品赋能</h3>
<ul>
<li>
<p>符合产品与业务属性: 比如儿童类产品，图标就要圆滑，多彩，看起来萌一点的感觉；如果是金融类的产品就应该使用微圆角，直角，中性色，金色来代表金融的庄严感与高级感。</p>
</li>
<li>
<p>唤起用户的使用情绪: 比如在大众点评 app 中，有关与食品的图标都使用橙色的拟物，因为暖色可以给人们带来食欲感，微拟物配合暖色系就可以唤起用户对食品的情绪感。</p>
</li>
<li>
<p>引导用户点击，提升点击率: 想要让用户点击一个内容，那必须要有足够的吸引力吸引用户去点击，一般来说美观度越高、趣味元素越多的图标可以占据大部分的吸引力，一个图标在页面中所占的比例也会影响对用户的吸引力，合理的文案搭配也会吸引用户去点击，比如优惠信息，新功能提示等。</p>
</li>
</ul>
<h2 id="图标类型选取" tabindex="-1"> 图标类型选取</h2>
<h3 id="线性图标" tabindex="-1"> 线性图标</h3>
<p>线性图标，顾名思义，即图标是由直线、曲线、点在内等元素组合而成的图标样式。</p>
<p><strong>优点</strong>:</p>
<p>线性图标辨识度高，清晰唯美，简约易看，不会对页面造成太多的视觉干扰。</p>
<p><strong>缺点</strong>:</p>
<p>线性图标的创作空间较少，太复杂的线性图标看起来会让人感觉到累。</p>
<h3 id="面性图标" tabindex="-1"> 面性图标</h3>
<p>面性图标，即使用对图形内容进行色彩填充的图标样式。</p>
<p><strong>优点</strong>:</p>
<p>面性图标是现实生活中物体的缩影，其表意能力强，细节丰富，色彩丰富，情绪感强，视觉突出，创作空间大等。面性图标可以让用户迅速定位图标位置，快速预知点击后的状态。</p>
<p><strong>缺点</strong>:</p>
<p>面性图标在页面中不可过多出现，否则会造成页面臃肿，难分主次，用户视觉疲劳。</p>
<h3 id="混合型图标" tabindex="-1"> 混合型图标</h3>
<p>在设计图标类型的时候，不一定局限于单纯的线性与面性，也可以两者结合，让图标即有线性描边的轮廓，还有色彩填充的区域。</p>
<p>混合型图标可以让页面变得更加有活力，同时还可以吸引用户的注意力，美观与创意性强。</p>
<p>但是混合型图标在商业产品中要谨慎使用，因为使用不当会让页面变得杂乱不堪，用户无法识别图标表达的语义。</p>
<p><img src="@source/design/icon/assets/icon-type.jpg" alt="不同图标类型"></p>
<h2 id="图标的色彩" tabindex="-1"> 图标的色彩</h2>
<h3 id="色彩情绪" tabindex="-1"> 色彩情绪</h3>
<p>色彩情绪即颜色心理，指不同波长色彩的光信息作用于人的视觉器官，通过视觉神经传入大脑后，经过思维，与以往的记忆及经验产生联想，从而形成一系列的色彩心理反应。在任何场景下合理使用色彩心理可以调起用户情绪，还可以让用户产生联想进而快速识别。</p>
<p>在设计图标的时候，合理的运用色彩情绪，会使图标更具有科学性，可以让用户在使用的过程中更加自然、舒服，同时也会增加用户的识别速度唤起用户的使用情绪。</p>
<div><p>色彩情绪表</p>
<p><img src="@source/design/icon/assets/color-emotion.jpg" alt="色彩情绪表"></p>
</div>
<h3 id="配色方法" tabindex="-1"> 配色方法</h3>
<p>在配色时，应采用更具备科学性、更符合人类感官的 HSB 系统进行配置。在根据主色配置渐变色时，通常在主色的基础上加白或者加黑。但是只加入大量的白或者黑就会改变原本色彩的明度与饱和度，从而使画面显得雾蒙蒙的，不够清晰通透。正确的做法是在给主色变亮减暗的同时，改变主色的饱和度。在 hsb 色相条中，最亮的三个颜色分别是，蓝紫色，青绿色与黄色，如果需要加亮主色就在混白的同时将蓝色向青色改变色相，如果需要减暗则是相反，这样在调制渐变色变化的过程中不会出现太脏的颜色。</p>
<p><img src="@source/design/icon/assets/color-plan.jpg" alt="色调"></p>
<h3 id="配色方案" tabindex="-1"> 配色方案</h3>
<h4 id="常见的色彩搭配" tabindex="-1"> 常见的色彩搭配</h4>
<ul>
<li>中性色(黑白) + 主色</li>
<li>主色 + 点缀色</li>
<li>主色 + 透明度</li>
<li>单渐变</li>
<li>双渐变错层</li>
<li>撞色叠加穿透等</li>
</ul>
<p>一般常用的就是 中性色 + 主色、主色 + 点缀色。</p>
<h4 id="点缀色配色" tabindex="-1"> 点缀色配色</h4>
<ul>
<li>互补色: 互补色就是在色环上距离 180° 的色彩，形成具有视觉冲击力的色彩。</li>
<li>近似色: 近似色是在色环上距离 45° 左右的色彩，形成的配色效果风格和谐统一。</li>
<li>对比色: 对比色是在色环上 120° 左右的色彩，可以产生较为强烈鲜明的视觉效果。</li>
</ul>
<p><img src="@source/design/icon/assets/color-rule.jpg" alt="色调"></p>
<h2 id="图标绘制技巧" tabindex="-1"> 图标绘制技巧</h2>
<h3 id="像素对齐" tabindex="-1"> 像素对齐</h3>
<p>在绘制图标的时候，应该将图标的每个像素尽量对齐于像素点，这样导出图标时像素的边缘不会出现锯齿，不会出现过于模糊的情况。通常在绘制时去除绘制软件中 x 与 y 轴，宽(w)与高(h)的小数点，这样就可以避免无法对齐像素的情况。</p>
<p><img src="@source/design/icon/assets/align.jpg" alt="图标对齐"></p>
<h3 id="图标参考线" tabindex="-1"> 图标参考线</h3>
<p>在绘制两个或者以上的图标时，为了避免多个图标出现大小不一的情况，应该使用由谷歌材料设计语言提供的图标参考线进行绘制，使用图标盒子可以让一整套图标在视觉效果上更加统一和谐，不会出现一大一小一长一短的情况。</p>
<p><img src="@source/design/icon/assets/reference-line.jpg" alt="图标参考线"></p>
<h4 id="使用方法" tabindex="-1"> 使用方法</h4>
<p>先绘制一个 152×152px 的正方形，一个 176×176px 的正圆形，一个宽 176×128px 的水平矩形和一个 128×176px 的垂直矩形，圆角为 4px，然后将这个四个形状进行水平居中对齐，之后得出一个图标的参考线。</p>
<p>在宽度相等的情况下，正方形的面积要大于正圆的面积，所以在绘制圆形图标时应该将圆形的上下左右四个顶点顶齐与图标盒子正方形区域的四条边；在绘制方形图标时应该将方形的四个角点顶齐与圆形参考线的外围边；在绘制横向矩形与纵向矩形图标时，应该将图标的左右边或者是上下边控制在正方形的参考线之内，这样矩形图标绘制出来会更加的圆润，相对于其他的形状图标更加匹配。</p>
<p><img src="@source/design/icon/assets/layout.jpg" alt="图标布局"></p>
<h3 id="可访问性" tabindex="-1"> 可访问性</h3>
<p>图标必须要保证清晰度，可辨别性。不管是在强光下还是正常光下都需要良好的可读性。这就需要图标不论是自身元素之间的对比度还是和页面底板背景之间的对比度都需要很好的可读性。检测图标的可读性通常要将图标的背景色底板在黑色和白色之间进行切换对比，不论是黑色还是白色的背景都可以看清图标的全部细节，还需要确保图标中的每一种颜色都是可见的。第二就是将图标拿到强光下进行观察，在强光下是否可以看清图标的主题结构，图标是否有足够的辨识度。</p>
<p>在绘制图标时，可以参考 WCAG 2.1: 图形和用户界面组件的对比度至少为 3 : 1 的标准进行相应配色，以达到良好的可视状态。</p>
<p>可访问性测试: <a href="https://webaim.org/resources/contrastchecker/" target="_blank" rel="noopener noreferrer">https://webaim.org/resources/contrastchecker/<ExternalLinkIcon/></a></p>
<p><img src="@source/design/icon/assets/access.jpg" alt="可访问性"></p>
<h3 id="统一性" tabindex="-1"> 统一性</h3>
<p>在绘制多个类型相同的图标时，需要注意这一套图标合集需要在视觉上保持统一性。在一整套产品中，会有很多种图标，但是图标的功能不一样，所表达的内容也不同。这时，图标一致性的意义就体现出来了，根据格式塔原理中的相似性原则: 人们会将如元素彼此相似的东西感知为一组。这也意味着如果具有相同功能、含义和层次结构级别的元素，则应在视觉上保持统一匹配。通常倾向于将彼此相似的元素视为同一个分组，相似性可以帮助组织和分类页面里的元素对象，并将它们与特定的含义或功能相关联。有不同的方法可以使元素被认为是相似的，这些方法包括颜色、大小、形状、纹理、尺寸和方向的相似性。</p>
<p>图标内容的统一会让用户明白相似的图标所代表的的功能也相同，而且在视觉上也更加和谐美观。因此在绘标后还需检查线条的粗细比重，边角的大小，配色方案，细节层次和设计元素在整个合集中是否是不变且一致的。</p>
<p><img src="@source/design/icon/assets/union.jpg" alt="统一性"></p>
<h3 id="图标呼吸感" tabindex="-1"> 图标呼吸感</h3>
<p>呼吸感的意思就是适当留白。在设计中，适当的留白可以突出主体内容，让内容具备易看性。不管是图标还是界面，元素与元素之间都应该存在一定的间距。在图标的绘制过程中，图标元素之间的间距不宜过近，元素也不宜过多。图标是一个物体的简略缩影，目的是为了表达内容，让用户快速理解，但是在有限的空间中，太过复杂的细节会影响图标的识别速度。因此在图标的绘制过程中应该删除所有无法传达图标意义的元素，避免使图标变得太过复杂难以识别。</p>
<p><img src="@source/design/icon/assets/space.jpg" alt="呼吸感"></p>
<h3 id="合理运用布尔运算" tabindex="-1"> 合理运用布尔运算</h3>
<p>布尔运算在设计行业中被得到广泛的运用，比如工业设计，影视后期，logo 设计等，布尔运算具有一致性与规范性的优点。在设计面性图标的时候可以合理使用布尔运算进行绘制，这样绘制的图标具有吸引力和说服力。</p>
<p><img src="@source/design/icon/assets/bool.jpg" alt="合理运用布尔运算"></p>
<h3 id="页面层次感" tabindex="-1"> 页面层次感</h3>
<p>在页面中，有需要吸引用户点击的图标，也有起到辅助作用的指示图标，还有引导用户操作的图标，这些图标在页面中占据着不同的地位.在所有图标中，有色图标强于无色图标，多色图标强于单色图标，面性图标强于线性图标，带背景图标强于无背景图标，在设计图标的时候应该根据业务需要进行视觉强弱不同的设计。</p>
<p><img src="@source/design/icon/assets/index.jpg" alt="层次感"></p>
<h3 id="符合业务属性" tabindex="-1"> 符合业务属性</h3>
<p>如文上所说，图标采用与业务相符合的色彩搭配会让用户在使用的过程中更加自然、舒服，同时也会增加用户的识别速度，唤起用户的使用情绪。一个图标的绘制是否具备商业价值也恰恰体现在这里。</p>
<p>如下图所示，左图是斗鱼直播 APP 的截图，右图是京东金融的图标截图。这两款产品的业务以及所对应的用户群体完全不一样，斗鱼是一款直播的产品，直播面向的用户群体是青少年，所以整体的产品调性是: 萌、活泼、多彩、绚丽、时尚等，斗鱼直播的图标绘制需要面向年轻人，色彩的高饱和与有趣的元素来抓住用户的眼球。但是京东金融是一款理财的产品，面向的用户则是中老年，大多数都是有一些存款的人，这些人不需要斗鱼那样花里胡哨的元素，他们只在乎这个产品是否安全，利息是否高，所以京东金融这个产品的整体风格就需要偏向于: 安全、高端、大气，这样才能给用户从视觉上营造信任感。设计图标时通常使用产品的调性作为主风格，但是像美团淘宝这些业务众多的产品中，就需要根据产品下的细分业务进行风格定位，然后设计中相应融入产品的品牌元素，使用合理的色彩情绪等让图标变得更符合业务的风格。</p>
<p><img src="@source/design/icon/assets/location.jpg" alt="图标风格"></p>
<h2 id="最终测试" tabindex="-1"> 最终测试</h2>
<p>使用前，还需要测试这一组图标的重心是否统一，常用的方法是使用标准的正圆形和正方形来和所有绘制的图标进行对比，保证所有的图标重心相近，视觉统一。也可以采用不同角度的观察法，可以从上下左右四个角度去观察图标，看看图标在不同的角度下重心是否统一。</p>
<p><img src="@source/design/icon/assets/center.jpg" alt="图标重心"></p>
]]></content:encoded>
    </item>
    <item>
      <title>图标介绍</title>
      <link>https://mrhope.site/design/icon/intro.html</link>
      <guid>https://mrhope.site/design/icon/intro.html</guid>
      <source url="https://mrhope.site/rss.xml">图标介绍</source>
      <category>设计</category>
      <pubDate>Sun, 13 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="图标的基本认识" tabindex="-1"> 图标的基本认识</h2>
<p>图标，是一种图形化的标识，它有广义和狭义两种概念，广义指的是所有现实中有明确指向含义的图形符号，狭义主要指在计算机设备界面中的图形符号，有非常大的覆盖范围。</p>
<p>对于 UI 设计师而言，主要针对的就是狭义的概念，它是 UI 界面视觉组成的关键元素之一。</p>
<p>在当下最常见的扁平化设计风格中，界面的实际视觉组成只有 4 种元素，图片、文字、几何图形、图标。</p>
<p><img src="@source/design/icon/assets/app-layout.jpg" alt="由图片、文字、几何、图标组成的界面"></p>
<p>可以说，图片、文字、几何图形的运用，都只用到排版的技巧，而图标，是 UI 设计中除了插画元素以外唯一需要「绘制」、「创作」的元素，一涉及到这两件事，难度就直线上升了。</p>
<p>本来往界面里丢一些方方圆圆、贴几张图、填一些字，就可以把界面做出来了，比如 Clear APP，不仅工作量少，而且还符合极简原则，为什么还要吃力不讨好的设计图标?</p>
<p><img src="@source/design/icon/assets/clear-app.jpg" alt="Clear APP 的截图"></p>
<p>这就涉及图标作用的探讨了，本文就不长篇大论从上古时期人类与图形符号的纠葛开始写了，就谈对于图形界面本身，为什么图标有这么重要的地位，没它不行?</p>
<p>有两个原因，第一文字虽然也是一种图形符号，但相对于图标而言，文字实在太复杂了，在识别效率上有先天的劣势。再者，不同的语言，文字的长度也不同，如果换成阿拉伯语或者俄罗斯语，或许一行还装不下所有文字。图标可以以一种更高效的方式，将想要传递的信息进行浓缩，不仅易于识别，也能让界面更简洁，利于排版，比如下方案例。</p>
<p><img src="@source/design/icon/assets/icon-effect.jpg" alt="应用文字替换了图标的对比"></p>
<p>第二点，就是关于视觉的观赏性。有些页面中，如果把图标去掉了，也丝毫不会影响操作效率，以及对内容的理解。但没有图标，缺少这些点缀，这个页面看起来就会太枯燥，最好的例子就是应用的设置页了，见下方案例。</p>
<p><img src="@source/design/icon/assets/icon-compare.jpg" alt="设置页有图标和没有图标的对比"></p>
<h2 id="总结" tabindex="-1"> 总结</h2>
<p>在 UI 的界面中，图标的主要作用是用来高效地传递信息，以及起到美化界面的作用。</p>
]]></content:encoded>
    </item>
    <item>
      <title>线性图标设计</title>
      <link>https://mrhope.site/design/icon/line.html</link>
      <guid>https://mrhope.site/design/icon/line.html</guid>
      <source url="https://mrhope.site/rss.xml">线性图标设计</source>
      <description>线性图标是所有图标中最基础的设计形式，也是最简单的入门。在我们后续设计其它的风格图标前，首先要通过练习线性图标来打下坚实的基础。
</description>
      <category>设计</category>
      <pubDate>Sun, 13 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>线性图标是所有图标中最基础的设计形式，也是最简单的入门。在我们后续设计其它的风格图标前，首先要通过练习线性图标来打下坚实的基础。</p>

<p><img src="@source/design/icon/assets/line-icon.jpg" alt="线性图标"></p>
<h2 id="设计注意事项" tabindex="-1"> 设计注意事项</h2>
<p>设计线性图标需要注意:</p>
<ul>
<li>制图的规范性</li>
<li>图形的合理应用</li>
</ul>
<p>只要图形的设计能达到这两个要求，才能在进一步的创作中施展拳脚。</p>
<p>线性图标的设计首先要确定图标的尺寸、描边的粗细和绘制图标的栅格系统，所以先确定图标的规格为 28pt * 28pt，使用 2pt 的内描边(设计中 PT 可以等同 PX )，然后再画出栅格，并进行编组。</p>
<p><img src="@source/design/icon/assets/grid-example.jpg" alt="栅格示例"></p>
<h2 id="设计演示" tabindex="-1"> 设计演示</h2>
<h3 id="搜索图标" tabindex="-1"> 搜索图标</h3>
<p>搜索图标是 APP 中最常见的图标，绘制原理也很简单，就是一个圆和圆角矩形的结合。</p>
<ol>
<li>
<p>在案例中，设计的风格主要是偏圆润一点的，那么镜片的比例就要偏大。在这里使用了尺寸为 20pt 的圆，和一个宽 2pt 高 9pt 的圆角矩形。</p>
<p><img src="@source/design/icon/assets/search-step1.jpg" alt="搜索图标绘制步骤 1"></p>
</li>
<li>
<p>将矩形和圆形进行连接并且垂直方向居中、编组，然后旋转 45 度。之所以要先垂直再旋转，是因为如果直接画出一条倾斜的矩形再去连接镜片，那么矩形的中轴将很难移动到和圆心相交的位置。</p>
<p><img src="@source/design/icon/assets/search-step2.jpg" alt="搜索图标绘制步骤 2"></p>
</li>
<li>
<p>调整搜索图标在模版中的位置，因为几何视觉差的关系，要让图标重心平稳，那么就要向右下角偏移，最终效果见下图。</p>
<p><img src="@source/design/icon/assets/search-step3.jpg" alt="搜索图标绘制步骤 3"></p>
</li>
</ol>
<h3 id="聊天图标" tabindex="-1"> 聊天图标</h3>
<p>聊天图标的设计和搜索图标一样，需要通过几何图形的组合完成，但不同于搜索图标的是，该图标需要应用到路径查找器面板的相关功能。</p>
<ol>
<li>
<p>首先要画出聊天气泡的外轮廓，可以看出它是由一个圆角矩形和三角形组成，所以第一步要做的就是画出这两个元素。</p>
<p><img src="@source/design/icon/assets/talk-step1.jpg" alt="聊天图标绘制步骤 1"></p>
</li>
<li>
<p>将它们连接并垂直方向居中，然后使用路径查找器面板的「联集」选项，将它们合并成一个图形。</p>
<p><img src="@source/design/icon/assets/talk-step2.jpg" alt="聊天图标绘制步骤 2"></p>
</li>
<li>
<p>在轮廓内部画一长一短两条 2pt 宽的矩形。</p>
<p><img src="@source/design/icon/assets/talk-step3.jpg" alt="聊天图标绘制步骤 3"></p>
</li>
<li>
<p>调整图标在模版中的位置，根据视觉差要将图标向下偏移，最终效果见下图。</p>
<p><img src="@source/design/icon/assets/talk-step4.jpg" alt="聊天图标绘制步骤 4"></p>
</li>
</ol>
<h3 id="查看图标" tabindex="-1"> 查看图标</h3>
<p>查看图标的设计也需要应用路径查找器的功能，实现过程也非常简单。</p>
<ol>
<li>
<p>画两个 2pt 描边，垂直方向对齐且相交的圆，并使用路径查找器中的「交集」功能获取它们相交的部分。</p>
<p><img src="@source/design/icon/assets/view-step1.jpg" alt="查看图标绘制步骤 1"></p>
</li>
<li>
<p>将这个图形置入到模版中，然后可以通过拖动图形大小的方式，更改它的左右两边到像素对齐的位置(这个形状的比例发生变化是没问题的)。</p>
<p><img src="@source/design/icon/assets/view-step2.jpg" alt="查看图标绘制步骤 2"></p>
</li>
<li>
<p>在中央位置添加一个 8pt 大小的圆，就完成了最终的效果。</p>
<p><img src="@source/design/icon/assets/view-step3.jpg" alt="查看图标绘制步骤 3"></p>
</li>
</ol>
<h3 id="心形图标" tabindex="-1"> 心形图标</h3>
<p>心形图标如何绘制，对于新人来说是一个非常常见的问题。很多人都不知道具体该怎么画出这个图形，而心形图标又几乎被运用在所有应用中，所以就要巧妙运用几何图形的组合。</p>
<ol>
<li>
<p>画两个矩形，一个竖直一个水平放置，并将上方和右侧的两个边缘进行圆角处理。</p>
<p><img src="@source/design/icon/assets/heart-step1.jpg" alt="心性图标绘制步骤 1"></p>
</li>
<li>
<p>将两个图形进行移动相交，并保证上方和右侧的两个半圆正好紧贴在另一个矩形的边缘，然后使用路径查找器中的 「联集」功能，就可以得到一个躺着的心形。</p>
<p><img src="@source/design/icon/assets/heart-step2.jpg" alt="心性图标绘制步骤 2"></p>
</li>
<li>
<p>将心形进行旋转，并置入到模版中，添加圆角细节，略微向下偏移，就可以得到下图的最终效果。</p>
<p><img src="@source/design/icon/assets/heart-step3.jpg" alt="心性图标绘制步骤 3"></p>
</li>
</ol>
<h3 id="卡券图标" tabindex="-1"> 卡券图标</h3>
<p>卡券图标有一个外轮廓和内部的虚线部分，外轮廓在上下有两个半圆的凹槽，要通过两个圆进行裁切。</p>
<ol>
<li>
<p>画一个 28pt * 24pt 的圆角矩形，并在上下方各画一个 4pt 大小的圆，与矩形的边缘相交。</p>
<p><img src="@source/design/icon/assets/ticket-step1.jpg" alt="卡券图标绘制步骤 1"></p>
</li>
<li>
<p>确认两个小圆图层顺序在矩形的上方，然后选中三个图层，使用路径查找器中的「减去顶层」即可得到外轮廓。</p>
<p><img src="@source/design/icon/assets/ticket-step2.jpg" alt="卡券图标绘制步骤 2"></p>
</li>
<li>
<p>最后，就是画出卡片中的两条「虚线」，再置入到模版中，就可以得到下图的最终效果。</p>
<p><img src="@source/design/icon/assets/ticket-step3.jpg" alt="卡券图标绘制步骤 3"></p>
</li>
</ol>
<h3 id="房屋图标" tabindex="-1"> 房屋图标</h3>
<p>从房屋图标的形状中，我们可以看出它包含了三角、圆和矩形这三个形状，主要的难点是如何通过三角形和矩形画出外部的轮廓。</p>
<ol>
<li>
<p>首先画出一个 28pt × 10pt 的等腰三角形，再画一个 22pt × 16pt 的矩形，将它们边缘进行重叠。</p>
<p><img src="@source/design/icon/assets/home-step1.jpg" alt="房屋图标绘制步骤 1"></p>
</li>
<li>
<p>三角形三个尖角的圆角依次设置为 3pt、1pt、1pt(上、左、右)，再将矩形下半部分的两个直角添加 4pt 圆角。</p>
<p><img src="@source/design/icon/assets/home-step2.jpg" alt="房屋图标绘制步骤 2"></p>
</li>
<li>
<p>执行「联集」操作，生成完整的外轮廓。之所以先做圆角再执行联集，是因为提前合并两个形状，会导致一些尖角无法使用圆角工具。</p>
<p><img src="@source/design/icon/assets/home-step3.jpg" alt="房屋图标绘制步骤 3"></p>
</li>
<li>
<p>画出房屋中间的圆形，然后将图形置入模版中，就可以得到下图的最终效果。</p>
<p><img src="@source/design/icon/assets/home-step4.jpg" alt="房屋图标绘制步骤 4"></p>
</li>
</ol>
<h3 id="齿轮图标" tabindex="-1"> 齿轮图标</h3>
<p>齿轮在 UI 中一般作为设置的图标使用，也是常用图标中最难画的图标之一。</p>
<ol>
<li>
<p>画一个 28pt 的大圆，然后再画一个 8pt 的小圆，置于圆的左侧。然后使用「旋转工具」，将小圆旋转中心固定到大圆的圆心中，按回车键，在弹出的对话框中选择 60° 然后点击复制按钮，生成第二个圆。之后再按 Ctrl / Command +D 重复操作 4 次，就可以得到完整的圆环。</p>
<p><img src="@source/design/icon/assets/setting-step1.jpg" alt="齿轮图标绘制步骤 1"></p>
</li>
<li>
<p>保证周围的 6 个圆在大圆的上层(一般来说，新画的六个小圆必然在大圆上层)，并将 7 个圆全部选中，执行「减去顶层」操作。</p>
<p><img src="@source/design/icon/assets/setting-step2.jpg" alt="齿轮图标绘制步骤 2"></p>
</li>
<li>
<p>最后，将所有内圆角改为 2pt，再画一个直径 8pt 的内圆，然后在模版中调整到正确的位置即可，就可以得到下图的最终效果。</p>
<p><img src="@source/design/icon/assets/setting-step3.jpg" alt="齿轮图标绘制步骤 3"></p>
</li>
</ol>
<h3 id="文件图标" tabindex="-1"> 文件图标</h3>
<p>文件图标也是一个很简单，但是大多数人就是做不好的图标，右下角的折角难倒了很多新手，在这里我们用一个简单的方法进行实现。</p>
<ol>
<li>
<p>先画一个 20pt * 23pt 的圆角矩形(高不是偶数，后面会解释)，然后要先把右下角的缺口做出来。这里如果要使用减去顶层的方法做也可以，但我们要用一个更简单的操作，在右下角顶点上方和左侧 6pt 的位置各添加一个锚点，然后使用「删除锚点工具」删除右下角顶点的锚点，就可以得到一个倾斜的切口。</p>
<p><img src="@source/design/icon/assets/file-step1.jpg" alt="文件图标绘制步骤 1"></p>
</li>
<li>
<p>在右下角画一个圆角为 4pt 的矩形，然后将其中一个边与上个步骤的缺口相交，相交的部分即为折角的部分。这时候选中两个矩形，使用「形状生成器工具」(快捷键 Shift + M)，点击一下图示的部分，就会生成一个新的形状组，接着取消它们的编组，再选中多余的图形进行删除，就可以得到一个完整的折角效果。</p>
<p><img src="@source/design/icon/assets/file-step2.jpg" alt="文件图标绘制步骤 2"></p>
</li>
<li>
<p>最后，设置大圆角(4pt)和小圆角(2pt)，并在内部添加 3 个圆角矩形，再根据几何的视觉差将图标置入模版中，向下移动一个像素，就可以得到下图的最终效果。</p>
<p><img src="@source/design/icon/assets/file-step3.jpg" alt="文件图标绘制步骤 3"></p>
</li>
</ol>
<h2 id="总结" tabindex="-1"> 总结</h2>
<h3 id="栅格的使用" tabindex="-1"> 栅格的使用</h3>
<p>针对栅格的使用，为了便于演示都给出了具体的数值，在最后一步才置入到模版中。实际上，我们应该在一开始的绘制中就在模版中进行，而往往刚开始画的图形尺寸是不能代表最终效果的。</p>
<p>比如最后一个文件图标中，为什么是 23pt，并且偏下 1pt。是因为一开始创建 24pt 高的矩形，在完成最终效果以后会发现重心上移，而且整体偏大了(下图第一行)，这时候缩减高度才能保证视觉的稳定性(下图第二行)。而房屋屋顶的三角形，我们使用的是 28pt 撑满画布，这也是经过了不断地尝试，测试了多种宽度和圆角效果后才确定出来的，并不是一蹴而就的。</p>
<h3 id="图形的调整" tabindex="-1"> 图形的调整</h3>
<p>图形的不同角度、尺寸和比例，都会影响图标最后呈现的效果，需要我们在制作过程中保持对图形优化的态度，通过持续调整和对比找到最合适的结果。</p>
<p>比如搜索图标，重点在于圆和矩形的比例，不同比例会带给我们截然不同的感受。</p>
<p><img src="@source/design/icon/assets/style-adjust.jpg" alt="风格调整"></p>
<p>以及在查看图标中，圆形相切的比例不同，也决定了最终呈现的效果差异，相交越少感觉越尖锐，相交越多则感觉越圆润。</p>
<p><img src="@source/design/icon/assets/style-adjust2.jpg" alt="风格调整"></p>
<h3 id="多种操作方式" tabindex="-1"> 多种操作方式</h3>
<p>实现同一种效果，可以有非常多的操作方法，殊途同归。虽然软件只是实现设计的工具，但对工具的理解越全面越好，很多时候我们都可以尝试使用不同的方法来实现相同的效果，而不用太拘泥于一种固定的形式。</p>
<p>比如在房子图标的绘制中，我们用的是三角形和矩形合并的形式制作的外轮廓。因为网格的存在，还可以直接通过钢笔工具绘制，自由度更高，但对我们图形把控能力的要求也更高。</p>
<p><img src="@source/design/icon/assets/way1.jpg" alt="钢笔方式"></p>
<p>再比如文件图标的步骤 2 中，用的是「形状生成器工具」。如果将两个图形轮廓化，再使用路径查找器中的「分割」，也能够达到相同的效果。</p>
<p><img src="@source/design/icon/assets/way2.jpg" alt="轮廓化方式"></p>
<hr>
<p>如果想要开启图标的练习，就要从这些最基础的线性图标入手，不断练习和思考如何通过正确、规范的操作制作图标。如果实在不知道要画什么，可以临摹微信、QQ 等成熟的应用工具图标。</p>
]]></content:encoded>
    </item>
    <item>
      <title>学习图标所需的软件</title>
      <link>https://mrhope.site/design/icon/software.html</link>
      <guid>https://mrhope.site/design/icon/software.html</guid>
      <source url="https://mrhope.site/rss.xml">学习图标所需的软件</source>
      <description>了解了图标的类型，就要开始了解做出这些图标应该使用哪些软件了。通常，UI 主要使用的设计软件包含 PS、AI、Sketch、XD 四款，理论上，它们都包含了图标绘制的功能，下面介绍这四款软件对于图标设计的优劣，以及需要掌握的部分。
</description>
      <category>设计</category>
      <pubDate>Sun, 13 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>了解了图标的类型，就要开始了解做出这些图标应该使用哪些软件了。通常，UI 主要使用的设计软件包含 PS、AI、Sketch、XD 四款，理论上，它们都包含了图标绘制的功能，下面介绍这四款软件对于图标设计的优劣，以及需要掌握的部分。</p>

<p><img src="@source/design/icon/assets/software.jpg" alt="使用软件"></p>
<h2 id="sketch-xd" tabindex="-1"> Sketch / XD</h2>
<p>这两款软件是设计 UI 界面的主力。但大家一定要记得，它们主要的功能是用来完成 UI 界面元素的排版，而不是创作和绘图。</p>
<p>虽然它们都包含路径、钢笔、布尔运算等功能(Sketch 相对 XD 更完善一点)，想要绘制一些非常基础的线性或面性图标时没有问题，但只要涉及到比较复杂的图形，往往就束手无策。</p>
<p>所以，建议新手都不要从这两个软件中入手，而是先掌握 PS 和 AI，后面想要快速实现一些简单的图标时，自然懂得如何使用 Sketch 和 XD。</p>
<p>可以说，PS 和 AI 的应用决定了我们图标设计的上限，而 Sketch 和 XD 是下限，所以，把上限拓展得越高越好。</p>
<h2 id="photoshop" tabindex="-1"> Photoshop</h2>
<p>PS 是一款无论什么东西都设计得出来的设计软件，但是，它本质上是一款「位图软件」。后续的文章中会提及，在界面中采用矢量格式的图标是最理想的，而 PS 针对矢量的操作并不便捷，比如将矢量图层复制到其它软件中。</p>
<p>实际项目中，会用 PS 设计一些视觉表现相对复杂的图标，例如主体图标、拟物图标、实物图标等等。</p>
<p>绘制图标需要用到的 PS 功能并不太多，需要在前期学习这个软件的过程中加以筛选，重点是以下知识点:</p>
<ul>
<li>路径创建和调整</li>
<li>钢笔工具和锚点</li>
<li>路径图层</li>
<li>布尔运算</li>
<li>图层属性</li>
</ul>
<p>虽然 PS 在实际项目中是用来画复杂的图标，但并不妨碍使用 PS 从最基础的图标开始画起，因为想要熟练掌握上方的知识点，简易的工具图标是最好的磨刀石，之后再学习 AI 的操作，就可以更快的上手。</p>
<h2 id="illastrator" tabindex="-1"> Illastrator</h2>
<p>AI 也是 UI 设计必学的一款软件，它的功能异常丰富，主要用来设计矢量图形。对比 PS，它有更好的矢量操作支持，对于路径细节的调整上，是最全面最细腻的软件，并且 AI 中的图形还可以直接复制粘贴到其它应用的画布中。</p>
<p>如果掌握了上方提及的 PS 基础，那么学习 AI 也就轻松了不少，其中，AI 设计图标中有三个特殊的功能是需要重点掌握和学习的:</p>
<ul>
<li>形状生成器</li>
<li>轮廓化描边</li>
<li>路径查找器</li>
</ul>
<h2 id="总结" tabindex="-1"> 总结</h2>
<p>优先学习 PS、AI 的路径相关功能，而不是 Sketch 和 XD。</p>
]]></content:encoded>
    </item>
    <item>
      <title>图标种类</title>
      <link>https://mrhope.site/design/icon/type.html</link>
      <guid>https://mrhope.site/design/icon/type.html</guid>
      <source url="https://mrhope.site/rss.xml">图标种类</source>
      <description>设计图标可以划分成三种大类:

工具图标
装饰图标
主体图标

下面将对它们分别进行介绍，以及展示相关的设计类型。
</description>
      <category>设计</category>
      <pubDate>Sun, 13 Sep 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>设计图标可以划分成三种大类:</p>
<ul>
<li>工具图标</li>
<li>装饰图标</li>
<li>主体图标</li>
</ul>
<p>下面将对它们分别进行介绍，以及展示相关的设计类型。</p>

<h2 id="工具图标" tabindex="-1"> 工具图标</h2>
<p>工具图标是在日常讨论中提及最频繁的图标类型，即应用内有明确功能、提示含义的标识。</p>
<p><img src="@source/design/icon/assets/tool-icon.jpg" alt="常见的工具图标"></p>
<p>虽然理解起来容易，但是它所包含的设计样式却并不少，可以把它们归纳成线性、面性两个大类，再分别进行细分。</p>
<h3 id="线性风格" tabindex="-1"> 线性风格</h3>
<p>线性图标，即图形是通过线条的描边轮廓勾勒出来的。多数人对它样式认识的第一反应应该是使用纯色的闭合轮廓，比如上图案例，线性图标的创作空间看似不多，但实际上有非常多的调整空间。</p>
<p>下面我们把它们罗列出来。</p>
<p><img src="@source/design/icon/assets/icon-line.jpg" alt="线性风格的工具图标"></p>
<h3 id="面性风格" tabindex="-1"> 面性风格</h3>
<p>面性图标，即使用对内容区域进行色彩填充的图标样式。同样，在这类图标中，也不是只能应用纯色的方式进行填充，还有非常多的视觉表现类型。</p>
<p><img src="@source/design/icon/assets/icon-face.jpg" alt="面性风格的工具图标"></p>
<h3 id="混合风格" tabindex="-1"> 混合风格</h3>
<p>当然，在设计图标类型的时候，也不一定非线性和面性不可，有一些热衷创造和尝试的设计师，还创作出了混合型的图标，既有线性描边的轮廓，又有色彩填充的区域。常见的样式类型如下:</p>
<p><img src="@source/design/icon/assets/icon-mix.jpg" alt="混合风格的工具图标"></p>
<h2 id="装饰图标" tabindex="-1"> 装饰图标</h2>
<p>和工具图标比起来，装饰图标的视觉性作用更多。对于一些比较复杂的应用来说，过分的简约并不能弥补信息过多的信噪问题，那么要通过丰富视觉体验的方法来增加内容的观赏性，减少一屏内显示内容的数量。</p>
<p>比如在分类列表里，是可以只使用线框和文字把大量内容浓缩到一屏以内，但实际浏览效率并不会增加，而且并不美观。</p>
<p><img src="@source/design/icon/assets/icon-decorate.jpg" alt="装饰图标在识别性上的作用"></p>
<p>还有就是国内的界面设计环境，会根据运营需求设计进行特殊化处理，尤其在电商领域，首屏的图标都会改成首页风格的样式，增加活动氛围。</p>
<p><img src="@source/design/icon/assets/icon-festival.jpg" alt="节日活动中的装饰图标"></p>
<p>装饰性的图标设计，虽然没有明确的规范该怎么做，效果怎么好怎么来，但最常见的类型有四种，下面分别进行介绍。</p>
<h3 id="扁平风格" tabindex="-1"> 扁平风格</h3>
<p>扁平风格的装饰图标，通常可以理解成是用扁平插画的方式画出来的图标，除了继承扁平的纯色填充特性以外，也比普通图标有更丰富的细节与趣味性。</p>
<p><img src="@source/design/icon/assets/icon-flat.jpg" alt="扁平风格的装饰图标"></p>
<h3 id="拟物风格" tabindex="-1"> 拟物风格</h3>
<p>拟物风格的图标现在出现的频率越来越高，集中在大型的运营活动中，通常这些活动会通过拟物的方式将头部设计成有故事性的场景，所以自然顶部的相关图标使用拟物的设计形式会更贴合。</p>
<p><img src="@source/design/icon/assets/icon-material.jpg" alt="拟物风格的装饰图标"></p>
<h3 id="_2-5d-风格" tabindex="-1"> 2.5D 风格</h3>
<p>2.5D 是一种偏卡通、像素画风格的扁平设计类型，在一些非必要的设计环境中，使用 2.5D 会比较容易搭配主流的界面设计风格，有更强的趣味性和层次感。</p>
<p><img src="@source/design/icon/assets/icon-2.5D.jpg" alt="2.5D风格的装饰图标"></p>
<h3 id="炫彩渐变" tabindex="-1"> 炫彩渐变</h3>
<p>这是一个拗口的原创名词，找不到更合适的形容，还是觉得浮夸点符合它的气质。这种图标，就是通过一系列非常激进的渐变和撞色实现，通常还会使用彩色的阴影。</p>
<p>使用这样图标的区域，通常都会呈现出一副五彩斑斓的景象，只有在内容非常丰富且用户偏向年轻化的产品中可以使用，是一种非常难驾驭的设计风格。</p>
<p><img src="@source/design/icon/assets/icon-gradient.jpg" alt="炫彩渐变风格的装饰图标"></p>
<h3 id="实物贴图" tabindex="-1"> 实物贴图</h3>
<p>采用真实摄影物体的设计风格。它不完全依靠创作和绘制。</p>
<p><img src="@source/design/icon/assets/icon-real.jpg" alt="应用摄影实物的装饰图标"></p>
<h2 id="主体图标" tabindex="-1"> 主体图标</h2>
<p>主体图标的设计比前面两种类型的图标说起来更难，因为它实际上就是把「LOGO 嵌套进系统图标模版」的图标。</p>
<p>除了掌握必要的规范以外，主体图标的主体物设计就是 LOGO 的设计。</p>
<h3 id="文字形式" tabindex="-1"> 文字形式</h3>
<p>使用了文字作为图标主体物的类型，通常是这类应用本身的品牌 LOGO 就使用了文字，所以这里就把字体照搬过来。</p>
<p><img src="@source/design/icon/assets/app-text.jpg" alt="文字类的主体图标"></p>
<h3 id="图标形式" tabindex="-1"> 图标形式</h3>
<p>对于一些偏工具，适合用简单图形传达应用功能的主体图标，就会采取使用工具图标的方式设计。</p>
<p><img src="@source/design/icon/assets/app-icon.jpg" alt="图标类的主体图标"></p>
<h3 id="图形图标" tabindex="-1"> 图形图标</h3>
<p>图形形式看起来和图标形式很接近，但实际上完全不属于同一类型，之所以它不是图标，是因为这类图标的主体图形是一种经过高度抽象化的标识，传达的是品牌性，而不是图形的含义。</p>
<p><img src="@source/design/icon/assets/app-shape.jpg" alt="图形类的主体图标"></p>
<h3 id="插画形式" tabindex="-1"> 插画形式</h3>
<p>对于一些比较纯粹的应用，如读本、漫画、幼儿类应用，就热衷于采用卡通形象作为图标的主体进行设计。</p>
<p><img src="@source/design/icon/assets/app-paint.jpg" alt="插画类的主体图标"></p>
<h3 id="拟物形式" tabindex="-1"> 拟物形式</h3>
<p>虽然现在扁平化的设计占据主导地位，但依旧有很多应用的主体图标是通过拟物的方式设计的。因为对于这些应用来说，拟物设计所传递的信息往往更直观和准确。</p>
<p><img src="@source/design/icon/assets/app-real.jpg" alt="拟物类的主体图标"></p>
<hr>
<p>当然，还有其它的数之不尽的主体图标设计方式，比如明星大头照、摄影图、游戏原画等，但理解上面这些类型就够了。</p>
<p>前面介绍的三种图标，就是今后在进入 UI 行业设计的内容。虽然图标看起来简单，但可以玩出的花样不少。除了正确设计出图标以外，高低阶的 UI 设计师之间的区别也包含图标设计类型掌握的多寡。</p>
<p>所以，在开始学习前，不要将设计图标的目标局限在最简单的图形绘制上，还有很多有趣的设计形式等待尝试。</p>
<h2 id="总结" tabindex="-1"> 总结</h2>
<p>UI 会涉及的图标类型主要有三种，工具图标、装饰图标、启动图标。</p>
<ol>
<li>工具图标，是界面中用来传递信息的图形符号，主要包含线性、面性、混合三种设计风格。</li>
<li>装饰图标，是界面中用来提升视觉体验的图形，主要包含扁平、拟物、2.5D、渐变炫彩等设计风格。</li>
<li>启动图标，是用来启动应用的图标，主要包含文字、图标、图形、插画、拟物等设计形式。</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>YAML 教程</title>
      <link>https://mrhope.site/code/language/yaml/</link>
      <guid>https://mrhope.site/code/language/yaml/</guid>
      <source url="https://mrhope.site/rss.xml">YAML 教程</source>
      <category>YAML</category>
      <pubDate>Sun, 26 Jul 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>编程免不了要写配置文件，怎么写配置也是一门学问。</p>
<p>YAML 是专门用来写配置文件的语言，非常简洁和强大。</p>
<h2 id="yaml-介绍" tabindex="-1"> yaml 介绍</h2>
<p>YAML 语言(发音 /ˈjæməl/ )的设计目标，就是方便人类读写。它实质上是一种通用的数据串行化格式。</p>
<p>YAML 的全称是 YAML Ain’t Markup Language。</p>
<p>它的基本语法规则如下。</p>
<ul>
<li>大小写敏感</li>
<li>使用缩进表示层级关系</li>
<li>缩进时不允许使用 Tab 键，只允许使用空格。</li>
<li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</li>
</ul>
<p><code>#</code> 表示注释，从这个字符一直到行尾，都会被解析器忽略。</p>
<p>YAML 支持的数据结构有三种。</p>
<ul>
<li>对象: 键值对的集合，又称为映射(mapping)/ 哈希(hashes) / 字典(dictionary)</li>
<li>数组: 一组按次序排列的值，又称为序列(sequence) / 列表(list)</li>
<li>纯量(scalars): 单个的、不可再分的值</li>
</ul>
<h2 id="如何打开或编辑-yaml" tabindex="-1"> 如何打开或编辑 yaml</h2>
<p>推荐使用 VS Code，具体详见<a href="/software/vscode/simple.html">VS Code 简单介绍</a>。</p>
<h2 id="数据结构介绍" tabindex="-1"> 数据结构介绍</h2>
<h3 id="对象" tabindex="-1"> 对象</h3>
<p>对象的一组键值对，使用冒号结构表示。</p>
<div><pre><code><span>animal</span><span>:</span> pets
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>{</span>
  <span>animal</span><span>:</span> <span>"pets"</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>Yaml 也允许另一种写法，将所有键值对写成一个行内对象。</p>
<div><pre><code><span>hash</span><span>:</span> <span>{</span> <span>name</span><span>:</span> Steve<span>,</span> <span>foo</span><span>:</span> bar <span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>{</span> <span>hash</span><span>:</span> <span>{</span> <span>name</span><span>:</span> <span>'Steve'</span><span>,</span> <span>foo</span><span>:</span> <span>'bar'</span> <span>}</span> <span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><h3 id="数组" tabindex="-1"> 数组</h3>
<p>一组连词线开头的行，构成一个数组。</p>
<div><pre><code><span>-</span> Cat
<span>-</span> Dog
<span>-</span> Goldfish
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>[</span><span>"Cat"</span><span>,</span> <span>"Dog"</span><span>,</span> <span>"Goldfish"</span><span>]</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>数据结构的子成员是一个数组，则可以在该项下面缩进一个空格。</p>
<div><pre><code><span>-</span> <span>-</span> Cat
  <span>-</span> Dog
  <span>-</span> Goldfish
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>[</span><span>[</span><span>"Cat"</span><span>,</span> <span>"Dog"</span><span>,</span> <span>"Goldfish"</span><span>]</span><span>]</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>数组也可以采用行内表示法。</p>
<div><pre><code><span>animal</span><span>:</span> <span>[</span>Cat<span>,</span> Dog<span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>{</span>
  <span>animal</span><span>:</span> <span>[</span><span>"Cat"</span><span>,</span> <span>"Dog"</span><span>]</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="复合结构" tabindex="-1"> 复合结构</h3>
<p>对象和数组可以结合使用，形成复合结构。</p>
<div><pre><code><span>languages</span><span>:</span>
  <span>-</span> Ruby
  <span>-</span> Perl
  <span>-</span> Python

<span>websites</span><span>:</span>
  <span>YAML</span><span>:</span> yaml.org
  <span>Ruby</span><span>:</span> ruby<span>-</span>lang.org
  <span>Python</span><span>:</span> python.org
  <span>Perl</span><span>:</span> use.perl.org
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>{</span>
  <span>languages</span><span>:</span> <span>[</span><span>"Ruby"</span><span>,</span> <span>"Perl"</span><span>,</span> <span>"Python"</span><span>]</span><span>,</span>
  <span>websites</span><span>:</span>
    <span>{</span>
      <span>YAML</span><span>:</span> <span>"yaml.org"</span><span>,</span>
      <span>Ruby</span><span>:</span> <span>"ruby-lang.org"</span><span>,</span>
      <span>Python</span><span>:</span> <span>"python.org"</span><span>,</span>
      <span>Perl</span><span>:</span> <span>"use.perl.org"</span><span>,</span>
    <span>}</span><span>,</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><h3 id="纯量" tabindex="-1"> 纯量</h3>
<p>纯量是最基本的、不可再分的值。以下数据类型都属于 JavaScript 的纯量。</p>
<ul>
<li>字符串</li>
<li>布尔值</li>
<li>整数</li>
<li>浮点数</li>
<li>Null</li>
<li>时间</li>
<li>日期</li>
</ul>
<p>数值直接以字面量的形式表示。</p>
<div><pre><code><span>number</span><span>:</span> <span>12.30</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>{</span>
  <span>number</span><span>:</span> <span>12.3</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>布尔值用 <code>true</code> 和 <code>false</code> 表示。</p>
<div><pre><code><span>isSet</span><span>:</span> <span>true</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>{</span>
  <span>isSet</span><span>:</span> <span>true</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p><code>null</code> 用 <code>~</code> 表示。</p>
<div><pre><code><span>parent</span><span>:</span> <span>~</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>{</span>
  <span>parent</span><span>:</span> <span>null</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>时间采用 ISO8601 格式。</p>
<div><pre><code><span>iso8601</span><span>:</span> <span>2001-12-14t21:59:43.10-05:00</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>{</span>
  <span>iso8601</span><span>:</span> <span>new</span> <span>Date</span><span>(</span><span>"2001-12-14t21:59:43.10-05:00"</span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>日期采用复合 iso8601 格式的年、月、日表示。</p>
<div><pre><code><span>date</span><span>:</span> <span>1976-07-31</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>{</span>
  <span>date</span><span>:</span> <span>new</span> <span>Date</span><span>(</span><span>"1976-07-31"</span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>YAML 允许使用两个感叹号，强制转换数据类型。</p>
<div><pre><code><span>e</span><span>:</span> <span>!!str</span> <span>123</span>
<span>f</span><span>:</span> <span>!!str</span> <span>true</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>{</span> <span>e</span><span>:</span> <span>'123'</span><span>,</span> <span>f</span><span>:</span> <span>'true'</span> <span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><h3 id="字符串" tabindex="-1"> 字符串</h3>
<p>字符串是最常见，也是最复杂的一种数据类型。</p>
<p>字符串默认不使用引号表示。</p>
<div><pre><code><span>str</span><span>:</span> 这是一行字符串
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>{</span>
  <span>str</span><span>:</span> <span>"这是一行字符串"</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>如果字符串之中包含空格或特殊字符，需要放在引号之中。</p>
<div><pre><code><span>str</span><span>:</span> <span>"内容: 字符串"</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>{</span>
  <span>str</span><span>:</span> <span>"内容: 字符串"</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>单引号和双引号都可以使用，双引号不会对特殊字符转义。</p>
<div><pre><code><span>s1</span><span>:</span> <span>'内容\n字符串'</span>
<span>s2</span><span>:</span> <span>"内容\n字符串"</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>{</span> <span>s1</span><span>:</span> <span>'内容\\n字符串'</span><span>,</span> <span>s2</span><span>:</span> <span>'内容\n字符串'</span> <span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>单引号之中如果还有单引号，必须连续使用两个单引号转义。</p>
<div><pre><code><span>str</span><span>:</span> <span>"labor's day"</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>{</span>
  <span>str</span><span>:</span> <span>"labor's day"</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>字符串可以写成多行，从第二行开始，必须有一个单空格缩进。换行符会被转为空格。</p>
<div><pre><code><span>str</span><span>:</span> 这是一段
  多行
  字符串
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>转为 JavaScript 如下。</p>
<div><pre><code><span>{</span>
  <span>str</span><span>:</span> <span>"这是一段 多行 字符串"</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>多行字符串可以使用 <code>|</code> 保留换行符，也可以使用 <code>&gt;</code> 折叠换行。</p>
<div><pre><code><span>this</span><span>:</span> <span>|</span><span>
  Foo
  Bar</span>
<span>that</span><span>:</span> <span>></span><span>
  Foo
  Bar</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>转为 JavaScript 代码如下。</p>
<div><pre><code><span>{</span> <span>this</span><span>:</span> <span>'Foo\nBar\n'</span><span>,</span> <span>that</span><span>:</span> <span>'Foo Bar\n'</span> <span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p><code>+</code> 表示保留文字块末尾的换行，<code>-</code> 表示删除字符串末尾的换行。</p>
<div><pre><code><span>s1</span><span>:</span> <span>|</span><span>
  Foo</span>

<span>s2</span><span>:</span> <span>|</span>+
  Foo

<span>s3</span><span>:</span> <span>|</span><span>-</span>
  Foo
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>转为 JavaScript 代码如下。</p>
<div><pre><code><span>{</span> <span>s1</span><span>:</span> <span>'Foo\n'</span><span>,</span> <span>s2</span><span>:</span> <span>'Foo\n\n\n'</span><span>,</span> <span>s3</span><span>:</span> <span>'Foo'</span> <span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><h2 id="引用" tabindex="-1"> 引用</h2>
<p>锚点 <code>&amp;</code> 和别名 <code>*</code>，可以用来引用。</p>
<div><pre><code><span>defaults</span><span>:</span> <span>&amp;defaults</span>
  <span>adapter</span><span>:</span> postgres
  <span>host</span><span>:</span> localhost

<span>development</span><span>:</span>
  <span>database</span><span>:</span> myapp_development
  <span>&lt;&lt;</span><span>:</span> <span>*defaults</span>

<span>test</span><span>:</span>
  <span>database</span><span>:</span> myapp_test
  <span>&lt;&lt;</span><span>:</span> <span>*defaults</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>等同于下面的代码。</p>
<div><pre><code><span>defaults</span><span>:</span>
  <span>adapter</span><span>:</span> postgres
  <span>host</span><span>:</span> localhost

<span>development</span><span>:</span>
  <span>database</span><span>:</span> myapp_development
  <span>adapter</span><span>:</span> postgres
  <span>host</span><span>:</span> localhost

<span>test</span><span>:</span>
  <span>database</span><span>:</span> myapp_test
  <span>adapter</span><span>:</span> postgres
  <span>host</span><span>:</span> localhost
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><p><code>&amp;</code> 用来建立锚点(defaults)，<code>&lt;&lt;</code> 表示合并到当前数据，<code>*</code> 用来引用锚点。</p>
<p>下面是另一个例子。</p>
<div><pre><code><span>-</span> <span>&amp;showell</span> Steve
<span>-</span> Clark
<span>-</span> Brian
<span>-</span> Oren
<span>-</span> <span>*showell</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>转为 JavaScript 代码如下。</p>
<div><pre><code><span>[</span><span>"Steve"</span><span>,</span> <span>"Clark"</span><span>,</span> <span>"Brian"</span><span>,</span> <span>"Oren"</span><span>,</span> <span>"Steve"</span><span>]</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><h2 id="函数和正则表达式的转换" tabindex="-1"> 函数和正则表达式的转换</h2>
<p>这是 JS-YAML 库特有的功能，可以把函数和正则表达式转为字符串。(官方 yaml 标准里不包含这个部分)</p>
<div><pre><code><span># example.yml</span>

<span>fn</span><span>:</span> function () <span>{</span> return 1 <span>}</span>
<span>reg</span><span>:</span> /test/
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>解析上面的 yml 文件的代码如下。</p>
<div><pre><code><span>var</span> yaml <span>=</span> <span>require</span><span>(</span><span>"js-yaml"</span><span>)</span><span>;</span>
<span>var</span> fs <span>=</span> <span>require</span><span>(</span><span>"fs"</span><span>)</span><span>;</span>

<span>try</span> <span>{</span>
  <span>var</span> doc <span>=</span> yaml<span>.</span><span>load</span><span>(</span>fs<span>.</span><span>readFileSync</span><span>(</span><span>"./example.yml"</span><span>,</span> <span>"utf8"</span><span>)</span><span>)</span><span>;</span>
  console<span>.</span><span>log</span><span>(</span>doc<span>)</span><span>;</span>
<span>}</span> <span>catch</span> <span>(</span>e<span>)</span> <span>{</span>
  console<span>.</span><span>log</span><span>(</span>e<span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>从 JavaScript 对象还原到 yaml 文件的代码如下。</p>
<div><pre><code><span>var</span> yaml <span>=</span> <span>require</span><span>(</span><span>"js-yaml"</span><span>)</span><span>;</span>
<span>var</span> fs <span>=</span> <span>require</span><span>(</span><span>"fs"</span><span>)</span><span>;</span>

<span>var</span> obj <span>=</span> <span>{</span>
  <span>fn</span><span>:</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>1</span><span>;</span>
  <span>}</span><span>,</span>
  <span>reg</span><span>:</span> <span><span>/</span><span>test</span><span>/</span></span><span>,</span>
<span>}</span><span>;</span>

<span>try</span> <span>{</span>
  fs<span>.</span><span>writeFileSync</span><span>(</span><span>"./example.yml"</span><span>,</span> yaml<span>.</span><span>dump</span><span>(</span>obj<span>)</span><span>,</span> <span>"utf8"</span><span>)</span><span>;</span>
<span>}</span> <span>catch</span> <span>(</span>e<span>)</span> <span>{</span>
  console<span>.</span><span>log</span><span>(</span>e<span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>JSON 教程</title>
      <link>https://mrhope.site/code/language/json/</link>
      <guid>https://mrhope.site/code/language/json/</guid>
      <source url="https://mrhope.site/rss.xml">JSON 教程</source>
      <description>JSON: JavaScript Object Notation(JavaScript 对象表示法)


JSON 是存储和交换文本信息的语法。类似 XML。


JSON 比 XML 更小、更快，更易解析。


JSON 是轻量级的文本数据交换格式


JSON 独立于语言: JSON 使用 JavaScript 语法来描述数据对象，但是 JSON 仍然独立于语言和平台。JSON 解析器和 JSON 库支持许多不同的编程语言。目前非常多的动态(PHP，JSP，.NET)编程语言都支持 JSON。


JSON 具有自我描述性，更易理解


</description>
      <category>JSON</category>
      <pubDate>Sat, 25 Jul 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>JSON: JavaScript Object Notation(JavaScript 对象表示法)</p>
<ul>
<li>
<p>JSON 是存储和交换文本信息的语法。类似 XML。</p>
</li>
<li>
<p>JSON 比 XML 更小、更快，更易解析。</p>
</li>
<li>
<p>JSON 是轻量级的文本数据交换格式</p>
</li>
<li>
<p>JSON 独立于语言: JSON 使用 JavaScript 语法来描述数据对象，但是 JSON 仍然独立于语言和平台。JSON 解析器和 JSON 库支持许多不同的编程语言。目前非常多的动态(PHP，JSP，.NET)编程语言都支持 JSON。</p>
</li>
<li>
<p>JSON 具有自我描述性，更易理解</p>
</li>
</ul>

<h2 id="json-值" tabindex="-1"> JSON 值</h2>
<p>JSON 值可以是:</p>
<ul>
<li>数字(整数或浮点数)</li>
<li>字符串(在双引号中)</li>
<li>逻辑值(<code>true</code> 或 <code>false</code>)</li>
<li>数组(在中括号中)</li>
<li>对象(在大括号中)</li>
<li>null</li>
</ul>
<h2 id="json-数字" tabindex="-1"> JSON 数字</h2>
<p>JSON 数字可以是整型或者浮点型:</p>
<p><strong>例:</strong></p>
<ul>
<li><code>5201314</code></li>
<li><code>-1</code></li>
<li><code>3.141592654</code></li>
</ul>
<h2 id="json-布尔值" tabindex="-1"> JSON 布尔值</h2>
<p>JSON 布尔值可以是 <code>true</code> 或者 <code>false</code></p>
<h2 id="json-字符串" tabindex="-1"> JSON 字符串</h2>
<p>JSON 字符串需要用双括号 <code>&quot;</code> 包含，如果内部含有英文引号 <code>&quot;</code>，需要使用 <code>\</code> 转义。</p>
<p><strong>例:</strong></p>
<ul>
<li><code>&quot;Mr.Hope is handsome&quot;</code></li>
<li><code>&quot;春眠不觉晓，处处闻啼鸟&quot;</code></li>
<li><code>&quot;A saying goes: \&quot;Great hopes make great man.\&quot;&quot;</code></li>
</ul>
<h2 id="json-对象" tabindex="-1"> JSON 对象</h2>
<p>JSON 对象在大括号 <code>{}</code> 中书写以 <code>键: 值</code> 对的方式书写，不同键值对之间用 <code>,</code> 分隔。</p>
<p><strong>例:</strong></p>
<div><pre><code><span>{</span>
  <span>"tag"</span><span>:</span> <span>"text"</span><span>,</span>
  <span>"heading"</span><span>:</span> <span>"校园卡说明"</span><span>,</span>
  <span>"text"</span><span>:</span> <span>"校园卡是东师的金融消费卡"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="json-数组" tabindex="-1"> JSON 数组</h2>
<p>JSON 数组在中括号 <code>[]</code> 中书写，不同元素间用 <code>,</code> 隔开。</p>
<h2 id="json-null" tabindex="-1"> JSON null</h2>
<p>JSON 可以设置 <code>null</code> 值</p>
]]></content:encoded>
    </item>
    <item>
      <title>机械硬盘</title>
      <link>https://mrhope.site/hardware/HDD.html</link>
      <guid>https://mrhope.site/hardware/HDD.html</guid>
      <source url="https://mrhope.site/rss.xml">机械硬盘</source>
      <category>硬件</category>
      <pubDate>Fri, 05 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>现代计算机大部分文件存储功能都是由机械硬盘这种设备提供的。(现在的 SSD 和闪存从概念和逻辑上都部分继承自机械硬盘，所以使用机械硬盘来进行理解也是没有问题的)</p>
<p>机械硬盘能实现信息存储的功能基于: 磁性存储介质能够被磁化，且磁化后会长久保留被磁化的状态，这种被磁化状态能够被读取出来，同时这种磁化状态还能够不断被修改，磁化正好有两个方向，所以可以表示 0 和 1。
于是硬盘就是把这种磁性存储介质做成一个个盘片，每一个盘片上都分布着数量巨大的磁性存储单位，使用磁性读写头对盘片进行写入和读取(从原理上类似黑胶唱片的播放)。</p>
<p>一个硬盘中的磁性存储单位数以亿计(1T 硬盘就有约 80 亿个)，所以需要一套规则来规划信息如何存取(比如一本存储信息的书我们还会分为页，每一页从上到下从左到右读取，同时还有章节目录)
于是就有了这些物理、逻辑概念:</p>
<ol>
<li>
<p>一个硬盘有多张盘片叠成，不同盘片有编号</p>
</li>
<li>
<p>每张盘片上的存储颗粒成环形一圈圈地排布，每一圈称为磁道，有编号</p>
</li>
<li>
<p>每条磁道上都有一圈存储颗粒，每 512 * 8(512 字节，0.5KB)个存储颗粒作为一个扇区，扇区是硬盘上存储的最小物理单位</p>
</li>
<li>
<p>N 个扇区可以组成簇，N 取决于不同的文件系统或是文件系统的配置，簇是此文件系统中的最小存储单位</p>
</li>
<li>
<p>所有盘面上的同一磁道构成一个圆柱，称为柱面，柱面是系统分区的最小单位</p>
</li>
</ol>
<p>磁头读写文件的时候，首先是分区读写的，由 inode 编号(区内唯一的编号)找到对应的磁道和扇区，然后一个柱面一个柱面地进行读写。机械硬盘的读写控制系统是一个令人叹为观止的精密工程(一个盘面上有几亿个存储单位，每个磁道宽度不到几十纳米，磁盘每分钟上万转)，同时关于读写的逻辑也是有诸多细节(比如扇区的编号并不是连续的)，非常有意思，可以自行搜索文章拓展阅读。</p>
]]></content:encoded>
    </item>
    <item>
      <title>CPU 的架构</title>
      <link>https://mrhope.site/hardware/structure.html</link>
      <guid>https://mrhope.site/hardware/structure.html</guid>
      <source url="https://mrhope.site/rss.xml">CPU 的架构</source>
      <category>硬件</category>
      <pubDate>Fri, 05 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>CPU 内部已经含有一些微指令，我们所使用的软件都要经过 CPU 内部的微指令集来达成才行。那这些指令集的设计主要又被分为两种设计理念，这就是目前世界上常见到的两种主要 CPU 架构，分别是: 精简指令集(RISC)与复杂指令集(CISC) 系统。</p>
<h2 id="精简指令集" tabindex="-1"> 精简指令集</h2>
<p>精简指令集，(Reduced Instruction Set Computer, RISC) 的设计中，微指令集较为精简。每个指令的执行时间都很短，完成的动作也很单纯，指令的执行性能较佳；但是若要做复杂的事情，就要由多个指令来完成。常见的 RISC 微指令集 CPU 主要例如甲骨文(Oracle) 公司的 SPARC 系列、IBM 公司的 Power Architecture (包括 PowerPC) 系列、与 ARM 公司(ARM Holdings) 的 ARM CPU 系列等。</p>
<p>在应用方面，SPARC CPU 的电脑常用于学术领域的大型工作站中，包括银行金融体系的主要伺服器也都有这类的电脑架构；至于 PowerPC 架构的应用上，例如索尼(Sony)公司出产的 Play Station 3(PS3)就是使用 PowerPC 架构的 Cell 处理器；那 ARM 的 ARM 呢? 您常使用的各厂牌手机、PDA、导航系统、网络设备(交换器、路由器等)等，几乎都是使用 ARM 架构的 CPU。目前世界上使用范围最广的 CPU 可能就是 ARM 这种架构。</p>
<h2 id="复杂指令集" tabindex="-1"> 复杂指令集</h2>
<p>复杂指令集，(Complex Instruction Set Computer, CISC)。与 RISC 不同的，CISC 在微指令集的每个小指令可以执行一些较低阶的硬体操作，指令数目多而且复杂，每条指令的长度并不相同。因为指令执行较为复杂所以每条指令花费的时间较长，但每条个别指令可以处理的工作较为丰富。常见的 CISC 微指令集 CPU 主要有 AMD、Intel、VIA 等的 x86 架构的 CPU。</p>
<p>由于 AMD、Intel、VIA 所开发出来的 x86 架构 CPU 被大量使用于个人电脑(Personal computer)用途上面，因此，个人电脑常被称为 x86 架构的电脑! 那为何称为 x86 架构呢? 这是因为最早的那颗 Intel 发展出来的 CPU 代号称为 8086，后来依此架构又开发出 80286, 80386...，因此这种架构的 CPU 就被称为 x86 架构了。</p>
<p>在 2003 年以前由 Intel 所开发的 x86 架构 CPU 由 8 位数升级到 16、32 位数，后来 AMD 依此架构修改新一代的 CPU 为 64 位数， 为了区别两者的差异，因此 64 位数的个人电脑 CPU 又被统称为 x86_64 的架构。</p>
<div><p>提示</p>
<p>所谓的位数指的是 CPU 一次资料读取的最大量! 64 位数 CPU 代表 CPU 一次可以读写 64bits 这么多的资料，32 位数 CPU 则是 CPU 一次只能读取 32 位数的意思。因为 CPU 读取资料量有限制，因此能够从记忆体中读写的资料也就有所限制。所以，一般 32 位数的 CPU 所能读写的最大资料量是 4GB。</p>
</div>
<p>那么不同的 x86 架构的 CPU 有什么差异呢? 除了 CPU 的整体结构(如第二层快取、每次运行可执行的指令数等)之外， 主要是在于微指令集的不同。新的 x86 的 CPU 大多含有很先进的微指令集， 这些微指令集可以加速多媒体程序的运行，也能够加强虚拟化的性能，而且某些微指令集更能够增加能源效率，降低 CPU 耗电量。</p>
]]></content:encoded>
    </item>
    <item>
      <title>开源与免费</title>
      <link>https://mrhope.site/code/basic/open-source-and-free.html</link>
      <guid>https://mrhope.site/code/basic/open-source-and-free.html</guid>
      <source url="https://mrhope.site/rss.xml">开源与免费</source>
      <description>开源软件和免费软件是两个概念:


开源软件是指公开源代码的软件。开源软件在发行的时候会附上软件的源代码，并授权允许用户更改、传播或者二次开发。


免费软件就是免费提供给用户使用的软件，但是在免费的同时，通常也会有一些限制，比如源代码不公开，用户不能随意修改、不能二次发布等。


</description>
      <category>基础</category>
      <pubDate>Fri, 05 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>开源软件和免费软件是两个概念:</p>
<ul>
<li>
<p>开源软件是指公开源代码的软件。开源软件在发行的时候会附上软件的源代码，并授权允许用户更改、传播或者二次开发。</p>
</li>
<li>
<p>免费软件就是免费提供给用户使用的软件，但是在免费的同时，通常也会有一些限制，比如源代码不公开，用户不能随意修改、不能二次发布等。</p>
</li>
</ul>

<h2 id="免费软件" tabindex="-1"> 免费软件</h2>
<p>免费软件的例子比比皆是，QQ、微信、迅雷、酷狗、360 等都是免费软件，您可以随意使用，尽情蹂躏；但是，如果您嫌弃它们复杂，自己删除了一些无用的功能，然后在网上发布了一个精简版本供大家下载，那么您就离法院的传票不远了。</p>
<h2 id="开源软件" tabindex="-1"> 开源软件</h2>
<p>开源软件是不抵触商业的，开源的目的也不是做慈善事业，而是通过更多人的参与，减少软件的缺陷，丰富软件的功能，同时也避免了少数人在软件里留一些不正当的后门。开源软件最终还会反哺商业，让商业公司为用户提供更好的产品。</p>
<p>Android 就是大众最熟知的一款开源操作系统，它除了用在手机上，还用在汽车、平板电脑、电视、智能手表等其它硬件平台，小米、华为、OPPO、三星等都是 Android 的受益者，他们都赚得盆满钵满。</p>
<p>很多著名的开源项目背后都有商业公司支撑，它们的开发者也都有正式的工作，享受和我们一样的社会福利；如果一个成功的开源项目背后没有商业公司，这反而是不健康的，社会需要开源和商业之间的互补来促进技术的革新。</p>
<p>开源软件和商业公司的裙带关系:</p>
<ul>
<li>
<p>Android 由全球最大的互联网公司 Google 支持；</p>
</li>
<li>
<p>市场占有率最高的关系型数据库 mysql 已经被上市公司 Oracle 收购；</p>
</li>
<li>
<p>linux 不但被 Microsoft、IBM、Intel、SAMSUNG 等巨头免费赞助，还接收它们贡献的源代码；</p>
</li>
<li>
<p>Python 目前属于 python.org 开源组织，它收到了 Facebook、Google、Amazon、Redhat、Microsoft 等商业公司的赞助。</p>
</li>
</ul>
<h2 id="开源软件的盈利模式" tabindex="-1"> 开源软件的盈利模式</h2>
<p>伟大的开源软件的背后都有巨量的资金流入，没有资金支撑的开源软件是无法长久的。那么，开源软件究竟是如何盈利的呢?</p>
<ol>
<li>
<p>双重许可</p>
<p>有些开源软件不但有一个免费的基础版本，还有一个收费的商业版本。免费版本能够促进传播，让用户爱上该软件；收费版本功能更加丰富，还提供技术支持。这种情况在开源界非常普遍。</p>
<p>例如 MySQL 就同时推出面向个人和企业的两种版本，即开源版本和专业版本，分别采用不同的授权方式: 开源版本完全免费以便更好的推广，而从专业版的许可销售和支持服务获得收入。</p>
</li>
<li>
<p>技术支持</p>
<p>很多软件在使用上不收取费用，但当用户在使用产品遇到困难，需要技术支持的时候，就需要付费了。技术支持收费的这项服务，也是一些开源公司的生计之路。</p>
<p>例如，最大的开源软件公司 Redhat 被 IBM 收购，卖了 340 亿美元。Redhat 虽然提供免费的 Linux 发行版(当然也有收费的版本)，但是当使用者遇到技术障碍，或者想升级硬件的时候，Redhat 可以提供付费支持。</p>
<p>举个例子，纽交所在用免费的红帽 Linux 系统交易股票。英特尔最近升级了处理器，纽交所想用新处理器提高效率，但这需要有人为新硬件部署新的系统和应用程序。同样的事每隔几年会发生一次。纽交所可以养一个团队自己完成所有系统维护、开发工作，也可以花钱请红帽的工程师来做。相当数量的企业用户都选择了后者。</p>
</li>
<li>
<p>附加服务</p>
<p>JBoss 就是这种模式的典型代表。JBoss 应用服务器完全免费，而通过提供技术文档、培训、二次开发支持等技术服务而获得收入。</p>
<p>开源软件出版商 O’Reilly 公司也是这种模式，它不遗余力地联系开源软件的权威人士，组织各种开源软件的会议，虽然知识是免费的，但承载知识的书籍却是收费的。</p>
</li>
<li>
<p>应用服务托管(ASP)</p>
<p>例如 PHP Live ! 就是一种构架于 PHP、MySQL 之上的开源软件，它可为企业用户提供实时交谈服务。目前已经有数十家公开提供 PHP Live! 托管服务的应用服务提供商。</p>
</li>
<li>
<p>软硬件一体化</p>
<p>比如 IBM、HP 等服务器供应商巨头，通过捆绑免费的 Linux 操作系统销售硬件服务器。SUN 公司近期将其 Solaris 操作系统开放源码，以确保服务器硬件的销售收入，也是这种模式的体现。</p>
<p>这些巨头每年在开源软件领域的投入巨大，但这一切并非是做善事，它们可以从配置了开源软件的硬件中获得巨额回报。</p>
</li>
<li>
<p>部分组件收费</p>
<p>开源免费的软件可以满足大部分用户的需求，但是也有很多用户需要一些特殊的定制服务，这个时候软件公司就会收取一定的费用。</p>
</li>
<li>
<p>版权收费</p>
<p>虽然代码是开源的，但很多作者会采用一些开源协议来限制自己版权问题，如果用户想要去版权，是需要另外付费的。</p>
</li>
<li>
<p>捐款/赞助</p>
<p>很多开源软件都有一些捐款渠道，喜爱该软件的用户，或者该软件的受益者都可以进行资金支持。</p>
<p>例如，Python 就有一个软件基金协会，它收到了来自 Facebook、Amazon、Google、Redhat、Microsoft 等巨头的赞助。</p>
<p>这些公司也不傻，他们为什么会赞助 Python 呢? 因为这些公司大量使用了 Python 语言，他们希望 Python 能够持续发展，如果 Python 倒了，他们也会跟着倒霉。</p>
</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>仿真介绍</title>
      <link>https://mrhope.site/software/comsol/intro.html</link>
      <guid>https://mrhope.site/software/comsol/intro.html</guid>
      <source url="https://mrhope.site/rss.xml">仿真介绍</source>
      <category>软件</category>
      <pubDate>Tue, 02 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="有限元分析" tabindex="-1"> 有限元分析</h2>
<p>有限元分析(Finite Element Analysis，FEA)软件可以通过仿真减少原型测试的原型数量和测试次数。一旦建立了能够准确预测真实物理参数的有限元分析模型，就可以借助它大幅改进产品或过程的设计和运行。在此基础上，优化算法和自动控制的应用，可以进一步实现仅凭直觉完全无法达到的设计改进。目前的有限元分析软件大多已包含自动控制功能，并将这些功能嵌入数学和数值模型中，而优化算法也通常包含在求解过程中。</p>
<p>基于数学模型表示的物理定律构成了有限元分析软件的基础。对于有限元分析来说，这些定律包括各项守恒定律、经典力学定律和电磁学定律。</p>
<p>通过使用有限元法(FEM)将数学模型离散化，可以得到相应的数值模型；随后求解离散方程，并对结果进行分析，这就是有限元分析 这一术语的含义。</p>
<div><p>FEM</p>
<p>有限元法的介绍请见 <a href="http://cn.comsol.com/multiphysics/finite-element-method" target="_blank" rel="noopener noreferrer">有限元法(FEM)<ExternalLinkIcon/></a>。</p>
</div>
<p>通过数学语言对物理定律在空间和时间进行表述，即产生了偏微分方程(PDE)。偏微分方程的解用因变量表示，如结构位移、速度场、温度场和电势场，等等。解是基于自变量 x、y、z 和 t 在空间和时间尺度上进行描述的。</p>
<p>求解给定系统的偏微分方程，不仅可以帮助我们理解我们所研究的系统，还可以对其做出合理的预测。有限元分析主要用于理解、预测、优化以及控制产品或过程的设计和运行。</p>
<ul>
<li>
<p>结构力学描述基于力平衡定律以及将应力应变关联的本构关系。传统的有限元分析通常仅限于结构分析。</p>
</li>
<li>
<p>流体流动、传热和传质中的描述基于动量、质量和能量守恒定律，其中的通量往往由对流和耗散或扩散组合而成。耗散和扩散的精确形式由某个本构关系给出，例如，牛顿流体的黏性应力、傅里叶热传导定律和菲克扩散定律。</p>
</li>
<li>
<p>电磁场方面，可以使用高斯定律将静电场与电荷量相关联、使用安培定律确定磁场与电流的关系，使用法拉第定律与麦克斯韦方程组分析动力学。</p>
</li>
</ul>
<p>将结构力学、流体流动、传热、传质和电磁学中使用的定律结合起来，用于描述多种物理现象相互作用的系统，也就是通常所说的多物理场系统。例如，在描述微机电系统(MEMS)时，通常需要结合使用结构力学定律和电磁学定律。在描述流-固耦合(FSI)时，需要结合使用结构力学定律和流体流动定律。</p>
<h2 id="数学模型和数值模型" tabindex="-1"> 数学模型和数值模型</h2>
<p>系统的数学模型可以包含一个或多个偏微分方程来描述相关定律，同时包含边界条件和初始条件。边界条件用于对解和部分建模域(如表面、边或点)施加额外的条件，同一个模型可以使用多种不同的边界条件。初始条件用于定义系统在时变事件开始时的状态。</p>
<p>从物理学角度来看，边界条件和初始数据通常是模型的自然组成部分(例如，结构力学中的载荷和约束，流体流动分析中入口和出口的压力水平，以及静电学中的端子电势)。从数学的角度来看，边界条件和初始数据能够从无数的可能解中选出唯一的解。</p>
<h3 id="适定的数学模型" tabindex="-1"> 适定的数学模型</h3>
<p>一个正确定义的数学模型往往具有适定性。如果一个数学模型具有唯一解，并且这个解连续依赖于问题的数据(即源项、通量、约束值和初始值)，则该模型是适定的。如果模型不适定，则会在数值模型中反映出来，并会在求解过程中出现问题。</p>
<p>“适定”可以认为是模型能否用于数值仿真(例如有限元分析)的最低要求。</p>
<p>从理论的角度来讲，通常很难确定现实中的非线性三维模型是否适定；鉴于此，用于基础分析的模型都经过了大量简化。通过这些简化模型得出的结论可以用来评估更贴近实际的模型的性能表现。即使是适定模型，也可能对模型数据的变化非常敏感，这类模型在本质上是病态或敏感模型。</p>
<p>通过现代数值方法求解偏微分方程，实现了数学应用的革命性突破。原因在于，只有在非常特殊的情况下(例如方程与简单几何的特定组合中)才能得到数学模型的解析解。尽管这些情况从理论上来说非常重要，但对工程师而言用处并不大。数值方法突破了这个限制，可以处理非线性问题和复杂的几何结构。虽然数值方法还存在其他方面的计算难题，但对新模型和几何的适用性没有任何问题。</p>
<p>数值方法可以给出适定数学模型的近似解。大部分数值方法都以建模域和所描述因变量的离散为基础。有限差分法、有限体积法和有限元法是最常用的离散化方法。顾名思义，有限元法(FEM)用于进行有限元分析</p>
<p>对所描述系统的数学模型进行离散化，可以得到对应的数值 模型，后者是前者的离散近似。使用数值模型代替数学模型会引入误差，这种误差称为截断误差。</p>
<p>截断误差被定义为数值模型与数学模型的解之间的差值。如果数值模型稳定且一致，则截断误差接近于零，这是因为单元尺寸接近于零(即数值解收敛于数学模型的解)。截断误差会以一定的速度收敛；速度由精度阶数测得。如果精度阶数为正数，则说明模型具有一致性。</p>
<p>有限元法的出发点是数学模型的弱形式。通过引入试函数，并将偏微分方程与这些试函数相乘，然后在建模域中对其进行积分，即可从逐点偏微分方程得到这种形式(也称为强形式)。您可以选择将这一过程与分部积分法结合使用。每个试函数都必须保持积分关系。为了与偏微分方程一致，必须有无穷多的试函数，并且这些试函数必须具有普遍的适用性。如此一来，就必须保持无穷多个积分关系，而建模域中每个点的逐点偏微分方程也必须保持不变。</p>
<p>有限元法引入的试函数通过计算网格进行定义。每个计算单元或网格单元都有多个局部定义的试函数。此外，有限元法中还定义了形函数，作为其基本组成部分。这些形函数用来表示候选解。对于瞬态问题，有限元法往往只用于空间离散化。在这种情况下，也就是在有限元离散之后得到的方程组是常微分方程组(ODE)。这个方程组转而使用有限差分法或其他类似方法进行离散。</p>
<p>在为不同的网格单元类型和方程选择试函数和形函数方面，有限元法提供了相当大的自由度。“非结构化”网格的参与单元在尺寸和形状上往往存在较大差异；这种网格的有限元公式使得该方法能以相对较低的成本应用于非常复杂的几何结构，自动生成非结构化网格也更加容易一些。在大多数情况下，形函数和试函数为易于定义和积分的低阶多项式。此外，与弱形式的密切关系为该方法提供了坚实的数学基础，其中的数学理论已经发展得非常成熟。</p>
<p>一旦将数学模型离散化，便必须求解生成的数值模型中的方程。</p>
<h2 id="有限元分析过程" tabindex="-1"> 有限元分析过程</h2>
<p>由于历史原因，传统的有限元分析对象主要是基于结构力学的模型，只在较小范围内涉及传热。随着多物理场建模应用的日益广泛，有限元法在流体流动和电磁仿真中得到了普遍应用，“有限元分析”一词也逐渐被其他工程和科学领域所接受和认可。事实上，无论是在何种应用领域，有限元分析过程都是相同的。</p>
<p>下面简要概述有限元分析的主要工作流程，涵盖从几何到模型文档的各个过程。</p>
<h3 id="几何" tabindex="-1"> 几何</h3>
<p>有限元分析要求模型几何“紧密相连”。计算机辅助设计(CAD)几何结构并不总是用于分析目的。举个例子，现实生活中的某个物体可以通过 CAD 绘图中一组松散连接的三维表面来描述；然而在有限元分析中，这些表面必须能够形成一个真实的体。</p>
<p>即使 CAD 绘图中的一组三维表面能够形成一个体，但很可能存在一些表面过于细长，而一些边对于几何尺寸而言又过短的情况。这样一来，这些不理想的几何特征上便会产生不符合要求的单元分布。</p>
<p>为了准备一个可用于有限元分析的 CAD 几何，通常需要对几何进行修复 和特征去除。修复操作可以修补几何中不“紧密相连”的部分，特征去除操作可以移除细长表面或合并多余的小边。</p>
<div><p>提示</p>
<p>一个常规的需要注意的事情就是几何中的曲面或曲边。任何参数化曲线都是不精确的，所以避免问题，在应对包含曲面边界的问题应当注意两个互相贴合的曲面应该是由同一组参数使用同一种方式产生，这样能够保证两个曲面的误差相同进而重合。</p>
<p>我在模拟中就曾经遇到过这个问题，我当时的两个曲面一个是圆柱体的侧面，另一个是圆弧曲线沿线段扫掠而成，尽管两者在理论上是同样的曲面形状，但 COMOSL 仍然不能正确的进行布尔运算得到正确的几何对象。</p>
</div>
<p>为了进行分析而创建、修复 CAD 几何以及去除特征的过程，通常是更大过程的一个环节——在有限元分析中，传统上称之为预处理。</p>
<h3 id="材料" tabindex="-1"> 材料</h3>
<p>数学模型中的本构关系涉及材料的物理属性，这些属性可能与建模变量(“因变量”)相关。例如，在热膨胀分析中，机械属性和热属性往往与温度相关。</p>
<p>在实际操作中，需要正确估计材料属性和参考点的有效间隔。除此之外，还必须为几何的各个部分指派不同属性的材料。</p>
<p>在传统的有限元分析中，定义和指派材料属性及材料属性函数的过程，通常也认为是预处理的一部分。</p>
<h3 id="域设置、边界条件、载荷及约束" tabindex="-1"> 域设置、边界条件、载荷及约束</h3>
<p>在结构力学中，通过为系统选择的材料、载荷及约束可以定义数学模型。一般情况下，设置材料、域方程、边界条件和初始条件，即可定义数学模型。</p>
<p>这部分的分析涉及选择几何域、边界、边和点，以及为这些几何实体指派方程、载荷或约束。这些设置的定义过程通常也认为是传统有限元分析中预处理的一部分。</p>
<h3 id="网格" tabindex="-1"> 网格</h3>
<p>几何、材料、域设置、边界条件、初始条件、荷载及约束的定义无需离散化即可进行。然而，在许多较旧的有限元分析软件中，仍然是基于离散模型来执行这些操作。</p>
<p>网格创建完成后，我们便得到一个完整的数值模型。不同的现象和分析需要使用不同的网格设置。例如，在波的传播问题(例如，结构力学中的弹性波建模，或者射频分析中的电磁波建模)中，最大单元的尺寸必须远小于波长才能正确求解问题。在流体流动中，可能需要边界层网格才能解析边界层，而单元雷诺数可以确定流体本体的单元尺寸。</p>
<div><p>提示</p>
<p>COMSOL 在这方面还是会做一些工作，对于新手来说，应当直接使用由物理场确定的网格，而不是自己构建一个。基于物理场确定的网格可以确保网格的形状，结构以及必要的优化，如边界层、角细化、狭窄区域分辨率等都依据要求解的物理场处于一个较为合适的状态。但是在模拟一些近似成分较大的模型中，比如非等温流动，可能需要针对几何与物理场，在自动构建的基础上进一步优化网格，以提升结果准确度或降低运算时间。</p>
</div>
<p>在许多情况下，CAD 几何的不同部分必须单独进行网格剖分。各部分之间界面处的模型变量必须通过有限元分析软件进行匹配，这一操作可以通过连续性约束(即用于将不同部分的有限元离散相互关联的边界条件)来实现。由于这些条件可能具有非局部特性，它们通常被称为多点约束。</p>
<p>在传统的有限元分析中，网格剖分被认为是难度最高的预处理任务之一；而在现代有限元分析软件中，初始网格可以在求解过程中自动改变，从而尽可能减小数值解的误差，这种方法称为自适应网格剖分。</p>
<div><p>提示</p>
<p>尽管 COMSOL 话说的挺漂亮，但是这里有一定装 13 的成分，所以务必极其用心的设计构建您的网格。</p>
<p>另外此处以及下文的“现代有限元分析软件”请直接默认为 COMSOL 就行。</p>
</div>
<h3 id="解" tabindex="-1"> 解</h3>
<p>如果说创建网格是一项高难度的任务，那么在合理的计算时间内选择和设置求解器并求得方程的解(构成数值模型)便是一项更加艰巨的工作。这些困难与求解过程中面临的各项挑战紧密相关。</p>
<p>首先，使用代数方程的离散模型可能非常大。一个三维模型往往拥有数百万个自由度。基于有限元法的数值模型求解过程的中心环节，是求解大型线性代数方程组。非线性、参数化、特征值和瞬态问题则通过迭代法求解，该方法求解一系列大型线性方程组。</p>
<p>一般来说，大型线性方程组很难进行有效求解。尽管可以使用现成的黑箱法，但这种方法对于实际模型而言往往代价过高，相关示例包括基于 LU 因式分解法的直接求解器，或通用的迭代法。</p>
<p>为了寻求一个成功且近乎最优的替代方案，必须利用基础系统的某种结构。对于多物理场问题，这种结构可能并不存在，或者难以识别。在这种情况下，一个有用的做法是，将问题按物理成分进行分解，从而使分解的结构能被有效利用。现代有限元分析软件使用几何或代数多重网格法，以加快线性系统的迭代求解过程。</p>
<p>有限元分析求解器的另一个问题来源是模型的非线性。牛顿方法使用局部导数信息来寻求更好的候选解；但只有在当前的估计解与真正的数值解足够接近 时，这种方法才可靠。实际上，对解的初始猜测值并不总是与真实值足够接近；在这样的情况下，使用牛顿方法通常无法正确求解。对问题进行不同的简化或松弛 可能会有所帮助。通过求解更为简单的相似问题来代替原始问题，可以得到候选解。例如，可以忽略某些非线性来得到一个容易求解的线性问题。为此，我们开发了分离式求解器和连续求解器。</p>
<div><p>提示</p>
<p>这点我在流体模拟上深有体会，随着模型几何结构及其雷诺数的不同，需要在八种不同近似的模块中进行选择。</p>
<p>随着实验条件、参数的不同，模型的流动模型可能也会发生变动。这就意味着模拟的时候也要时刻注意选择模块是否仍然适用。在多个模块的边界处，可能要采取多种近似模型进行多次模拟，然后通过分析讨论模型在不同近似下的现象差异原因，才能给出最终的结果与预估准确度。</p>
</div>
<p>有限元分析求解器遇到的第三类困难是，数值模型可能不稳定，或者由于其他原因，没有为数学模型提供较好的近似。与更完善、性能更优的数值模型相比，这些情况下的求解过程要显得困难得多。我们可能很难发现和理解引起这一问题的根本原因。在许多情况下，我们可以采用某种方式修改模型而不是通过设置求解器作为补救措施。更好的自适应网格通常是模型性能改进的重要组成部分。</p>
<p>总而言之，求解器的设置选项需要非常灵活；同时，还要能调用功能强大的各种方法。我们往往需要在稳定性和性能之间达成折衷。</p>
<p>通过扰乱数值模型来研究其灵敏度，始终是一个很好的做法。可以到达两个相关目的: 检查模型是否具有数值上的稳定性，以及对当前有限元分析中的一些重要物理量的截断误差进行量化。有限元离散的截断误差通常(但不总是)决定着仿真中的误差。为此，可以将模型中的关键派生值与典型的网格单元尺寸进行比较，然后采用不同的网格(在理想情况下，采用与当前网格明显不同的其他两个网格，且它们彼此也存在较大差异)重复进行计算。</p>
<p>如果数值模型性能良好，便可以根据比较结果估计精度阶数。如果精度阶数为正数，则所研究的两个最精细网格之间的物理量的差值，可以作为该物理量的截断误差估计值。有时，我们很难创建出满足所有需求的多个网格；在这种情况下，需要使用两个截然不同的网格的比较结果作为替代方法。</p>
<p>如果差值较小，表明该数值模型表现良好，且这个物理量的截断误差也较小。但是，如果差值较大，则很难得出任何结论。这种差异可能是由于两个网格的不稳定性或精度低造成的。然而，细化网格的解可能是精确的，而粗化网格的解则可能精度较差。即使截断误差估计尚不确定，至少可以排除模型不稳定的风险(例如，使用与该细化网格相当但不同的其他网格)。其他离散参数和求解器设置(如容差)也应进行更改。如果对于所有“扰动”仿真来说，研究的物理量只发生了很小程度的变化，则说明该数值模型具有良好的稳定性。</p>
<h3 id="结果" tabindex="-1"> 结果</h3>
<p>对数值求解器的计算结果进行的分析包括: 研究建模场的三维绘图、横截面图(如 x-y 绘图)以及计算派生值，例如对体、表面或边求积分，或计算沿边或点的表达式的值。</p>
<p>在较旧的有限元分析软件中，必须先定义要分析的绘图和派生值，才能进行求解。如果遗漏某些关键定义，则意味着需要从头开始重新求解。因此，定义要在后处理 过程中分析的表达式和派生值，也认为是预处理的一部分。</p>
<p>现代有限元分析软件支持在计算出解之后，动态定义表达式和派生值。在这些软件中，表达式和派生值的定义是后处理的重要组成部分，用于对模型进行深入预测。</p>
<p>后处理中的一项重要任务是估计数值解中的误差。如上所述，可以通过求解不同网格尺寸的数值模型方程，来估计数值解的收敛性，从而实现误差估计。</p>
<div><p>提示</p>
<p>这项在研究中尤其是论文还是比较重要的，尤其是在流体仿真这种采取了大量近似的模拟中、或是存粹的理论模拟，需要使用尺寸比最终优化网格更加小的网格结构进行模拟，通过各物理场结果的差异性，来验证模型的准确程度。如果受条件所限，验证其与实验结果</p>
</div>
<p>后处理的另一个重要部分是估计模型对不同数据(如材料属性、初始条件、边界条件、载荷、约束以及数学模型和数值模型所需的其他输入参数)的灵敏度。</p>
<h3 id="自动生成模型文档" tabindex="-1"> 自动生成模型文档</h3>
<p>在运行仿真后，非常重要的一步是将输入数据和仿真结果汇总到报告中，并在其中记录特定的会话。现代有限元分析软件支持定义报告的结构，用户可以在其中选择要记录的输入和输出数据。系统可以自动生成此类报告，您可以将其另存为文档，在将来每次仿真时用作参考。</p>
<div><p>提示</p>
<p>这倒是 COMSOL 一个很有用的功能，如果需要使用模型的多个结果数据，可以仔细设置一下导出的选项，就可以很容易的得出不同参数下的结果报告。</p>
<p>这也是 COMSOL 为 APP 构建提供的功能，在工程师优化编程了一个完整的模型后，可以交付给用户，用户只需要输入对应的参数进行运算，即可得到一份标准的结果报告。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>模型树</title>
      <link>https://mrhope.site/software/comsol/physic-field.html</link>
      <guid>https://mrhope.site/software/comsol/physic-field.html</guid>
      <source url="https://mrhope.site/rss.xml">模型树</source>
      <category>软件</category>
      <pubDate>Tue, 02 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="目录" tabindex="-1"> 目录</h2>
<ul>
<li>
<p>关于 COMSOL 多物理场在理论上使用的公式，及其对公式进行的简化与对应计算，请见 <a href="http://cn.comsol.com/multiphysics/introduction-to-physics-pdes-and-numerical-modeling" target="_blank" rel="noopener noreferrer">物理定律、偏微分方程、数学和数值建模<ExternalLinkIcon/></a>。因个人能力不足，本教程不包含这一部分的摘录，精简与批注。</p>
</li>
<li>
<p>关于各物理定律在各模块以及模型的具体应用、简化，请移步 <a href="http://cn.comsol.com/multiphysics/" target="_blank" rel="noopener noreferrer">COMSOL 多物理场仿真百科<ExternalLinkIcon/></a>。本教程同样不做介绍。</p>
</li>
<li>
<p>关于 COMSOL 中的各个模块能够解决的领域及问题，以及各个模块的特点与优点，请查阅 <a href="https://cn.comsol.com/products" target="_blank" rel="noopener noreferrer">COMSOL<sup>®</sup> 软件产品库<ExternalLinkIcon/></a>。本教程不做摘录与列出。</p>
</li>
</ul>
<h2 id="官方文档" tabindex="-1"> 官方文档</h2>
<ul>
<li>
<p>关于各个模块(物理场)，请观看 <a href="http://cn.comsol.com/video/basics-comsol-multiphysics-18-minutes" target="_blank" rel="noopener noreferrer">COMSOL Multiphysics 18 分钟入门<ExternalLinkIcon/></a></p>
</li>
<li>
<p>关于 COMSOL 的案例库，您可以查看 <a href="https://cn.comsol.com/models" target="_blank" rel="noopener noreferrer">COMSOL 案例下载<ExternalLinkIcon/></a></p>
</li>
</ul>
<hr>
<div><p>提示</p>
<p>这些是我在模拟过程中觉得很有用的视频教程。</p>
</div>
<h3 id="传热" tabindex="-1"> 传热</h3>
<ul>
<li><a href="https://cn.comsol.com/blogs/conjugate-heat-transfer/" target="_blank" rel="noopener noreferrer">共轭传热<ExternalLinkIcon/></a></li>
</ul>
<h3 id="传热视频教程" tabindex="-1"> 传热视频教程</h3>
<ul>
<li><a href="https://cn.comsol.com/video/conduction-convection-radiation-heat-transfer" target="_blank" rel="noopener noreferrer">传热中的传导、对流和辐射模拟<ExternalLinkIcon/></a></li>
</ul>
<h3 id="流体" tabindex="-1"> 流体</h3>
<ul>
<li>
<p><a href="https://cn.comsol.com/blogs/which-turbulence-model-should-choose-cfd-application/" target="_blank" rel="noopener noreferrer">针对 CFD 应用选择合适的湍流模型<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://cn.comsol.com/blogs/compressibility-options-and-buoyancy-forces-for-flow-simulations/" target="_blank" rel="noopener noreferrer">流场仿真问题中的可压缩性选项和浮力<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="http://cn.comsol.com/blogs/introduction-to-modeling-natural-convection-in-comsol-multiphysics/" target="_blank" rel="noopener noreferrer">COMSOL Multiphysics<sup>®</sup> 自然对流建模简介<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="http://cn.comsol.com/blogs/how-to-set-up-a-mesh-in-comsol-multiphysics-for-cfd-analyses/" target="_blank" rel="noopener noreferrer">如何在 COMSOL Multiphysics<sup>®</sup> 中设置网格进行 CFD 分析<ExternalLinkIcon/></a></p>
</li>
</ul>
<h4 id="动网格" tabindex="-1"> 动网格</h4>
<ul>
<li><a href="https://cn.comsol.com/blogs/analyze-a-mixers-design-elements-with-comsol-multiphysics/" target="_blank" rel="noopener noreferrer">借助 COMSOL Multiphysics<sup>®</sup> 分析搅拌器的设计元素<ExternalLinkIcon/></a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>网格</title>
      <link>https://mrhope.site/software/comsol/mesh/</link>
      <guid>https://mrhope.site/software/comsol/mesh/</guid>
      <source url="https://mrhope.site/rss.xml">网格</source>
      <category>软件</category>
      <pubDate>Tue, 02 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="网格基础" tabindex="-1"> 网格基础</h2>
<ul>
<li><a href="/software/comsol/mesh/intro.html">网格划分和细化介绍</a></li>
</ul>
<h3 id="内容" tabindex="-1"> 内容</h3>
<h4 id="剖分方法" tabindex="-1"> 剖分方法</h4>
<ul>
<li>物理场控制</li>
<li>用户控制</li>
</ul>
<h4 id="剖分程度" tabindex="-1"> 剖分程度</h4>
<p>从极粗化到极细化一共九个级别。</p>
<h4 id="其他" tabindex="-1"> 其他</h4>
<p>可以进行定制。</p>
<h3 id="基础" tabindex="-1"> 基础</h3>
<p>教程视频:</p>
<ul>
<li>
<p><a href="https://cn.comsol.com/video/building-the-mesh-for-a-model-geometry-in-comsol-multiphysics" target="_blank" rel="noopener noreferrer">在 COMSOL Multiphysics<sup>®</sup> 中为几何模型构建网格<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://cn.comsol.com/video/meshing-in-comsol-multiphysics-tutorial-cn" target="_blank" rel="noopener noreferrer">在 COMSOL Multiphysics<sup>®</sup> 中剖分网格<ExternalLinkIcon/></a></p>
</li>
</ul>
<p>博客:</p>
<ul>
<li>
<p><a href="https://cn.comsol.com/blogs/improved-capabilities-for-meshing-with-tetrahedral-elements/" target="_blank" rel="noopener noreferrer">网格剖分原理介绍<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://cn.comsol.com/blogs/how-to-inspect-your-mesh-in-comsol-multiphysics/" target="_blank" rel="noopener noreferrer">如何检查 COMSOL Multiphysics<sup>®</sup> 中的网格<ExternalLinkIcon/></a></p>
</li>
</ul>
<p>案例:</p>
<ul>
<li>
<p><a href="https://cn.comsol.com/model/using-meshing-sequences-13869" target="_blank" rel="noopener noreferrer">使用网格划分序列<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://cn.comsol.com/blogs/efficiently-mesh-your-model-geometry-with-meshing-sequences/" target="_blank" rel="noopener noreferrer">借助网格剖分序列提升几何模型的网格剖分效率<ExternalLinkIcon/></a></p>
</li>
</ul>
<h4 id="进阶" tabindex="-1"> 进阶</h4>
<p>视频教程:</p>
<ul>
<li>
<p><a href="https://cn.comsol.com/video/meshing-techniques-in-comsol-multiphysics-webinar-cn" target="_blank" rel="noopener noreferrer">COMSOL® 网格剖分技巧<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://cn.comsol.com/video/meshing-tips-comsol-multiphysics" target="_blank" rel="noopener noreferrer">COMSOL® 网格剖分技巧<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://cn.comsol.com/video/automated-meshing-infinite-element-domains" target="_blank" rel="noopener noreferrer">对无限元域自动划分网格<ExternalLinkIcon/></a></p>
</li>
</ul>
<p>其他文档:</p>
<ul>
<li><a href="https://wenku.baidu.com/view/8d2eebe4eff9aef8941e06fe.html" target="_blank" rel="noopener noreferrer">COMSOL Multiphysics 网格剖分 变形几何<ExternalLinkIcon/></a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>有限元网格划分和细化</title>
      <link>https://mrhope.site/software/comsol/mesh/intro.html</link>
      <guid>https://mrhope.site/software/comsol/mesh/intro.html</guid>
      <source url="https://mrhope.site/rss.xml">有限元网格划分和细化</source>
      <category>软件</category>
      <pubDate>Tue, 02 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="有限元网格划分和细化" tabindex="-1"> 有限元网格划分和细化</h2>
<p>基于任何有限元分析模型得到的精度都与所用的有限元网格直接相关。有限元网格用于将 CAD 模型分割为很多较小的域，我们称之为单元，然后在这些单元上求解一组方程，这些方程通过在每个单元上定义的一组多项式函数来近似表示所需的控制方程。随着网格的不断细化，这些单元变得越来越小，从而使求解的结果越来越接近真实解。</p>
<p>网格细化过程是我们验证有限元模型，并对软件、模型和计算结果建立信心的关键步骤。</p>
<h2 id="网格细化过程" tabindex="-1"> 网格细化过程</h2>
<p>通常，我们首先需要了解所研究的物理系统，以及完整描述这一系统的几何结构，才能成功地进行有限元分析。几何结构可以通过 CAD 模型来表示。典型的 CAD 模型能够准确描述研究对象的形状和结构，但通常也包含一些修饰特征或制造细节；事实证明，这些信息往往与有限元建模无关。仿真分析人员应该对 CAD 模型进行一些工程判断，并决定是否可以在网格划分之前移除或简化这些特征和细节。从简单模型开始并逐渐增加复杂性的做法，往往比从复杂模型开始然后进行简化的做法要容易得多。</p>
<div><p>提示</p>
<p>在我做的流体流动中，如果几何表面具有复杂的不规则凸起或凹进时，对其进行稳态求解是不可能的，这些是一定要移除，或者构建一个新的表面做替代。</p>
<p>换句话说，一个模型的仿真过程，是由一个最基础的模型逐渐添加细节、逐步优化的过程。在第一版模型中，主要还是以可以模拟出合理的结果为其主要目标。在此基础上在进行优化。</p>
</div>
<p>分析人员还应该了解与问题相关的所有物理场、材料属性、载荷、约束，以及可能影响分析结果的其他所有因素。这些输入可能存在不确定性。例如，我们并不总是能准确地了解材料属性和载荷。在建模过程中牢记这一点非常重要，因为试图使模型的解析精度超过输入数据的有效精度，并不是明智的做法。</p>
<div><p>提示</p>
<p>换句话说，在考虑模拟的结果时，也要考虑模拟结果的稳定程度及其准确度。</p>
<p>如果整个模型初始条件、或者某些特定的物理场参数，会极大的干扰模型，模型的收敛性很差甚至成混沌状态时(比如最经典的双摆)，得出结果的参考性与准确度就会很差，甚至无法完成模拟。</p>
<p>一定要选择适合的模型进行建模。</p>
</div>
<p>一旦将所有这些信息都汇集到有限元分析模型中，分析人员便可以从初步网格开始进行操作。在早期分析过程中，较好的做法是从尽可能粗糙的网格(网格单元非常大)开始。求解粗糙网格所需的计算资源较少，尽管得到的解可能非常不准确，但这仍可以作为一种粗略的验证手段，并能对外加荷载及约束进行检查。</p>
<p>基于粗糙网格完成求解后，便可以开始网格细化过程了。就最简单的网格细化形式而言，这是一个用不断细化的网格来解析模型，并对不同网格下得到的结果进行比较的过程。通过对模型中一个或多个点上的物理场进行分析，或者在某些域或边界上对某个物理场进行积分计算，可以实现结果比较。</p>
<p>基于对这些标量的比较结果，可以判断某种程度的网格细化得到的解的收敛性。在至少比较三个连续得到的解之后，开始出现解的渐近行为，而不同网格得到的解之间的差异也变得越来越小。最终，这些差异将变得足够小，分析人员便可以认为模型已经收敛。具体的判断标准始终由分析人员来确定，因为他/她知道模型输入以及结果中可以接受的不确定性。</p>
<div><p>提示</p>
<p>换句话说，模型输入的精确度和最终模拟结果应当具有的准确度应该进行预估。输入模型精确度会对模拟结果造成一定影响的，在分析结果准确度时也要考虑这一情况。</p>
</div>
<h2 id="网格细化的不同度量指标" tabindex="-1"> 网格细化的不同度量指标</h2>
<p>在研究收敛性时，需要选择合适的网格细
化度量指标。这种度量指标可以是局部的，也可以是全局的。也就是说，这一度量指标既可以在模型的某个位置进行定义，也可以是整个模型空间中的场积分。结构分析中某个点的位移或应力便是局部度量指标的一个例子，应变能密度在所有域上的积分则是全局度量指标的一个示例。应力和应变都根据解的梯度和位移场进行计算，而解的梯度总是计算到多项式近似的更低一阶。</p>
<p>在选择度量指标时，重要的是要记住，不同的度量指标会产生不同的收敛行为。下图正说明了这一点: 图中显示使用不同的网格求解同一有限元分析模型的情况。这些网格具有不同的单元尺寸，根据模型中的自由度(DOF)进行比较。自由度与节点 数量有关，“节点”是定义每个有限元形函数的计算点。求解有限元分析模型所需的计算资源与自由度直接相关。</p>
<p>从下图可以看出，某些度量指标的收敛速度相对更快，但需要注意的是，某一特定问题的网格收敛速度取决于所使用的网格划分技术。</p>
<p><img src="@source/software/comsol/mesh/assets/speed.jpg" alt="绘图显示有限元法在不同度量指标下的收敛性"></p>
<blockquote>
<p>分别采用全局度量指标(上图)、基于解物理场的局部度量指标(中图)，以及基于解梯度的局部度量指标(下图)的收敛性；并显示与最精确的解相比 1% 的误差条)。三个案例使用了相同的网格。</p>
</blockquote>
<h2 id="不同的网格细化技巧" tabindex="-1"> 不同的网格细化技巧</h2>
<p>就网格细化而言，现在已经发展出一套通用的技术。有经验的有限元分析软件用户应该非常熟悉这些技术，并了解它们各自的优缺点。</p>
<h3 id="减小单元尺寸" tabindex="-1"> 减小单元尺寸</h3>
<p>减小单元尺寸是最简单的网格细化策略，其本质是减小整个建模域的单元尺寸。由于这种方法具有简单易用的优越性，因此非常具有吸引力；但也存在不足之处，对于需要更精细网格的局部区域，却无法选择性地进行网格细化。</p>
<p><img src="@source/software/comsol/mesh/assets/size.jpg" alt="不同尺寸的网格"></p>
<h3 id="提高单元阶数" tabindex="-1"> 提高单元阶数</h3>
<p>提高单元阶数这一方法的优势在于，无需重新划分网格；您可以使用相同的网格，改变单元阶数。在处理复杂的三维几何时，重新划分网格非常耗时；另一方面，对于从外部来源获取的网格，我们无法进行更改。与其他网格划分技术相比，这一技术的缺点是需要消耗更多的计算资源。</p>
<p><img src="@source/software/comsol/mesh/assets/order.jpg" alt="不同阶数的网格"></p>
<h3 id="全局自适应网格细化" tabindex="-1"> 全局自适应网格细化</h3>
<p>全局自适应网格细化方法通过使用误差估计策略，确定建模域中局部误差最大的点。有限元分析软件随后会根据误差估计信息生成一个全新的网格。软件在兼顾整个模型的局部误差的同时，会在局部误差更显著的区域使用较小的单元。这种方法的优势在于，所有的网格细化工作均由软件完成；其缺点是用户无法对网格进行控制。如此一来，无关紧要的可以接受较大局部误差的区域可能会发生过度的网格细化。</p>
<div><p>提示</p>
<p>COMSOL 搞出的东西，算法还不错，如果只是快速的建模进行一个验证与计算的话，此方法是十分有用的。(如课堂作业，模拟比赛)</p>
<p>但是缺点也很明显，使用了它，您后期无法对网格进行控制和优化。重要研究如学位论文、科研课题慎用。</p>
</div>
<p><img src="@source/software/comsol/mesh/assets/global-fit.jpg" alt="使用全局自适应网格细化的示例"></p>
<h3 id="局部自适应网格划分" tabindex="-1"> 局部自适应网格划分</h3>
<p>局部自适应网格细化与全局自适应网格细化的不同之处在于，前者仅根据特定的度量指标，在整个模型空间的部分子集上进行误差估计。例如，可以通过细化网格，更精确地解析孔边界的应力。这种网格划分策略仍然是对整个模型重新划分网格，以达到减少某一区域误差的目的。如果存在一个符合逻辑且适用的局部度量指标来确定可以细化的网格，局部自适应网格细化方法便会优于全局自适应方法。</p>
<p><img src="@source/software/comsol/mesh/assets/local-fit.jpg" alt="仿真演示通过局部自适应方法进行的网格细化"></p>
<h3 id="手动调整网格" tabindex="-1"> 手动调整网格</h3>
<p>对仿真分析人员来说，手动操作最频繁的方法是根据特定问题的物理场手动创建一系列不同的有限元网格，并根据直觉判断出哪些位置需要更精细的单元。在处理二维模型时，可以结合使用三角形和四边形单元。如果是三维模型，可以结合使用四面体、六面体(也称为砖型)、三角棱柱和金字塔单元。尽管三角形和四面体单元可用于对任何几何图形进行网格划分，然而在可以确定模型的解是沿一个或多个方向逐渐变化的情况下，使用四边形、六面体、棱柱和金字塔单元会更有帮助。通过在某些方向拉伸或收缩单元，可以调节网格以适应场的变化。</p>
<p><img src="@source/software/comsol/mesh/assets/manual.jpg" alt="手动创建的网格"></p>
<p>手动网格划分方法对分析人员的要求最高，需要对有限元法和求解的物理场有深刻的理解并具有丰富的实践经验。然而，只要运用得当，可以节省大量的时间和资源。</p>
<p><img src="@source/software/comsol/mesh/assets/manual-example.jpg" alt="扳手模型的手动网格细化图"></p>
<h2 id="时域和频域网格划分" tabindex="-1"> 时域和频域网格划分</h2>
<p>除了上面提到的各种网格划分技术，在对含有时变载荷的问题进行网格划分时，还需要考虑一些其他因素。具有非线性材料响应或任意时变激励的模型需要在时域内求解。另一方面，如果外加激励为单一频率，或在已知频率范围内，并且材料属性为线性，则首选方案是在频域中进行建模。对于每一种情况，都有相应适用的网格细化策略。</p>
<h3 id="时间自适应网格划分" tabindex="-1"> 时间自适应网格划分</h3>
<p>时间自适应网格细化方法是在不同的时间间隔对模型重新划分网格，并将每个时间间隔的解的误差估计作为重新划分模型网格的度量指标。当相关区域需要随着时间的推移保持较高的网格分辨率时，这种方法非常有用。</p>
<p><img src="@source/software/comsol/mesh/assets/mesh-time.jpg" alt="上升气泡模型的时间自适应网格细化图"></p>
<blockquote>
<p>通过两相流模型求解的上升气泡模型的时间自适应网格细化。相边界附近的有限元网格更精细。</p>
</blockquote>
<h3 id="波长自适应网格划分" tabindex="-1"> 波长自适应网格划分</h3>
<p>在频域中建模时，我们预先确定了激励频率的范围和材料属性。因此，便能够预测所有建模域中的波长。单元的尺寸必须远小于波长，其多项式基函数才能对波进行解析。</p>
<p><img src="@source/software/comsol/mesh/assets/mesh-wave.jpg" alt="波长自适应方法进行的网格细化"></p>
<blockquote>
<p>带介电负载的微波波导(剖视图)。波长自适应网格细化根据频率和材料属性改变单元尺寸。</p>
</blockquote>
<h2 id="有限元网格细化的挑战与发展趋势" tabindex="-1"> 有限元网格细化的挑战与发展趋势</h2>
<p>就上述所有方法而言，要记住的关键一点是: 对于适定问题，无论使用哪种方法，都应当收敛到同一个解。这些不同方法之间的区别仅仅在于它们的收敛速度 不同。不过，这是一个明显的实际差异。根据问题的不同，一种技术的收敛速度可能比其他方法要快得多；但没有一种细化策略可以适用于所有情况。每个问题在网格划分方面都存在特定的技术难题，这不断给分析人员带来了挑战。</p>
<p>正在发生的一些变化将有助于应对这些困难。在过去的几年中，人们越来越容易获取价格低廉的云计算资源，这是最重要的进展之一，从而为并行运行多个不同的仿真实例创造了条件。正因如此，分析人员可以在更短的时间内研究各种不同的模型和网格划分方案，从而能够快速消除所有不确定因素。</p>
<p>网格生成算法本身也在不断的改进之中，越来越多地利用了多核计算带来的优势。除此之外，求解器也变得越来越高效，能够在集群计算机上求解大型模型。所有这些变化都将能在更短的时间内获得更精确的求解结果，加快分析和设计进程。</p>
<div><p>提示</p>
<p>在使用家用电脑(i7,i9)与服务器(至强 E5,E7)进行模拟中，无论是网格计算还是结果计算，都需要注意这一点。</p>
<p>有的求解器更加适用于几个左右的线程，大量使用矩阵迭代，新的迭代运算依赖旧的运算结果，这种情况下适合使用家用电脑(核数少主频高)</p>
<p>有的求解器可以拆分成数十个线程并行计算，这种情况下适合使用服务器(核数多主频不高)。</p>
<p>有关于这一情况的具体介绍，请查阅 <a href="http://cn.comsol.com/multiphysics/high-performance-computing" target="_blank" rel="noopener noreferrer">高性能计算(HPC)<ExternalLinkIcon/></a></p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>返回函数</title>
      <link>https://mrhope.site/code/language/python/functional-programming/return-function.html</link>
      <guid>https://mrhope.site/code/language/python/functional-programming/return-function.html</guid>
      <source url="https://mrhope.site/rss.xml">返回函数</source>
      <category>Python</category>
      <pubDate>Tue, 02 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="函数作为返回值" tabindex="-1"> 函数作为返回值</h2>
<p>高阶函数除了可以接受函数作为参数外，还可以把函数作为结果值返回。</p>
<p>我们来实现一个可变参数的求和。通常情况下，求和的函数是这样定义的:</p>
<div><pre><code><span>def</span> <span>calc_sum</span><span>(</span><span>*</span>args<span>)</span><span>:</span>
    ax <span>=</span> <span>0</span>
    <span>for</span> n <span>in</span> args<span>:</span>
        ax <span>=</span> ax <span>+</span> n
    <span>return</span> ax
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>但是，如果不需要立刻求和，而是在后面的代码中，根据需要再计算怎么办? 可以不返回求和的结果，而是返回求和的函数:</p>
<div><pre><code><span>def</span> <span>lazy_sum</span><span>(</span><span>*</span>args<span>)</span><span>:</span>
    <span>def</span> <span>sum</span><span>(</span><span>)</span><span>:</span>
        ax <span>=</span> <span>0</span>
        <span>for</span> n <span>in</span> args<span>:</span>
            ax <span>=</span> ax <span>+</span> n
        <span>return</span> ax
    <span>return</span> <span>sum</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>当我们调用 <code>lazy_sum()</code> 时，返回的并不是求和结果，而是求和函数:</p>
<div><pre><code><span>>></span><span>></span> f <span>=</span> lazy_sum<span>(</span><span>1</span><span>,</span> <span>3</span><span>,</span> <span>5</span><span>,</span> <span>7</span><span>,</span> <span>9</span><span>)</span>
<span>>></span><span>></span> f
<span>&lt;</span>function lazy_sum<span>.</span><span>&lt;</span><span>locals</span><span>></span><span>.</span><span>sum</span> at <span>0x101c6ed90</span><span>></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>调用函数 <code>f</code> 时，才真正计算求和的结果:</p>
<div><pre><code><span>>></span><span>></span> f<span>(</span><span>)</span>
<span>25</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>在这个例子中，我们在函数 <code>lazy_sum</code> 中又定义了函数 <code>sum</code>，并且，内部函数 <code>sum</code> 可以引用外部函数 <code>lazy_sum</code> 的参数和局部变量，当 <code>lazy_sum</code> 返回函数 sum 时，相关参数和变量都保存在返回的函数中，这种称为“闭包(Closure)”的程序结构拥有极大的威力。</p>
<p>请再注意一点，当我们调用 <code>lazy_sum()</code> 时，每次调用都会返回一个新的函数，即使传入相同的参数:</p>
<div><pre><code><span>>></span><span>></span> f1 <span>=</span> lazy_sum<span>(</span><span>1</span><span>,</span> <span>3</span><span>,</span> <span>5</span><span>,</span> <span>7</span><span>,</span> <span>9</span><span>)</span>
<span>>></span><span>></span> f2 <span>=</span> lazy_sum<span>(</span><span>1</span><span>,</span> <span>3</span><span>,</span> <span>5</span><span>,</span> <span>7</span><span>,</span> <span>9</span><span>)</span>
<span>>></span><span>></span> f1<span>==</span>f2
<span>False</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p><code>f1()</code> 和 <code>f2()</code> 的调用结果互不影响。</p>
<h2 id="闭包" tabindex="-1"> 闭包</h2>
<p>注意到返回的函数在其定义内部引用了局部变量 <code>args</code>，所以，当一个函数返回了一个函数后，其内部的局部变量还被新函数引用，所以，闭包用起来简单，实现起来可不容易。</p>
<p>另一个需要注意的问题是，返回的函数并没有立刻执行，而是直到调用了 <code>f()</code> 才执行。我们来看一个例子:</p>
<div><pre><code><span>def</span> <span>count</span><span>(</span><span>)</span><span>:</span>
    fs <span>=</span> <span>[</span><span>]</span>
    <span>for</span> i <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> <span>4</span><span>)</span><span>:</span>
        <span>def</span> <span>f</span><span>(</span><span>)</span><span>:</span>
             <span>return</span> i<span>*</span>i
        fs<span>.</span>append<span>(</span>f<span>)</span>
    <span>return</span> fs

f1<span>,</span> f2<span>,</span> f3 <span>=</span> count<span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>在上面的例子中，每次循环，都创建了一个新的函数，然后，把创建的 3 个函数都返回了。</p>
<p>您可能认为调用 <code>f1()</code>，<code>f2()</code> 和 <code>f3()</code> 结果应该是 <code>1</code>，<code>4</code>，<code>9</code>，但实际结果是:</p>
<div><pre><code><span>>></span><span>></span> f1<span>(</span><span>)</span>
<span>9</span>
<span>>></span><span>></span> f2<span>(</span><span>)</span>
<span>9</span>
<span>>></span><span>></span> f3<span>(</span><span>)</span>
<span>9</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>全部都是 <code>9</code>! 原因就在于返回的函数引用了变量 <code>i</code>，但它并非立刻执行。等到 3 个函数都返回时，它们所引用的变量 <code>i</code> 已经变成了 <code>3</code>，因此最终结果为 <code>9</code>。</p>
<div><p>注意</p>
<p>返回闭包时牢记一点:返回函数不要引用任何循环变量，或者后续会发生变化的变量。</p>
</div>
<p>如果一定要引用循环变量怎么办? 方法是再创建一个函数，用该函数的参数绑定循环变量当前的值，无论该循环变量后续如何更改，已绑定到函数参数的值不变:</p>
<div><pre><code><span>def</span> <span>count</span><span>(</span><span>)</span><span>:</span>
    <span>def</span> <span>f</span><span>(</span>j<span>)</span><span>:</span>
        <span>def</span> <span>g</span><span>(</span><span>)</span><span>:</span>
            <span>return</span> j<span>*</span>j
        <span>return</span> g
    fs <span>=</span> <span>[</span><span>]</span>
    <span>for</span> i <span>in</span> <span>range</span><span>(</span><span>1</span><span>,</span> <span>4</span><span>)</span><span>:</span>
        fs<span>.</span>append<span>(</span>f<span>(</span>i<span>)</span><span>)</span> <span># f(i)立刻被执行，因此i的当前值被传入f()</span>
    <span>return</span> fs
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>再看看结果:</p>
<div><pre><code><span>>></span><span>></span> f1<span>,</span> f2<span>,</span> f3 <span>=</span> count<span>(</span><span>)</span>
<span>>></span><span>></span> f1<span>(</span><span>)</span>
<span>1</span>
<span>>></span><span>></span> f2<span>(</span><span>)</span>
<span>4</span>
<span>>></span><span>></span> f3<span>(</span><span>)</span>
<span>9</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>缺点是代码较长，可利用 lambda 函数缩短代码。</p>
<h2 id="小结" tabindex="-1"> 小结</h2>
<p>一个函数可以返回一个计算结果，也可以返回一个函数。</p>
<p>返回一个函数时，牢记该函数并未执行，返回函数中不要引用任何可能会变化的变量。</p>
]]></content:encoded>
    </item>
    <item>
      <title>练习</title>
      <link>https://mrhope.site/code/language/python/guide/exercise.html</link>
      <guid>https://mrhope.site/code/language/python/guide/exercise.html</guid>
      <source url="https://mrhope.site/rss.xml">练习</source>
      <category>Python</category>
      <pubDate>Tue, 02 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="bmi" tabindex="-1"> BMI</h2>
<p>小明的成绩从去年的 72 分提升到了今年的 85 分，请计算小明成绩提升的百分点，并用字符串格式化显示出 'xx.x%'，只保留小数点后 1 位:</p>
<p>答案<sup></sup></p>
<hr>
<section>
<ol>
<li id="footnote1"><div><pre><code>score1 <span>=</span> <span>72</span>

score2 <span>=</span> <span>85</span>

result <span>=</span> <span>(</span>score2 <span>-</span> score1<span>)</span> <span>/</span> score1 <span>*</span> <span>100</span>

<span>print</span><span>(</span><span>'小明成绩提升了%.1f%%'</span> <span>%</span> result<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div> </li>
</ol>
</section>
]]></content:encoded>
    </item>
    <item>
      <title>APP</title>
      <link>https://mrhope.site/software/comsol/app.html</link>
      <guid>https://mrhope.site/software/comsol/app.html</guid>
      <source url="https://mrhope.site/rss.xml">APP</source>
      <category>软件</category>
      <pubDate>Mon, 01 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>提示</p>
<p>制作中...</p>
</div>
<h2 id="官方文档" tabindex="-1"> 官方文档</h2>
<h3 id="app-博客" tabindex="-1"> APP 博客</h3>
<ul>
<li><a href="https://cn.comsol.com/blogs/part-1-tips-to-improve-simulation-app-design-and-structure/" target="_blank" rel="noopener noreferrer">第一部分: 提升仿真 App 设计与结构的技巧<ExternalLinkIcon/></a></li>
</ul>
<h3 id="app-视频" tabindex="-1"> APP 视频</h3>
<ul>
<li><a href="https://cn.comsol.com/video/using-comsol-compiler-to-create-standalone-applications" target="_blank" rel="noopener noreferrer">使用 COMSOL Compiler™ 创建独立运行的仿真 App<ExternalLinkIcon/></a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>创建新模型</title>
      <link>https://mrhope.site/software/comsol/create.html</link>
      <guid>https://mrhope.site/software/comsol/create.html</guid>
      <source url="https://mrhope.site/rss.xml">创建新模型</source>
      <description>您可以遵循模型向导的指示来建立模型，也可以使用空模型开始建模操作。
</description>
      <category>软件</category>
      <pubDate>Mon, 01 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>您可以遵循模型向导的指示来建立模型，也可以使用空模型开始建模操作。</p>

<h2 id="遵循模型向导创建模型" tabindex="-1"> 遵循模型向导创建模型</h2>
<p>“模型向导”将引导您设置空间维度、物理场及研究类型，步骤如下:</p>
<ol>
<li>首先，为模型组件选择空间维度: 三维、二维轴对称、二维、一维轴对称或零维。</li>
<li>现在，添加一个或多个物理场接口。这些接口根据不同的物理分支进行分类，以便您轻松查找所需的接口。</li>
<li>选择表示将用于计算的求解器或求解器集的“研究”类型。</li>
<li>最后，单击完成。此时桌面会显示根据“模型向导”中的选择进行配置的模型树。</li>
</ol>
<div><p>提示</p>
<p>对于初学者，Mr.Hope 建议使用模型向导。</p>
</div>
<h2 id="创建空模型" tabindex="-1"> 创建空模型</h2>
<p>空模型选项将打开不含任何组件或研究的 COMSOL Desktop 界面。可以右键单击模型树，添加特定空间维度的组件、物理场接口或研究。</p>
<p>该选项对于熟悉 COMSOL 的人是很有用的。</p>
]]></content:encoded>
    </item>
    <item>
      <title>快速上手</title>
      <link>https://mrhope.site/software/comsol/get-started.html</link>
      <guid>https://mrhope.site/software/comsol/get-started.html</guid>
      <source url="https://mrhope.site/rss.xml">快速上手</source>
      <description>本章简单介绍如何在 COMSOL Multiphysics® 中建立和运行有限元模型。
</description>
      <category>软件</category>
      <pubDate>Mon, 01 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>本章简单介绍如何在 COMSOL Multiphysics<sup>®</sup> 中建立和运行有限元模型。</p>

<h2 id="comsol-建模流程" tabindex="-1"> COMSOL 建模流程</h2>
<p>建模工作流程包含以下步骤:</p>
<ul>
<li>建立模型环境</li>
<li>构建几何图形</li>
<li>指定材料属性</li>
<li>定义物理场边界条件</li>
<li>创建网格</li>
<li>运行仿真</li>
<li>结果后处理</li>
</ul>
<h2 id="用户页面" tabindex="-1"> 用户页面</h2>
<p>COMSOL Multiphysics<sup>®</sup> 软件的 COMSOL Desktop<sup>®</sup> 用户界面提供的建模环境可用于创建、分析以及可视化多物理场模型和 App。这个建模环境中嵌入了许多工具、菜单和窗口，例如 <strong>模型开发器</strong>窗口和节点、功能区、<strong>设置</strong>窗口、<strong>图形</strong>窗口、<strong>信息</strong>窗口以及其他组件。</p>
<p>在 COMSOL Multiphysics 中，COMSOL Desktop 为我们提供了功能强大的建模环境可供我们创建、分析以及可视化模型和 APP.</p>
<p><img src="@source/software/comsol/assets/layout.png" alt="COMSOL 界面"></p>
<h2 id="模型开发器和-app-开发器" tabindex="-1"> 模型开发器和 App 开发器</h2>
<p>COMSOL Desktop 环境包含两个主要组成部分: “模型开发器”和“App 开发器”。</p>
<p>“模型开发器”是定义模型及其组件的工具，例如求解方式、结果分析以及创建报告。可以通过构建模型树来实现这些操作。模型树反映了底层数据结构(即模型对象)，其中存储的模型状态包含以下设置: 几何、网格、物理场、边界条件、研究、求解器、后处理以及可视化。</p>
<p>“App 开发器”可供您通过易于使用的专业用户界面，基于在“模型开发器”中创建的模型快速创建 App。</p>
<h2 id="模型开发器" tabindex="-1"> 模型开发器</h2>
<p>“模型开发器”窗口提供的所有功能和操作都用来构建、求解模型以及显示结果。</p>
<p>模型树显示了模型数据结构的概览，可用于控制建模序列。</p>
<p>我们可以右键单击建模序列中的任意节点，访问上下文相关的选项。例如建立模型、创建定义、构建几何、添加材料、定义物理场、构建网格、运行仿真以及对结果进行后处理。</p>
<h3 id="快速访问工具栏" tabindex="-1"> 快速访问工具栏</h3>
<p>“快速访问工具栏”可供您访问各种功能，例如打开、保存、撤消、重做、复制、粘贴以及删除。可以从定制快速访问工具栏列表(工具栏右侧的向下箭头)中定制其内容。</p>
<h3 id="功能区" tabindex="-1"> 功能区</h3>
<p>桌面顶部的功能区可供您访问用于完成大多数建模任务的命令。单击 App 开发器按钮可从“模型开发器”切换至“App 开发器”，并开始基于模型构建 App。</p>
<p>“模型开发器”窗口中的所有操作都可以通过功能区执行。这些命令根据每个主要建模步骤来分组和排序，因此我们提供了对应的功能区选项卡: 建立模型、创建定义、几何、材料。每个步骤都是我们刚才在“模型开发器”中看到过的。</p>
<div><p>提示</p>
<p>“功能区”特征在 COMSOL Multiphysics 4.4 及更高版本提供并且只在 Windows 版的 COMSOL Desktop 中提供,macOS 和 Linux 版本中则由其他菜单和工具栏代替。</p>
</div>
<p>COMSOL Desktop 环境中的功能区选项卡反映了建模工作流程，并提供了每个建模步骤可用的功能概述，包括基于模型构建仿真 App。</p>
<p>主屏幕选项卡包含的按钮可用于更改模型、运行仿真以及开发和测试 App 等最常用的操作。例如，更改模型参数以执行参数化几何，检查材料属性和物理场，构建网格，运行研究以及将仿真结果可视化。</p>
<p>建模过程中的每个主要步骤均有对应的标准选项卡。按工作流程从左到右依次为: 定义、几何、材料、物理场、网格、研究、结果及开发工具。</p>
<div><p>其他选项卡</p>
<p>上下文选项卡仅在需要时显示，例如三维绘图组选项卡，仅在添加相应的绘图组或在模型树中选择相应节点时显示。</p>
<p>模式选项卡用于某些特定的操作，此时功能区中的其他操作会暂时变得无关紧要。工作平面模式选项卡便是一个例子。在处理工作平面时，不会显示其他无关操作的选项卡。</p>
</div>
<h2 id="设置窗口" tabindex="-1"> 设置窗口</h2>
<p>这是用于输入所有模型明细信息的主窗口，包括几何尺寸、材料属性、边界条件、初始条件以及执行仿真时求解器所需的任何其他信息。</p>
<p>我们在模型树中选择的任何节点都可以在右侧的“设置”窗口中查看其关联设置。这个窗口会根据模型树中当前选定的节点更新。这里也是用于输入所有仿真设置的主窗口。例如:</p>
<ul>
<li>创建几何</li>
<li>设置任何已添加的材料的属性或任何物理场边界条件</li>
</ul>
<h2 id="绘图窗口" tabindex="-1"> 绘图窗口</h2>
<p>右侧的“图像”窗口用于显示几何、网格以及结果的交互式图像。可执行的操作包括旋转、平移、放大或缩小。图形窗口工具栏中的按钮则根据模型的空间维度以及模型树中当前选定的节点来更新。我们可以使用这些按钮来更新视图。比如选择几何实体、隐藏部分几何元素、更改图形渲染以及其他选项。</p>
<p>这些窗口用于图形输出。除图形窗口外，绘图窗口也用于对结果进行可视化。您可以使用多个绘图窗口同时显示多个结果。收敛图窗口是一个特例，它是
自动生成的绘图窗口，显示模型运行时求解过程收敛的图形表示。</p>
<h2 id="信息窗口" tabindex="-1"> 信息窗口</h2>
<p>绘图窗口下方是“信息”窗口。“消息/进度/日志”窗口用于显示重要的模型信息,例如: 警告消息、解算时间和进度、求解日志，并视情况显示结果表。</p>
<p>这些窗口用于显示非图形信息。包括:</p>
<ul>
<li>消息: 此窗口显示有关当前 COMSOL Multiphysics 会话的各种信息。</li>
<li>进度: 显示求解器中的进度信息和停止按钮。</li>
<li>日志: 显示求解器中的信息，例如自由度数、求解时间以及求解器迭代数据。</li>
<li>表格: 以表格形式显示结果节点中定义的数值数据。</li>
<li>外部进程: 提供用于集群、云计算和批处理作业的控制面板。</li>
</ul>
<div><p>带取消按钮的进度条</p>
<p>在软件中进行解算或执行其他操作时，桌面右下角会出现一个进度条用于表明正当前正在执行的任何操作或计算的状态。进度条旁边有个红色的 “X” 符号，用来取消操作。</p>
</div>
<h2 id="其他窗口" tabindex="-1"> 其他窗口</h2>
<p>功能区主屏幕选项卡中的窗口下拉列表可供您访问所有 COMSOL Desktop 窗口。对于 macOS 和 Linux 系统，则位于窗口菜单中。除上述窗口以外，您还
可以访问以下窗口:</p>
<ul>
<li>“添加物理场”和“添加多物理场”: 展开模型中的物理场接口。</li>
<li>添加研究: 更改研究类型。</li>
<li>从库中添加材料和材料浏览器: 访问材料属性库。</li>
<li>案例库: 从 MPH 文件(包含教学案例)和可运行 App 及其附属文档的集合中进行选择。</li>
<li>零件库: 加载一个预定义的参数化几何模型。</li>
<li>选择列表: 显示一组当前可供选择的几何对象、域、边界、边和点。</li>
<li>属性: 查看模型树节点属性。</li>
<li>调试日志: 显示方法的调试信息。</li>
<li>恢复文件: 查看恢复文件。</li>
<li>比较结果: 比较两个 MPH 文件的“模型开发器”和“App 开发器”设置。</li>
</ul>
<h3 id="动态帮助" tabindex="-1"> 动态帮助</h3>
<p>COMSOL Desktop 右上角有个动态帮助按钮可以打开 “帮助” 窗口，您也可以使用 F1 键进行访问。它会提供有关窗口和模型树节点的内容以及相关帮助文本。
所以，这里显示的信息取决于模型树中当前选定的节点。假设我们想了解有关某个物理场边界条件的更多信息，例如选择 “热通量” 节点， “帮助” 窗口会显示相关的文本。</p>
<p>帮助窗口提供有关窗口和模型树节点的上下文相关帮助文本。如果已在 Desktop 中打开帮助窗口(例如按 F1 键)，则在单击某个节点或窗口时，会自动获取动态帮助。您可以从帮助窗口搜索其他主题，如菜单项。</p>
<h2 id="app-开发器" tabindex="-1"> App 开发器 <i>Content not supported</i></h2>
<p>一旦创建好模型，您就能基于自己的模型开发一个 APP, 并与同事或客户共享。单击 “App 开发器” 按钮，可以在桌面上切换“App 编辑器” 和 COMSOL Multiphysics。</p>
<p>App 开发器提供两个重要的 App 创建工具: “表单编辑器”和“方法编辑器”。此外， App 还可以包含菜单栏或功能区。“表单编辑器”包含的拖放功能可用于轻松访问用户界面组件并将其加入 App，例如输入框、图形窗口及按钮。“方法编辑器”是一个编程环境，可供您修改以模型对象数据结构表示的模型等。您还可以使用“方法编辑器”将用户界面逻辑和辅助功能添加到 App。“方法编辑器”支持使用 Java 编程语言来编写代码，也就是说，您可以使用所有 Java 语法和 Java 库。“方法编辑器”中的程序代码存储在方法中。“方法”是其他编程语言中所谓的子例程、函数或过程等名称的另一种说法，可用于修改“模型开发器”和“App 开发器”中的模型对象数据结构。方法既可用于修改当前会话的模型对象，也可用于修改正在运行的 App 中的模型对象。</p>
<p>通过使用 COMSOL Compiler 产品，您可以将 App(MPH 文件)编译成支持 Windows、Linux 和 macOS 操作系统的可执行文件，并将编译后的可执行文件自由分发给其他人使用，他们无需任何许可证文件就能运行这些可执行文件。</p>
<h2 id="布局" tabindex="-1"> 布局</h2>
<p>您还可以根据需要定制桌面布局。所有窗口都可以调整大小、来回移动或隐藏。关闭会话时，您对 COMSOL Desktop 所做的任何更改都会保存。默认情况下，下次打开 COMSOL Multiphysics 时会显示这些更改。要恢复 COMSOL Desktop 的默认设置，使用“重置桌面”按钮就可以轻松完成。</p>
<h2 id="内置常数、变量和函数" tabindex="-1"> 内置常数、变量和函数</h2>
<p>COMSOL Multiphysics 包含许多内置的常数、变量及函数，用户不能重新定义它们的保留名称。如果用户定义的变量、参数或函数使用保留名称，则输入的文本会变为橙色 (警告)或红色 (错误)，并且用户在选择文本字符串时，将看到一条工具提示消息。</p>
<p>以下是一些重要示例:</p>
<ul>
<li>数学常数 (如 <code>pi</code> (3.14...))或虚部单位 <code>i</code> 或 <code>j</code></li>
<li>物理常数，如 <code>g_const</code> (重力加速度)、<code>c_const</code> (光速)或 <code>R_const</code> (通用气体常数)</li>
<li>时间变量，<code>t</code></li>
<li>因变量 (解)的一阶和二阶导数，其名称派生自空间坐标名称和因变量名称(用户定义的变量)</li>
<li>数学函数，如 <code>cos</code>、<code>sin</code>、<code>exp</code>、<code>log</code>、<code>log10</code> 和 <code>sqrt</code></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>材料</title>
      <link>https://mrhope.site/software/comsol/material.html</link>
      <guid>https://mrhope.site/software/comsol/material.html</guid>
      <source url="https://mrhope.site/rss.xml">材料</source>
      <category>软件</category>
      <pubDate>Mon, 01 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="内置材料" tabindex="-1"> 内置材料</h2>
<p>COMSOL Multiphysics<sup>®</sup> 软件提供了按应用领域分组的多种预定义材料，您可以根据需要将其添加到仿真中。</p>
<p>您可以很轻松的通过<strong>添加材料</strong>窗口或<strong>材料浏览器</strong>来添加材料。</p>
<h2 id="创建材料" tabindex="-1"> 创建材料</h2>
<p>在 COMSOL Multiphysics<sup>®</sup> 软件中，您可以根据自己的需求来创建完全定制的材料。操作步骤非常简单:</p>
<ul>
<li>在模型中添加空材料模板</li>
<li>将其指派给所需的模型几何部分</li>
<li>通过指定材料属性来详细描述材料的性能。</li>
</ul>
<p>您可以使用常数、参数、编写表达式来定义每个材料属性的值。不仅如此，您还能控制材料在图形窗口中的外观显示。在创建材料后，您可以将它添加到“用户定义的材料库”中，将其保存以便在之后的仿真中继续使用。</p>
<h2 id="材料函数" tabindex="-1"> 材料函数</h2>
<p>在 COMSOL Multiphysics<sup>®</sup> 软件中，您可以使用“内插”、“解析”和“分段”函数来指定材料属性。</p>
<ul>
<li>
<p>内插函数可用于描述由表格或文件定义的材料属性，这些表格或文件包含离散点上的函数值。您可以手动输入数据，也可以从数据文件中直接导入。然后，指定数据点之间以及超出数据范围的函数的性质。</p>
</li>
<li>
<p>解析函数可用于将材料属性指定为一个或多个变元的函数，或指定为自变量(如温度或压力)。首先，输入用于定义函数的数学表达式；然后，输入函数的变元，并指定每个变元的取值范围。</p>
</li>
<li>
<p>分段函数适用于描述在不同间隔有不同定义的材料属性。您可以输入每个间隔的起点、终点及其相关函数，并选择内插和外推方法。</p>
</li>
</ul>
<h2 id="全局材料" tabindex="-1"> 全局材料</h2>
<p>借助 COMSOL Multiphysics<sup>®</sup> 软件，您只需在模型中添加材料(称为“全局材料”)，然后在组件中使用材料链接 特征即可将材料关联到该组件。当模型包含多个组件时，这种方式非常有用，可以帮助您快速为各个组件指定材料。在软件中，全局材料可以用于整个模型，其添加方式与局部材料相同。除此之外，全局材料还可应用于任意几何层。</p>
<div><p>提示</p>
<p>这个主要是当一个模型含有多个组件时很有用</p>
</div>
<h2 id="材料扫描" tabindex="-1"> 材料扫描</h2>
<p>材料扫描会扫描并比较不同材料。这意味着无需手动更改模型中指定的材料，也不必在每次更改后都重新运行仿真分析，就能直接让这一过程自动执行。</p>
<p>材料扫描研究可以求解已指定材料的模型，并能为每种材料对模型产生的影响提供对比结果。实现此操作的步骤包括: 添加材料开关 节点、指定要切换的材料，然后将“材料扫描”添加到研究中。</p>
<h2 id="官方视频" tabindex="-1"> 官方视频</h2>
<ul>
<li><a href="https://cn.comsol.com/video/creating-new-material-comsol-multiphysics" target="_blank" rel="noopener noreferrer">在 COMSOL Multiphysics<sup>®</sup> 中创建新材料<ExternalLinkIcon/></a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>模型树</title>
      <link>https://mrhope.site/software/comsol/model-tree.html</link>
      <guid>https://mrhope.site/software/comsol/model-tree.html</guid>
      <source url="https://mrhope.site/rss.xml">模型树</source>
      <description>使用“模型开发器”时，可通过以在默认的模型树中添加节点并编辑节点设置来构建模型。
默认模型树中的所有节点均为顶层父节点。可以右键单击这些节点以查看可在其中添加的子节点的列表。这是将节点添加到模型树的方式。
当您单击某个子节点时，可以在设置窗口中查看其节点设置。您可以在此编辑节点设置。
</description>
      <category>软件</category>
      <pubDate>Mon, 01 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>使用“模型开发器”时，可通过以在默认的模型树中添加节点并编辑节点设置来构建模型。</p>
<p>默认模型树中的所有节点均为顶层父节点。可以右键单击这些节点以查看可在其中添加的子节点的列表。这是将节点添加到模型树的方式。</p>
<p>当您单击某个子节点时，可以在设置窗口中查看其节点设置。您可以在此编辑节点设置。</p>

<h2 id="根节点" tabindex="-1"> 根节点</h2>
<p>模型树始终包含根节点 (初始标签为 Untitled.mph)、全局定义节点和结果节点。根节点的标签是用来保存模型的多物理场模型文件 (或 MPH 文件)的名称。根节点包含作者姓名、默认单位制等设置。</p>
<h2 id="全局定义" tabindex="-1"> 全局定义</h2>
<p>默认情况下，全局定义节点包含参数和材料子节点，用于定义可在整个模型树中使用的参数、变量、函数及耦合等。例如，可用于定义材料属性、力、几何及其他相关特征的值和函数依赖关系。全局定义节点本身不含任何设置，但其子节点包含许多设置。材料子节点用于存储材料属性，可在模型的组件节点中引用。</p>
<h2 id="组件和研究节点" tabindex="-1"> 组件和研究节点</h2>
<p>组件节点和研究节点通常在创建新模型时由 “模型向导”创建。使用 “模型向导”指定要建模的物理场类型以及要执行的研究类型 (如稳态、瞬态、频域或特征频率分析)后，“模型向导”会自动为每种类型创建一个节点并显示其内容。</p>
<p>您还可以在开发模型时添加更多的组件和研究节点。模型可以包含多个组件和研究节点，如果它们的名称都相同，可能会造成混淆。因此，您可以根据这些节点类型各自的用途将其重命名。</p>
<p>如果模型包含多个组件节点，可以将其耦合在一起，形成一系列更为复杂的仿真步骤。</p>
<div><p>提示</p>
<p>每个研究节点都可以执行不同类型的计算，因此每个节点都有单独的计算按钮。同时，这也意味着您可以用同一个模型来进行多个不同研究。</p>
</div>
<h2 id="结果节点" tabindex="-1"> 结果节点</h2>
<p>结果节点用于访问通过执行仿真得到的解，其中还提供多个数据处理工具。结果节点最初包含五个子节点:</p>
<ul>
<li>数据集: 包含一组可供使用的解。</li>
<li>派生值: 使用大量后处理工具来定义要从解中派生的值。</li>
<li>表格: 一个非常方便的目标位置，用于存储探针生成的派生值或结果，这些探针在仿真运行期间实时监视解。</li>
<li>导出: 定义要导出至文件的数值数据、图像及动画。</li>
<li>报告: 包含自动生成或定制的模型报告，格式为 HTML 或 Microsoft Word。</li>
</ul>
<p>除了这五个默认子节点，您还可以添加更多绘图组子节点，用于定义要在图形或绘图窗口中显示的图形。其中一些节点可根据所执行的仿真类型自动创建，您也可以右键单击结果节点，并从绘图类型列表中进行选择来包含其他图形</p>
<h2 id="参数、函数、变量和范围" tabindex="-1"> 参数、函数、变量和范围</h2>
<h3 id="全局参数" tabindex="-1"> 全局参数</h3>
<p>全局参数是用户定义的常数标量，可在整个模型中使用。也就是说，这些参数具有 “全局”性质。其重要用途包括:</p>
<ul>
<li>参数化几何尺寸。</li>
<li>指定网格单元大小。</li>
<li>定义参数化扫描 (即针对频率或载荷等各种不同的参数值反复运行仿真)。</li>
</ul>
<p>全局参数表达式可以包含数字、全局参数、内置常数、使用全局参数表达式作为变元的内置和用户定义函数，以及一元和二元运算符。</p>
<p>您可以在模型树的全局定义下的参数节点中定义全局参数。</p>
<div><p>提示</p>
<p>参数名称区分大小写</p>
</div>
<h3 id="结果参数" tabindex="-1"> 结果参数</h3>
<p>为了实现更高的灵活性，可定义仅在结果节点中使用的参数。使用这些参数时无需解析模型。</p>
<h3 id="函数" tabindex="-1"> 函数</h3>
<p>函数可用于全局定义和组件 &gt; 定义，其中包含一系列预定义的函数模板，这在建立多物理场仿真时非常有用。例如，阶跃函数模板可以创建平滑的阶跃函
数，用于定义不同类型的空间或时间过渡。</p>
<h3 id="变量" tabindex="-1"> 变量</h3>
<p>变量在模型树中具有关联的变量节点，可在全局定义节点中定义，也可在任意组件节点的定义子节点中定义。</p>
<p>当然，选择在何处定义变量取决于您希望该变量是全局 (即在整个模型树中可用)的，还是在单个组件节点内进行局部定义。与参数表达式类似，变量表达式可以包含数字、参数、内置常数以及一元和二元运算符。不过，变量表达式还可以包含变量 (如 t、x、y 或 z)；以变量表达式为变元的函数；以及要求解的因变量及其空间和时间的导数。</p>
<p>如果模型包含许多变量节点，则可以使用节点组特征将其组合在一起。节点组可用于对全局定义、组件下的定义、材料、物理场接口和结果中的节点进行分组。</p>
<h3 id="app-中使用的变量" tabindex="-1"> App 中使用的变量 <i>Content not supported</i></h3>
<p>模型参数和变量可在 App 中使用。例如，您可以让 App 用户更改参数值。此外，还可以在 “App 开发器”中 App 树的声明节点下定义要在 App 中使用的变量。此类变量也能在模型方法中使用。</p>
<h3 id="范围" tabindex="-1"> 范围</h3>
<p>参数或变量的 “范围”是一条声明该参数或变量在表达式中的使用位置的语句。所有全局参数均在模型树的全局定义节点中定义为参数子节点。这意味着它们的范围是全局性的，可在整个模型树中使用。</p>
<p>变量也可以在 “全局定义”节点中定义为变量子节点，此时变量具有全局范围，但受到其他限制。例如，变量不能用于几何、网格或研究节点 (在确定仿真停止时间的表达式中使用变量的情况除外)。</p>
<p>在组件节点的定义子节点下定义的变量具有局部范围，仅在这一特定组件中使用 (但同样不用于几何或网格节点)。例如，这些变量可用于在组件的材料子节点中指定材料属性，或用于指定边界条件或相互作用。有时，需要将变量的范围限制在几何的特定部分，如某些边界。为此，变量的设置中提供了一些预设值，可供您选择是将定义应用于整个组件几何，还是仅应用于某个域、边界、边或点。</p>
]]></content:encoded>
    </item>
    <item>
      <title>结果</title>
      <link>https://mrhope.site/software/comsol/result.html</link>
      <guid>https://mrhope.site/software/comsol/result.html</guid>
      <source url="https://mrhope.site/rss.xml">结果</source>
      <category>软件</category>
      <pubDate>Mon, 01 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>提示</p>
<p>制作中...</p>
</div>
<h2 id="官方文档" tabindex="-1"> 官方文档</h2>
<h3 id="结果基础" tabindex="-1"> 结果基础</h3>
<p>博客:</p>
<ul>
<li><a href="https://cn.comsol.com/blogs/how-to-export-and-share-your-3d-result-plots-as-gltf-files/" target="_blank" rel="noopener noreferrer">如何将三维结果图导出为可共享的 glTF™ 文件<ExternalLinkIcon/></a></li>
</ul>
<p>视频:</p>
<ul>
<li>
<p><a href="https://cn.comsol.com/video/arrow-plots-visualize-results" target="_blank" rel="noopener noreferrer">如何使用箭头图对结果进行可视化<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://cn.comsol.com/video/creating-exporting-model-reports-comsol-multiphysics" target="_blank" rel="noopener noreferrer">在 COMSOL Multiphysics<sup>®</sup> 中创建并导出模型报告<ExternalLinkIcon/></a></p>
</li>
</ul>
<h3 id="结果进阶" tabindex="-1"> 结果进阶</h3>
<ul>
<li>
<p><a href="https://cn.comsol.com/blogs/how-to-create-animations-along-the-azimuthal-direction-for-3d-models/" target="_blank" rel="noopener noreferrer">如何在三维模型中创建随方位角变化的动画<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://cn.comsol.com/video/chapter-1-advanced-visualization-techniques-postprocessing" target="_blank" rel="noopener noreferrer">高级可视化后处理技巧: 第 1 章<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://cn.comsol.com/video/chapter-2-advanced-visualization-techniques-postprocessing" target="_blank" rel="noopener noreferrer">高级可视化后处理技巧: 第 2 章<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://cn.comsol.com/video/chapter-3-advanced-visualization-techniques-postprocessing" target="_blank" rel="noopener noreferrer">高级可视化后处理技巧: 第 3 章<ExternalLinkIcon/></a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>选择</title>
      <link>https://mrhope.site/software/comsol/select.html</link>
      <guid>https://mrhope.site/software/comsol/select.html</guid>
      <source url="https://mrhope.site/rss.xml">选择</source>
      <category>软件</category>
      <pubDate>Mon, 01 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="显式选择" tabindex="-1"> 显式选择</h2>
<p>COMSOL Multiphysics<sup>®</sup> 软件中的“显式选择”特征可以为单独的几何实体分别创建选择，从而帮助简化模型并优化工作流程。</p>
<p>比如您做了一个(保温层-镀层-铜)的三层管道，您可以预先创建一个显式选择，选中所有镀层的几何域。则您可以在物理场、网格和结果中，使用这个选择，来快速选中所有镀层的几何对象。</p>
<h2 id="布尔选择和相邻选择" tabindex="-1"> 布尔选择和相邻选择</h2>
<p>在 COMSOL Multiphysics<sup>®</sup> 中，您可以使用布尔型选择和相邻选择来创建定制的几何实体组。选择的最大特点是这些几何实体组在模型几何更改时会自动更新。以下所有选择类型都使用先前定义的选择作为输入。</p>
<p>布尔选择包括:</p>
<ul>
<li>补集选择: 创建一个或多个选择的逆选择</li>
<li>差集选择: 为属于一个选择但不属于另一个选择的实体创建选择</li>
<li>并集选择: 将两个或多个选择合并成一个选择</li>
<li>交集选择: 为包含在所有输入选择中的实体创建选择</li>
</ul>
<div><p>提示</p>
<p>布尔选择在需要选择的几何实体可以根据其他已经进行显式选择的集合体进行选中时，及其有用。</p>
<p>比如我做过的一个笔电热管的建模，笔记本风扇有 24 个扇叶，但是可以通过限定风扇外壳以内与轴以外的区域，快速选中所有扇叶。</p>
</div>
<p>如果要为接触其他选择的几何实体创建选择，请使用相邻选择，您还可以通过该选择类型选择外部实体或内部实体。</p>
<div><p>提示</p>
<p>以刚才的铜管为例，您可以很方便的利用相邻选择，基于刚才的镀层选择来对铜管或保温层进行选择。</p>
</div>
<h2 id="基于坐标的选择" tabindex="-1"> 基于坐标的选择</h2>
<div><p>提示</p>
<p>基于坐标的选择在需要选择的几何实体可以根据坐标位置位置或其他已经进行显式选择的集合体进行选中时，及其有用。</p>
<p>同样是我做过的那个笔电热管的建模，可以通过指定位置的区域，快速选中所有扇叶。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>研究</title>
      <link>https://mrhope.site/software/comsol/study.html</link>
      <guid>https://mrhope.site/software/comsol/study.html</guid>
      <source url="https://mrhope.site/rss.xml">研究</source>
      <category>软件</category>
      <pubDate>Mon, 01 Jun 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>提示</p>
<p>制作中...</p>
</div>
<h2 id="官方文档" tabindex="-1"> 官方文档</h2>
<p>视频:</p>
<ul>
<li>
<p><a href="https://cn.comsol.com/video/performing-a-parameter-estimation-study-in-comsol-multiphysics" target="_blank" rel="noopener noreferrer">在 COMSOL Multiphysics<sup>®</sup> 中运行“参数估计”研究<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://cn.comsol.com/video/performing-parametric-sweep-study-comsol-multiphysics" target="_blank" rel="noopener noreferrer">在 COMSOL Multiphysics 中执行参数化扫描研究<ExternalLinkIcon/></a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>函数式编程</title>
      <link>https://mrhope.site/code/language/python/functional-programming/</link>
      <guid>https://mrhope.site/code/language/python/functional-programming/</guid>
      <source url="https://mrhope.site/rss.xml">函数式编程</source>
      <category>Python</category>
      <pubDate>Sun, 31 May 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>函数是 Python 内建支持的一种封装，我们通过把大段代码拆成函数，通过一层一层的函数调用，就可以把复杂任务分解成简单的任务，这种分解可以称之为面向过程的程序设计。函数就是面向过程的程序设计的基本单元。</p>
<p>而函数式编程(请注意多了一个“式”字)——Functional Programming，虽然也可以归结到面向过程的程序设计，但其思想更接近数学计算。</p>
<p>我们首先要搞明白计算机(Computer)和计算(Compute)的概念。</p>
<p>在计算机的层次上，CPU 执行的是加减乘除的指令代码，以及各种条件判断和跳转指令，所以，汇编语言是最贴近计算机的语言。</p>
<p>而计算则指数学意义上的计算，越是抽象的计算，离计算机硬件越远。</p>
<p>对应到编程语言，就是越低级的语言，越贴近计算机，抽象程度低，执行效率高，比如 C 语言；越高级的语言，越贴近计算，抽象程度高，执行效率低，比如 Lisp 语言。</p>
<p>函数式编程就是一种抽象程度很高的编程范式，纯粹的函数式编程语言编写的函数没有变量，因此，任意一个函数，只要输入是确定的，输出就是确定的，这种纯函数我们称之为没有副作用。而允许使用变量的程序设计语言，由于函数内部的变量状态不确定，同样的输入，可能得到不同的输出，因此，这种函数是有副作用的。</p>
<p>函数式编程的一个特点就是，允许把函数本身作为参数传入另一个函数，还允许返回一个函数!</p>
<p>Python 对函数式编程提供部分支持。由于 Python 允许使用变量，因此，Python 不是纯函数式编程语言。</p>
<h2 id="目录" tabindex="-1"> 目录</h2>
<ul>
<li>
<p><a href="/code/language/python/functional-programming/high-order-function/intro.html">高阶函数介绍</a></p>
</li>
<li>
<p><a href="/code/language/python/functional-programming/high-order-function/map-and-reduce.html">map / reduce</a></p>
</li>
<li>
<p><a href="/code/language/python/functional-programming/high-order-function/filter.html">filter</a></p>
</li>
<li>
<p><a href="/code/language/python/functional-programming/high-order-function/sorted.html">sorted</a></p>
</li>
<li>
<p><a href="/code/language/python/functional-programming/return-function.html">返回函数</a></p>
</li>
<li>
<p><a href="/code/language/python/functional-programming/anonymous-function.html">匿名函数</a></p>
</li>
<li>
<p><a href="/code/language/python/functional-programming/decorator.html">装饰器</a></p>
</li>
<li>
<p><a href="/code/language/python/functional-programming/parital-function.html">偏函数</a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>filter</title>
      <link>https://mrhope.site/code/language/python/functional-programming/high-order-function/filter.html</link>
      <guid>https://mrhope.site/code/language/python/functional-programming/high-order-function/filter.html</guid>
      <source url="https://mrhope.site/rss.xml">filter</source>
      <category>Python</category>
      <pubDate>Sun, 31 May 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Python 内建的 <code>filter()</code> 函数用于过滤序列。</p>
<p>和 <code>map()</code> 类似，<code>filter()</code> 也接收一个函数和一个序列。和 <code>map()</code> 不同的是，<code>filter()</code> 把传入的函数依次作用于每个元素，然后根据返回值是 <code>True</code> 还是 <code>False</code> 决定保留还是丢弃该元素。</p>
<p>例如，在一个 list 中，删掉偶数，只保留奇数，可以这么写:</p>
<div><pre><code><span>def</span> <span>is_odd</span><span>(</span>n<span>)</span><span>:</span>
    <span>return</span> n <span>%</span> <span>2</span> <span>==</span> <span>1</span>

<span>list</span><span>(</span><span>filter</span><span>(</span>is_odd<span>,</span> <span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>4</span><span>,</span> <span>5</span><span>,</span> <span>6</span><span>,</span> <span>9</span><span>,</span> <span>10</span><span>,</span> <span>15</span><span>]</span><span>)</span><span>)</span>
<span># 结果: [1, 5, 9, 15]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>把一个序列中的空字符串删掉，可以这么写:</p>
<div><pre><code><span>def</span> <span>not_empty</span><span>(</span>s<span>)</span><span>:</span>
    <span>return</span> s <span>and</span> s<span>.</span>strip<span>(</span><span>)</span>

<span>list</span><span>(</span><span>filter</span><span>(</span>not_empty<span>,</span> <span>[</span><span>'A'</span><span>,</span> <span>''</span><span>,</span> <span>'B'</span><span>,</span> <span>None</span><span>,</span> <span>'C'</span><span>,</span> <span>'  '</span><span>]</span><span>)</span><span>)</span>
<span># 结果: ['A', 'B', 'C']</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>可见用 <code>filter()</code> 这个高阶函数，关键在于正确实现一个“筛选”函数。</p>
<p>注意到 <code>filter()</code> 函数返回的是一个 Iterator，也就是一个惰性序列，所以要强迫 <code>filter()</code> 完成计算结果，需要用 <code>list()</code> 函数获得所有结果并返回 list。</p>
<h2 id="用-filter-求素数" tabindex="-1"> 用 filter 求素数</h2>
<p>计算素数的一个方法是埃氏筛法，它的算法理解起来非常简单:</p>
<p>首先，列出从 2 开始的所有自然数，构造一个序列:</p>
<p>2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ...</p>
<p>取序列的第一个数 2，它一定是素数，然后用 2 把序列的 2 的倍数筛掉:</p>
<p>3, <s>4</s>, 5, <s>6</s>, 7, <s>8</s>, 9, <s>10</s>, 11, <s>12</s>, 13, <s>14</s>, 15, <s>16</s>, 17, <s>18</s>, 19, <s>20</s>, ...</p>
<p>取新序列的第一个数 3，它一定是素数，然后用 3 把序列的 3 的倍数筛掉:</p>
<p>5, <s>6</s>, 7, <s>8</s>, <s>9</s>, <s>10</s>, 11, <s>12</s>, 13, <s>14</s>, <s>15</s>, <s>16</s>, 17, <s>18</s>, 19, <s>20</s>, ...</p>
<p>取新序列的第一个数 5，然后用 5 把序列的 5 的倍数筛掉:</p>
<p>7, <s>8</s>, <s>9</s>, <s>10</s>, 11, <s>12</s>, 13, <s>14</s>, <s>15</s>, <s>16</s>, 17, <s>18</s>, 19, <s>20</s>, ...</p>
<p>不断筛下去，就可以得到所有的素数。</p>
<p>用 Python 来实现这个算法，可以先构造一个从 3 开始的奇数序列:</p>
<div><pre><code><span>def</span> <span>_odd_iter</span><span>(</span><span>)</span><span>:</span>
    n <span>=</span> <span>1</span>
    <span>while</span> <span>True</span><span>:</span>
        n <span>=</span> n <span>+</span> <span>2</span>
        <span>yield</span> n
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>注意这是一个生成器，并且是一个无限序列。</p>
<p>然后定义一个筛选函数:</p>
<div><pre><code><span>def</span> <span>_not_divisible</span><span>(</span>n<span>)</span><span>:</span>
    <span>return</span> <span>lambda</span> x<span>:</span> x <span>%</span> n <span>></span> <span>0</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>最后，定义一个生成器，不断返回下一个素数:</p>
<div><pre><code><span>def</span> <span>primes</span><span>(</span><span>)</span><span>:</span>
    <span>yield</span> <span>2</span>
    it <span>=</span> _odd_iter<span>(</span><span>)</span> <span># 初始序列</span>
    <span>while</span> <span>True</span><span>:</span>
        n <span>=</span> <span>next</span><span>(</span>it<span>)</span> <span># 返回序列的第一个数</span>
        <span>yield</span> n
        it <span>=</span> <span>filter</span><span>(</span>_not_divisible<span>(</span>n<span>)</span><span>,</span> it<span>)</span> <span># 构造新序列</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>这个生成器先返回第一个素数 2，然后，利用 <code>filter()</code> 不断产生筛选后的新的序列。</p>
<p>由于 <code>primes()</code> 也是一个无限序列，所以调用时需要设置一个退出循环的条件:</p>
<div><pre><code><span># 打印1000以内的素数</span>

<span>for</span> n <span>in</span> primes<span>(</span><span>)</span><span>:</span>
    <span>if</span> n <span>&lt;</span> <span>1000</span><span>:</span>
        <span>print</span><span>(</span>n<span>)</span>
    <span>else</span><span>:</span>
        <span>break</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>注意到 Iterator 是惰性计算的序列，所以我们可以用 Python 表示“全体自然数”，“全体素数”这样的序列，而代码非常简洁。</p>
<h2 id="小结" tabindex="-1"> 小结</h2>
<p><code>filter()</code> 的作用是从一个序列中筛出符合条件的元素。由于 <code>filter()</code> 使用了惰性计算，所以只有在取 <code>filter()</code> 结果的时候，才会真正筛选并每次返回下一个筛出的元素。</p>
]]></content:encoded>
    </item>
    <item>
      <title>介绍</title>
      <link>https://mrhope.site/code/language/python/functional-programming/high-order-function/intro.html</link>
      <guid>https://mrhope.site/code/language/python/functional-programming/high-order-function/intro.html</guid>
      <source url="https://mrhope.site/rss.xml">介绍</source>
      <description>高阶函数英文叫 Higher-order function。什么是高阶函数? 把函数作为参数传入，这样的函数称为高阶函数。
</description>
      <category>Python</category>
      <pubDate>Sun, 31 May 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>高阶函数英文叫 Higher-order function。什么是高阶函数? 把函数作为参数传入，这样的函数称为高阶函数。</p>

<p>我们以实际代码为例子，一步一步深入概念。</p>
<h2 id="变量可以指向函数" tabindex="-1"> 变量可以指向函数</h2>
<p>以 Python 内置的求绝对值的函数 <code>abs()</code> 为例，调用该函数用以下代码:</p>
<div><pre><code><span>>></span><span>></span> <span>abs</span><span>(</span><span>-</span><span>10</span><span>)</span>
<span>10</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>但是，如果只写 <code>abs</code> 呢?</p>
<div><pre><code><span>>></span><span>></span> <span>abs</span>
<span>&lt;</span>built<span>-</span><span>in</span> function <span>abs</span><span>></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>可见，<code>abs(-10)</code> 是函数调用，而 <code>abs</code> 是函数本身。</p>
<p>要获得函数调用结果，我们可以把结果赋值给变量:</p>
<div><pre><code><span>>></span><span>></span> x <span>=</span> <span>abs</span><span>(</span><span>-</span><span>10</span><span>)</span>
<span>>></span><span>></span> x
<span>10</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>但是，如果把函数本身赋值给变量呢?</p>
<div><pre><code><span>>></span><span>></span> f <span>=</span> <span>abs</span>
<span>>></span><span>></span> f
<span>&lt;</span>built<span>-</span><span>in</span> function <span>abs</span><span>></span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>结论: 函数本身也可以赋值给变量，即: 变量可以指向函数。</p>
<p>如果一个变量指向了一个函数，那么，可否通过该变量来调用这个函数? 用代码验证一下:</p>
<div><pre><code><span>>></span><span>></span> f <span>=</span> <span>abs</span>
<span>>></span><span>></span> f<span>(</span><span>-</span><span>10</span><span>)</span>
<span>10</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>成功! 说明变量 f 现在已经指向了 <code>abs</code> 函数本身。直接调用 <code>abs()</code> 函数和调用变量 <code>f()</code> 完全相同。</p>
<h2 id="函数名也是变量" tabindex="-1"> 函数名也是变量</h2>
<p>那么函数名是什么呢? 函数名其实就是指向函数的变量! 对于 <code>abs()</code> 这个函数，完全可以把函数名 <code>abs</code> 看成变量，它指向一个可以计算绝对值的函数!</p>
<p>如果把 <code>abs</code> 指向其他对象，会有什么情况发生?</p>
<div><pre><code><span>>></span><span>></span> abs <span>=</span> <span>10</span>
<span>>></span><span>></span> abs<span>(</span>-10<span>)</span>
Traceback <span>(</span>most recent call last<span>)</span>:
  File <span>"&lt;stdin>"</span>, line <span>1</span>, <span>in</span> <span>&lt;</span>module<span>></span>
TypeError: <span>'int'</span> object is not callable
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>把 <code>abs</code> 指向 <code>10</code> 后，就无法通过 <code>abs(-10)</code> 调用该函数了! 因为 <code>abs</code> 这个变量已经不指向求绝对值函数而是指向一个整数 10!</p>
<p>当然实际代码绝对不能这么写，这里是为了说明函数名也是变量。要恢复 <code>abs</code> 函数，请重启 Python 交互环境。</p>
<div><p>提示</p>
<p>由于 abs 函数实际上是定义在 <code>import builtins</code> 模块中的，所以要让修改 <code>abs</code> 变量的指向在其它模块也生效，要用 <code>import builtins; builtins.abs = 10</code>。</p>
</div>
<h2 id="传入函数" tabindex="-1"> 传入函数</h2>
<p>既然变量可以指向函数，函数的参数能接收变量，那么一个函数就可以接收另一个函数作为参数，这种函数就称之为高阶函数。</p>
<p>一个最简单的高阶函数:</p>
<div><pre><code><span>def</span> <span>add</span><span>(</span>x<span>,</span> y<span>,</span> f<span>)</span><span>:</span>
    <span>return</span> f<span>(</span>x<span>)</span> <span>+</span> f<span>(</span>y<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>当我们调用 <code>add(-5, 6, abs)</code> 时，参数 <code>x</code>，<code>y</code> 和 <code>f</code> 分别接收 <code>-5</code>，<code>6</code> 和 <code>abs</code>，根据函数定义，我们可以推导计算过程为:</p>
<div><pre><code>x <span>=</span> <span>-</span><span>5</span>
y <span>=</span> <span>6</span>
f <span>=</span> <span>abs</span>
f<span>(</span>x<span>)</span> <span>+</span> f<span>(</span>y<span>)</span> <span>==</span><span>></span> <span>abs</span><span>(</span><span>-</span><span>5</span><span>)</span> <span>+</span> <span>abs</span><span>(</span><span>6</span><span>)</span> <span>==</span><span>></span> <span>11</span>
<span>return</span> <span>11</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>编写高阶函数，就是让函数的参数能够接收别的函数。</p>
<h2 id="小结" tabindex="-1"> 小结</h2>
<p>把函数作为参数传入，这样的函数称为高阶函数，函数式编程就是指这种高度抽象的编程范式</p>
]]></content:encoded>
    </item>
    <item>
      <title>map / reduce</title>
      <link>https://mrhope.site/code/language/python/functional-programming/high-order-function/map-and-reduce.html</link>
      <guid>https://mrhope.site/code/language/python/functional-programming/high-order-function/map-and-reduce.html</guid>
      <source url="https://mrhope.site/rss.xml">map / reduce</source>
      <description>Python 内建了 map() 和 reduce() 函数。
如果您读过 Google 的那篇大名鼎鼎的论文 “MapReduce: Simplified Data Processing on Large Clusters”，您就能大概明白 map / reduce 的概念。

访问需要科学上网。

</description>
      <category>Python</category>
      <pubDate>Sun, 31 May 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Python 内建了 <code>map()</code> 和 <code>reduce()</code> 函数。</p>
<p>如果您读过 Google 的那篇大名鼎鼎的论文 <a href="http://research.google.com/archive/mapreduce.html" target="_blank" rel="noopener noreferrer">“MapReduce: Simplified Data Processing on Large Clusters”<ExternalLinkIcon/></a>，您就能大概明白 map / reduce 的概念。</p>
<blockquote>
<p>访问需要科学上网。</p>
</blockquote>

<p>我们先看 map。<code>map()</code> 函数接收两个参数，一个是函数，一个是 <code>Iterable</code>，map 将传入的函数依次作用到序列的每个元素，并把结果作为新的 <code>Iterator</code> 返回。</p>
<p>举例说明，比如我们有一个函数 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:1em;vertical-align:-0.25em;"></span><span style="margin-right:0.10764em;">f</span><span>(</span><span>x</span><span>)</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.8141em;"></span><span><span>x</span><span><span><span><span style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span> ，要把这个函数作用在一个 list <code>[1, 2, 3, 4, 5, 6, 7, 8, 9]</code> 上，就可以用 <code>map()</code> 实现如下:</p>
<div><pre><code>            f(x) = x * x

                  │
                  │
  ┌───┬───┬───┬───┼───┬───┬───┬───┐
  │   │   │   │   │   │   │   │   │
  ▼   ▼   ▼   ▼   ▼   ▼   ▼   ▼   ▼

[ 1   2   3   4   5   6   7   8   9 ]

  │   │   │   │   │   │   │   │   │
  │   │   │   │   │   │   │   │   │
  ▼   ▼   ▼   ▼   ▼   ▼   ▼   ▼   ▼

[ 1   4   9  16  25  36  49  64  81 ]
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><p>现在，我们用 Python 代码实现:</p>
<div><pre><code><span>>></span><span>></span> <span>def</span> <span>f</span><span>(</span>x<span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     <span>return</span> x <span>*</span> x
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> r <span>=</span> <span>map</span><span>(</span>f<span>,</span> <span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>,</span> <span>5</span><span>,</span> <span>6</span><span>,</span> <span>7</span><span>,</span> <span>8</span><span>,</span> <span>9</span><span>]</span><span>)</span>
<span>>></span><span>></span> <span>list</span><span>(</span>r<span>)</span>
<span>[</span><span>1</span><span>,</span> <span>4</span><span>,</span> <span>9</span><span>,</span> <span>16</span><span>,</span> <span>25</span><span>,</span> <span>36</span><span>,</span> <span>49</span><span>,</span> <span>64</span><span>,</span> <span>81</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p><code>map()</code> 传入的第一个参数是 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:0.8889em;vertical-align:-0.1944em;"></span><span style="margin-right:0.10764em;">f</span></span></span></span> ，即函数对象本身。由于结果 <code>r</code> 是一个 Iterator，Iterator 是惰性序列，因此通过 <code>list()</code> 函数让它把整个序列都计算出来并返回一个 list。</p>
<p>您可能会想，不需要 <code>map()</code> 函数，写一个循环，也可以计算出结果:</p>
<div><pre><code>L <span>=</span> <span>[</span><span>]</span>
<span>for</span> n <span>in</span> <span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>,</span> <span>5</span><span>,</span> <span>6</span><span>,</span> <span>7</span><span>,</span> <span>8</span><span>,</span> <span>9</span><span>]</span><span>:</span>
    L<span>.</span>append<span>(</span>f<span>(</span>n<span>)</span><span>)</span>
<span>print</span><span>(</span>L<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>的确可以，但是，从上面的循环代码，能一眼看明白“把 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:1em;vertical-align:-0.25em;"></span><span style="margin-right:0.10764em;">f</span><span>(</span><span>x</span><span>)</span></span></span></span> 作用在 list 的每一个元素并把结果生成一个新的 list”吗?</p>
<p>所以，<code>map()</code> 作为高阶函数，事实上它把运算规则抽象了，因此，我们不但可以计算简单的 <span><span><i>Content not supported</i></span><span aria-hidden="true"><span><span style="height:1em;vertical-align:-0.25em;"></span><span style="margin-right:0.10764em;">f</span><span>(</span><span>x</span><span>)</span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:0.8141em;"></span><span><span>x</span><span><span><span><span style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>2</span></span></span></span></span></span></span></span></span></span></span> ，还可以计算任意复杂的函数，比如，把这个 list 所有数字转为字符串:</p>
<div><pre><code><span>>></span><span>></span> <span>list</span><span>(</span><span>map</span><span>(</span><span>str</span><span>,</span> <span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>,</span> <span>5</span><span>,</span> <span>6</span><span>,</span> <span>7</span><span>,</span> <span>8</span><span>,</span> <span>9</span><span>]</span><span>)</span><span>)</span>
<span>[</span><span>'1'</span><span>,</span> <span>'2'</span><span>,</span> <span>'3'</span><span>,</span> <span>'4'</span><span>,</span> <span>'5'</span><span>,</span> <span>'6'</span><span>,</span> <span>'7'</span><span>,</span> <span>'8'</span><span>,</span> <span>'9'</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>只需要一行代码。</p>
<p>再看 <code>reduce</code> 的用法。<code>reduce</code> 把一个函数作用在一个序列 <code>[x1, x2, x3, ...]</code> 上，这个函数必须接收两个参数，<code>reduce</code> 把结果继续和序列的下一个元素做累积计算，其效果就是:</p>
<div><pre><code><span>reduce</span><span>(</span>f<span>,</span> <span>[</span>x1<span>,</span> x2<span>,</span> x3<span>,</span> x4<span>]</span><span>)</span> <span>=</span> f<span>(</span>f<span>(</span>f<span>(</span>x1<span>,</span> x2<span>)</span><span>,</span> x3<span>)</span><span>,</span> x4<span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>比方说对一个序列求和，就可以用 reduce 实现:</p>
<div><pre><code><span>>></span><span>></span> <span>from</span> functools <span>import</span> <span>reduce</span>
<span>>></span><span>></span> <span>def</span> <span>add</span><span>(</span>x<span>,</span> y<span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     <span>return</span> x <span>+</span> y
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> <span>reduce</span><span>(</span>add<span>,</span> <span>[</span><span>1</span><span>,</span> <span>3</span><span>,</span> <span>5</span><span>,</span> <span>7</span><span>,</span> <span>9</span><span>]</span><span>)</span>
<span>25</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>当然求和运算可以直接用 Python 内建函数 <code>sum()</code>，没必要动用 <code>reduce</code>。</p>
<p>但是如果要把序列 <code>[1, 3, 5, 7, 9]</code> 变换成整数 13579，<code>reduce</code> 就可以派上用场:</p>
<div><pre><code><span>>></span><span>></span> <span>from</span> functools <span>import</span> <span>reduce</span>
<span>>></span><span>></span> <span>def</span> <span>fn</span><span>(</span>x<span>,</span> y<span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     <span>return</span> x <span>*</span><span>10</span> <span>+</span> y
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> <span>reduce</span><span>(</span>fn<span>,</span> <span>[</span><span>1</span><span>,</span> <span>3</span><span>,</span> <span>5</span><span>,</span> <span>7</span><span>,</span> <span>9</span><span>]</span><span>)</span>
<span>13579</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>这个例子本身没多大用处，但是，如果考虑到字符串 <code>str</code> 也是一个序列，对上面的例子稍加改动，配合 <code>map()</code>，我们就可以写出把 <code>str</code> 转换为 <code>int</code> 的函数:</p>
<div><pre><code><span>>></span><span>></span> <span>from</span> functools <span>import</span> <span>reduce</span>
<span>>></span><span>></span> <span>def</span> <span>fn</span><span>(</span>x<span>,</span> y<span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     <span>return</span> x<span>*</span> <span>10</span> <span>+</span> y
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> <span>def</span> <span>char2num</span><span>(</span>s<span>)</span><span>:</span>
<span>.</span><span>.</span><span>.</span>     digits <span>=</span> <span>{</span><span>'0'</span><span>:</span> <span>0</span><span>,</span> <span>'1'</span><span>:</span> <span>1</span><span>,</span> <span>'2'</span><span>:</span> <span>2</span><span>,</span> <span>'3'</span><span>:</span> <span>3</span><span>,</span> <span>'4'</span><span>:</span> <span>4</span><span>,</span> <span>'5'</span><span>:</span> <span>5</span><span>,</span> <span>'6'</span><span>:</span> <span>6</span><span>,</span> <span>'7'</span><span>:</span> <span>7</span><span>,</span> <span>'8'</span><span>:</span> <span>8</span><span>,</span> <span>'9'</span><span>:</span> <span>9</span><span>}</span>
<span>.</span><span>.</span><span>.</span>     <span>return</span> digits<span>[</span>s<span>]</span>
<span>.</span><span>.</span><span>.</span>
<span>>></span><span>></span> <span>reduce</span><span>(</span>fn<span>,</span> <span>map</span><span>(</span>char2num<span>,</span> <span>'13579'</span><span>)</span><span>)</span>
<span>13579</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>整理成一个 <code>str2int</code> 的函数就是:</p>
<div><pre><code><span>from</span> functools <span>import</span> <span>reduce</span>

DIGITS <span>=</span> <span>{</span><span>'0'</span><span>:</span> <span>0</span><span>,</span> <span>'1'</span><span>:</span> <span>1</span><span>,</span> <span>'2'</span><span>:</span> <span>2</span><span>,</span> <span>'3'</span><span>:</span> <span>3</span><span>,</span> <span>'4'</span><span>:</span> <span>4</span><span>,</span> <span>'5'</span><span>:</span> <span>5</span><span>,</span> <span>'6'</span><span>:</span> <span>6</span><span>,</span> <span>'7'</span><span>:</span> <span>7</span><span>,</span> <span>'8'</span><span>:</span> <span>8</span><span>,</span> <span>'9'</span><span>:</span> <span>9</span><span>}</span>

<span>def</span> <span>str2int</span><span>(</span>s<span>)</span><span>:</span>
    <span>def</span> <span>fn</span><span>(</span>x<span>,</span> y<span>)</span><span>:</span>
        <span>return</span> x <span>*</span> <span>10</span> <span>+</span> y
    <span>def</span> <span>char2num</span><span>(</span>s<span>)</span><span>:</span>
        <span>return</span> DIGITS<span>[</span>s<span>]</span>
    <span>return</span> <span>reduce</span><span>(</span>fn<span>,</span> <span>map</span><span>(</span>char2num<span>,</span> s<span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>还可以用 lambda 函数进一步简化成:</p>
<div><pre><code><span>from</span> functools <span>import</span> <span>reduce</span>

DIGITS <span>=</span> <span>{</span><span>'0'</span><span>:</span> <span>0</span><span>,</span> <span>'1'</span><span>:</span> <span>1</span><span>,</span> <span>'2'</span><span>:</span> <span>2</span><span>,</span> <span>'3'</span><span>:</span> <span>3</span><span>,</span> <span>'4'</span><span>:</span> <span>4</span><span>,</span> <span>'5'</span><span>:</span> <span>5</span><span>,</span> <span>'6'</span><span>:</span> <span>6</span><span>,</span> <span>'7'</span><span>:</span> <span>7</span><span>,</span> <span>'8'</span><span>:</span> <span>8</span><span>,</span> <span>'9'</span><span>:</span> <span>9</span><span>}</span>

<span>def</span> <span>char2num</span><span>(</span>s<span>)</span><span>:</span>
    <span>return</span> DIGITS<span>[</span>s<span>]</span>

<span>def</span> <span>str2int</span><span>(</span>s<span>)</span><span>:</span>
    <span>return</span> <span>reduce</span><span>(</span><span>lambda</span> x<span>,</span> y<span>:</span> x <span>*</span> <span>10</span> <span>+</span> y<span>,</span> <span>map</span><span>(</span>char2num<span>,</span> s<span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>也就是说，假设 Python 没有提供 <code>int()</code> 函数，您完全可以自己写一个把字符串转化为整数的函数，而且只需要几行代码!</p>
<p>lambda 函数的用法在后面介绍。</p>
]]></content:encoded>
    </item>
    <item>
      <title>高阶函数</title>
      <link>https://mrhope.site/code/language/python/functional-programming/high-order-function/</link>
      <guid>https://mrhope.site/code/language/python/functional-programming/high-order-function/</guid>
      <source url="https://mrhope.site/rss.xml">高阶函数</source>
      <category>Python</category>
      <pubDate>Sun, 31 May 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="目录" tabindex="-1"> 目录</h2>
<ul>
<li>
<p><a href="/code/language/python/functional-programming/high-order-function/intro.html">高阶函数介绍</a></p>
</li>
<li>
<p><a href="/code/language/python/functional-programming/high-order-function/map-and-reduce.html">map / reduce</a></p>
</li>
<li>
<p><a href="/code/language/python/functional-programming/high-order-function/filter.html">filter</a></p>
</li>
<li>
<p><a href="/code/language/python/functional-programming/high-order-function/sorted.html">sorted</a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>sorted</title>
      <link>https://mrhope.site/code/language/python/functional-programming/high-order-function/sorted.html</link>
      <guid>https://mrhope.site/code/language/python/functional-programming/high-order-function/sorted.html</guid>
      <source url="https://mrhope.site/rss.xml">sorted</source>
      <category>Python</category>
      <pubDate>Sun, 31 May 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="排序算法" tabindex="-1"> 排序算法</h2>
<p>排序也是在程序中经常用到的算法。无论使用冒泡排序还是快速排序，排序的核心是比较两个元素的大小。如果是数字，我们可以直接比较，但如果是字符串或者两个 dict 呢? 直接比较数学上的大小是没有意义的，因此，比较的过程必须通过函数抽象出来。</p>
<p>Python 内置的 <code>sorted()</code> 函数就可以对 list 进行排序:</p>
<div><pre><code><span>>></span><span>></span> <span>sorted</span><span>(</span><span>[</span><span>36</span><span>,</span> <span>5</span><span>,</span> <span>-</span><span>12</span><span>,</span> <span>9</span><span>,</span> <span>-</span><span>21</span><span>]</span><span>)</span>
<span>[</span><span>-</span><span>21</span><span>,</span> <span>-</span><span>12</span><span>,</span> <span>5</span><span>,</span> <span>9</span><span>,</span> <span>36</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>此外，<code>sorted()</code> 函数也是一个高阶函数，它还可以接收一个 <code>key</code> 函数来实现自定义的排序，例如按绝对值大小排序:</p>
<div><pre><code><span>>></span><span>></span> <span>sorted</span><span>(</span><span>[</span><span>36</span><span>,</span> <span>5</span><span>,</span> <span>-</span><span>12</span><span>,</span> <span>9</span><span>,</span> <span>-</span><span>21</span><span>]</span><span>,</span> key<span>=</span><span>abs</span><span>)</span>
<span>[</span><span>5</span><span>,</span> <span>9</span><span>,</span> <span>-</span><span>12</span><span>,</span> <span>-</span><span>21</span><span>,</span> <span>36</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>key 指定的函数将作用于 list 的每一个元素上，并根据 <code>key</code> 函数返回的结果进行排序。对比原始的 list 和经过 <code>key=abs</code> 处理过的 list:</p>
<div><pre><code><span>list</span> <span>=</span> <span>[</span><span>36</span><span>,</span> <span>5</span><span>,</span> <span>-</span><span>12</span><span>,</span> <span>9</span><span>,</span> <span>-</span><span>21</span><span>]</span>

keys <span>=</span> <span>[</span><span>36</span><span>,</span> <span>5</span><span>,</span>  <span>12</span><span>,</span> <span>9</span><span>,</span>  <span>21</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>然后 <code>sorted()</code> 函数按照 keys 进行排序，并按照对应关系返回 list 相应的元素:</p>
<div><pre><code>keys排序结果 => [5, 9,  12,  21, 36]
                |  |    |    |   |
最终结果     => [5, 9, -12, -21, 36]
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>我们再看一个字符串排序的例子:</p>
<div><pre><code><span>>></span><span>></span> <span>sorted</span><span>(</span><span>[</span><span>'bob'</span><span>,</span> <span>'about'</span><span>,</span> <span>'Zoo'</span><span>,</span> <span>'Credit'</span><span>]</span><span>)</span>
<span>[</span><span>'Credit'</span><span>,</span> <span>'Zoo'</span><span>,</span> <span>'about'</span><span>,</span> <span>'bob'</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>默认情况下，对字符串排序，是按照 ASCII 的大小比较的，由于 <code>'Z' &lt; 'a'</code>，结果，大写字母 Z 会排在小写字母 a 的前面。</p>
<p>现在，我们提出排序应该忽略大小写，按照字母序排序。要实现这个算法，不必对现有代码大加改动，只要我们能用一个 key 函数把字符串映射为忽略大小写排序即可。忽略大小写来比较两个字符串，实际上就是先把字符串都变成大写(或者都变成小写)，再比较。</p>
<p>这样，我们给 <code>sorted</code> 传入 key 函数，即可实现忽略大小写的排序:</p>
<div><pre><code><span>>></span><span>></span> <span>sorted</span><span>(</span><span>[</span><span>'bob'</span><span>,</span> <span>'about'</span><span>,</span> <span>'Zoo'</span><span>,</span> <span>'Credit'</span><span>]</span><span>,</span> key<span>=</span><span>str</span><span>.</span>lower<span>)</span>
<span>[</span><span>'about'</span><span>,</span> <span>'bob'</span><span>,</span> <span>'Credit'</span><span>,</span> <span>'Zoo'</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>要进行反向排序，不必改动 key 函数，可以传入第三个参数 <code>reverse=True</code>:</p>
<div><pre><code><span>>></span><span>></span> <span>sorted</span><span>(</span><span>[</span><span>'bob'</span><span>,</span> <span>'about'</span><span>,</span> <span>'Zoo'</span><span>,</span> <span>'Credit'</span><span>]</span><span>,</span> key<span>=</span><span>str</span><span>.</span>lower<span>,</span> reverse<span>=</span><span>True</span><span>)</span>
<span>[</span><span>'Zoo'</span><span>,</span> <span>'Credit'</span><span>,</span> <span>'bob'</span><span>,</span> <span>'about'</span><span>]</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>从上述例子可以看出，高阶函数的抽象能力是非常强大的，而且，核心代码可以保持得非常简洁。</p>
<h2 id="小结" tabindex="-1"> 小结</h2>
<p><code>sorted()</code> 也是一个高阶函数。用 <code>sorted()</code> 排序的关键在于实现一个映射函数。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Dart 教程</title>
      <link>https://mrhope.site/code/language/dart/</link>
      <guid>https://mrhope.site/code/language/dart/</guid>
      <source url="https://mrhope.site/rss.xml">Dart 教程</source>
      <description>提示
正在完善中...

</description>
      <category>Dart</category>
      <pubDate>Sat, 30 May 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>提示</p>
<p>正在完善中...</p>
</div>

<h2 id="dart-快速入门" tabindex="-1"> dart 快速入门</h2>
<ul>
<li><a href="/code/language/dart/samples/samples.html">案例</a></li>
<li><a href="/code/language/dart/samples/cheatsheet.html">概要介绍</a></li>
<li><a href="/code/language/dart/samples/iterable.html">遍历</a></li>
</ul>
<h2 id="官网" tabindex="-1"> 官网</h2>
<ul>
<li><a href="https://dart.dev/" target="_blank" rel="noopener noreferrer">英文官网<ExternalLinkIcon/></a></li>
<li><a href="https://www.dartcn.com/" target="_blank" rel="noopener noreferrer">中文官网<ExternalLinkIcon/></a> (不推荐，已有一年多未更新)</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>dart 快速入门</title>
      <link>https://mrhope.site/code/language/dart/samples/</link>
      <guid>https://mrhope.site/code/language/dart/samples/</guid>
      <source url="https://mrhope.site/rss.xml">dart 快速入门</source>
      <category>Dart</category>
      <pubDate>Sat, 30 May 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="目录" tabindex="-1"> 目录</h2>
<ul>
<li>
<p><a href="/code/language/dart/samples/samples.html">案例</a></p>
</li>
<li>
<p><a href="/code/language/dart/samples/cheatsheet.html">概要介绍</a></p>
</li>
<li>
<p><a href="/code/language/dart/samples/iterable.html">遍历</a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>dart 概要</title>
      <link>https://mrhope.site/code/language/dart/samples/cheatsheet.html</link>
      <guid>https://mrhope.site/code/language/dart/samples/cheatsheet.html</guid>
      <source url="https://mrhope.site/rss.xml">dart 概要</source>
      <description>Dart 语言旨在让其他语言的编码人员易于学习，但具有一些独特功能。
</description>
      <category>Dart</category>
      <pubDate>Sat, 30 May 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>Dart 语言旨在让其他语言的编码人员易于学习，但具有一些独特功能。</p>

<h2 id="字符串插值" tabindex="-1"> 字符串插值</h2>
<p>要将表达式的值放在字符串中，请使用 <code>${expression}</code>。如果表达式是标识符，则可以省略 <code>{}</code>。</p>
<p>以下是一些使用字符串插值的示例:</p>
<table>
<thead>
<tr>
<th>串</th>
<th>结果</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>'\${3 + 2}'</code></td>
<td><code>'5'</code></td>
</tr>
<tr>
<td><code>'\${&quot;word&quot;.toUpperCase()}'</code></td>
<td><code>'WORD'</code></td>
</tr>
<tr>
<td><code>'$myObject'</code></td>
<td><code>myObject.toString()</code> 的值</td>
</tr>
</tbody>
</table>
<h2 id="空感知运算符" tabindex="-1"> 空感知运算符</h2>
<p>Dart 提供了一些方便的运算符来处理可能为 null 的值。一种是 <code>??=</code> 赋值运算符，它仅在该变量当前为 null 时才为该变量赋值:</p>
<div><pre><code>int a<span>;</span> <span>// The initial value of a is null.</span>
a <span>?</span><span>?</span><span>=</span> <span>3</span><span>;</span>
<span>print</span><span>(</span>a<span>)</span><span>;</span> <span>// &lt;-- Prints 3.</span>

a <span>?</span><span>?</span><span>=</span> <span>5</span><span>;</span>
<span>print</span><span>(</span>a<span>)</span><span>;</span> <span>// &lt;-- Still prints 3.</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>另一个可识别空值的运算符是 <code>??</code>，只有左侧表达式的值为 null，它将求值并在其右侧返回表达式，否则它将在返回左侧表达式:</p>
<div><pre><code><span>print</span><span>(</span><span>1</span> <span>?</span><span>?</span> <span>3</span><span>)</span><span>;</span> <span>// &lt;-- Prints 1.</span>
<span>print</span><span>(</span><span>null</span> <span>?</span><span>?</span> <span>12</span><span>)</span><span>;</span> <span>// &lt;-- Prints 12.</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><h2 id="受控的属性访问" tabindex="-1"> 受控的属性访问</h2>
<p>为了保护对可能为空的对象的属性或方法的访问，请在点 <code>.</code> 之前添加问号 <code>?</code>:</p>
<div><pre><code>myObject<span>?</span><span>.</span>someProperty
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>上面的代码等效于以下代码:</p>
<div><pre><code><span>(</span>myObject <span>!=</span> <span>null</span><span>)</span> <span>?</span> myObject<span>.</span>someProperty <span>:</span> <span>null</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>您可以在单个表达式中将多个 <code>?.</code> 链接在一起:</p>
<div><pre><code>myObject<span>?</span><span>.</span>someProperty<span>?</span><span>.</span><span>someMethod</span><span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>如果 <code>myObject</code> 或 <code>myObject.someProperty</code> 为 null，则代码返回 null(并且从不调用 <code>someMethod()</code>) 。</p>
<h2 id="集合" tabindex="-1"> 集合</h2>
<p>Dart 内置了对列表，地图和集合的支持。您可以使用文字创建它们:</p>
<div><pre><code><span>final</span> aListOfStrings <span>=</span> <span>[</span><span><span>'one'</span></span><span>,</span> <span><span>'two'</span></span><span>,</span> <span><span>'three'</span></span><span>]</span><span>;</span>
<span>final</span> aSetOfStrings <span>=</span> <span>{</span><span><span>'one'</span></span><span>,</span> <span><span>'two'</span></span><span>,</span> <span><span>'three'</span></span><span>}</span><span>;</span>
<span>final</span> aMapOfStringsToInts <span>=</span> <span>{</span>
  <span><span>'one'</span></span><span>:</span> <span>1</span><span>,</span>
  <span><span>'two'</span></span><span>:</span> <span>2</span><span>,</span>
  <span><span>'three'</span></span><span>:</span> <span>3</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>Dart 的类型推断可以为您为这些变量分配类型。在这种情况下，推断的类型 <code>List&lt;String&gt;</code>， <code>Set&lt;String&gt;</code> 和 <code>Map&lt;String, int&gt;</code>。</p>
<p>或者您可以自己指定类型:</p>
<div><pre><code><span>final</span> aListOfInts <span>=</span> <span><span>&lt;</span>int<span>></span></span><span>[</span><span>]</span><span>;</span>
<span>final</span> aSetOfInts <span>=</span> <span><span>&lt;</span>int<span>></span></span><span>{</span><span>}</span><span>;</span>
<span>final</span> aMapOfIntToDouble <span>=</span> <span><span>&lt;</span>int<span>,</span> double<span>></span></span><span>{</span><span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>当您想使用子类型的内容初始化列表但仍然希望列表为 <code>List&lt;BaseType&gt;</code> 时，指定类型很方便:</p>
<div><pre><code><span>final</span> aListOfBaseType <span>=</span> <span><span>&lt;</span><span>BaseType</span><span>></span></span><span>[</span><span>SubType</span><span>(</span><span>)</span><span>,</span> <span>SubType</span><span>(</span><span>)</span><span>]</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><h2 id="箭头语法" tabindex="-1"> 箭头语法</h2>
<p>您可能已经在 Dart 代码中看到了该符号 <code>=&gt;</code>。此箭头语法是一种定义函数的方法，该函数将在其右侧执行表达式并返回其值。</p>
<p>例如，考虑这个对 <code>List</code> 类的 <code>any()</code> 方法的调用:</p>
<div><pre><code>bool hasEmpty <span>=</span> aListOfStrings<span>.</span><span>any</span><span>(</span><span>(</span>s<span>)</span> <span>{</span>
  <span>return</span> s<span>.</span>isEmpty<span>;</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>这是编写该代码的一种更简单的方法:</p>
<div><pre><code>bool hasEmpty <span>=</span> aListOfStrings<span>.</span><span>any</span><span>(</span><span>(</span>s<span>)</span> <span>=</span><span>></span> s<span>.</span>isEmpty<span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><h2 id="级联" tabindex="-1"> 级联</h2>
<p>要对同一对象执行一系列操作，请使用级联(<code>..</code>)。我们都看到过这样的表达式:</p>
<div><pre><code>myObject<span>.</span><span>someMethod</span><span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>它调用 <code>myObject</code> 上的 <code>someMethod()</code> ，和表达的结果是的返回值 <code>someMethod()</code>。</p>
<p>这是带有级联的相同表达式:</p>
<div><pre><code>myObject<span>.</span><span>.</span><span>someMethod</span><span>(</span><span>)</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>尽管它仍然调用 <code>myObject</code> 上的 <code>someMethod()</code> ，但表达式的结果不是返回值，而是对 <code>myObject</code> 的引用。使用级联，可以将原本需要单独语句的操作链接在一起。例如，考虑以下代码:</p>
<div><pre><code><span>var</span> button <span>=</span> <span>querySelector</span><span>(</span><span><span>'#confirm'</span></span><span>)</span><span>;</span>
button<span>.</span>text <span>=</span> <span><span>'Confirm'</span></span><span>;</span>
button<span>.</span>classes<span>.</span><span>add</span><span>(</span><span><span>'important'</span></span><span>)</span><span>;</span>
button<span>.</span>onClick<span>.</span><span>listen</span><span>(</span><span>(</span>e<span>)</span> <span>=</span><span>></span> window<span>.</span><span>alert</span><span>(</span><span><span>'Confirmed!'</span></span><span>)</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>使用层叠时，代码变得更短，并且您不需要 <code>button</code> 变量:</p>
<div><pre><code><span>querySelector</span><span>(</span><span><span>'#confirm'</span></span><span>)</span>
<span>.</span><span>.</span>text <span>=</span> <span><span>'Confirm'</span></span>
<span>.</span><span>.</span>classes<span>.</span><span>add</span><span>(</span><span><span>'important'</span></span><span>)</span>
<span>.</span><span>.</span>onClick<span>.</span><span>listen</span><span>(</span><span>(</span>e<span>)</span> <span>=</span><span>></span> window<span>.</span><span>alert</span><span>(</span><span><span>'Confirmed!'</span></span><span>)</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h2 id="getter-和-setter" tabindex="-1"> Getter 和 Setter</h2>
<p>只要您对一个字段进行特殊的控制要求，就可以定义 getter 和 setter。</p>
<p>例如，您可以确保属性的值有效:</p>
<div><pre><code><span>class</span> <span>MyClass</span> <span>{</span>
  int _aProperty <span>=</span> <span>0</span><span>;</span>

  int <span>get</span> aProperty <span>=</span><span>></span> _aProperty<span>;</span>

  <span>set</span> <span>aProperty</span><span>(</span>int value<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>value <span>>=</span> <span>0</span><span>)</span> <span>{</span>
      _aProperty <span>=</span> value<span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>您还可以使用 getter 来定义计算属性:</p>
<div><pre><code><span>class</span> <span>MyClass</span> <span>{</span>
  <span>List</span><span><span>&lt;</span>int<span>></span></span> _values <span>=</span> <span>[</span><span>]</span><span>;</span>

  <span>void</span> <span>addValue</span><span>(</span>int value<span>)</span> <span>{</span>
    _values<span>.</span><span>add</span><span>(</span>value<span>)</span><span>;</span>
  <span>}</span>

  <span>// A computed property.</span>
  int <span>get</span> count <span>{</span>
    <span>return</span> _values<span>.</span>length<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><h2 id="可选的位置参数" tabindex="-1"> 可选的位置参数</h2>
<p>Dart 具有两种函数参数: 基于位置的和具名的。位置参数是您可能熟悉的一种:</p>
<div><pre><code>int <span>sumUp</span><span>(</span>int a<span>,</span> int b<span>,</span> int c<span>)</span> <span>{</span>
  <span>return</span> a <span>+</span> b <span>+</span> c<span>;</span>
<span>}</span>
<span>// ···</span>
  int total <span>=</span> <span>sumUp</span><span>(</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>使用 Dart，您可以将这些位置参数包装在方括号中，以使其成为可选参数:</p>
<div><pre><code>int <span>sumUpToFive</span><span>(</span>int a<span>,</span> <span>[</span>int b<span>,</span> int c<span>,</span> int d<span>,</span> int e<span>]</span><span>)</span> <span>{</span>
  int sum <span>=</span> a<span>;</span>
  <span>if</span> <span>(</span>b <span>!=</span> <span>null</span><span>)</span> sum <span>+=</span> b<span>;</span>
  <span>if</span> <span>(</span>c <span>!=</span> <span>null</span><span>)</span> sum <span>+=</span> c<span>;</span>
  <span>if</span> <span>(</span>d <span>!=</span> <span>null</span><span>)</span> sum <span>+=</span> d<span>;</span>
  <span>if</span> <span>(</span>e <span>!=</span> <span>null</span><span>)</span> sum <span>+=</span> e<span>;</span>
  <span>return</span> sum<span>;</span>
<span>}</span>
<span>// ···</span>
  int total <span>=</span> <span>sumUpToFive</span><span>(</span><span>1</span><span>,</span> <span>2</span><span>)</span><span>;</span>
  int otherTotal <span>=</span> <span>sumUpToFive</span><span>(</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>,</span> <span>5</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>可选的位置参数始终位于函数的参数列表的最后。除非您提供另一个默认值，否则它们的默认值为 null:</p>
<div><pre><code>int <span>sumUpToFive</span><span>(</span>int a<span>,</span> <span>[</span>int b <span>=</span> <span>2</span><span>,</span> int c <span>=</span> <span>3</span><span>,</span> int d <span>=</span> <span>4</span><span>,</span> int e <span>=</span> <span>5</span><span>]</span><span>)</span> <span>{</span>
<span>// ···</span>
<span>}</span>
<span>// ···</span>
  int newTotal <span>=</span> <span>sumUpToFive</span><span>(</span><span>1</span><span>)</span><span>;</span>
  <span>print</span><span>(</span>newTotal<span>)</span><span>;</span> <span>// &lt;-- prints 15</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="可选的命名参数" tabindex="-1"> 可选的命名参数</h2>
<p>使用大括号语法，可以定义具有名称的可选参数。</p>
<div><pre><code><span>void</span> <span>printName</span><span>(</span><span>String</span> firstName<span>,</span> <span>String</span> lastName<span>,</span> <span>{</span><span>String</span> suffix<span>}</span><span>)</span> <span>{</span>
  <span>print</span><span>(</span>'$firstName $lastName $<span>{</span>suffix <span>?</span><span>?</span> <span><span>''</span></span><span>}</span>'<span>)</span><span>;</span>
<span>}</span>
<span>// ···</span>
  <span>printName</span><span>(</span><span><span>'Avinash'</span></span><span>,</span> <span><span>'Gupta'</span></span><span>)</span><span>;</span>
  <span>printName</span><span>(</span><span><span>'Poshmeister'</span></span><span>,</span> <span><span>'Moneybuckets'</span></span><span>,</span> suffix<span>:</span> <span><span>'IV'</span></span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>如您所料，默认情况下，这些参数的值为 null，但是您可以提供默认值:</p>
<div><pre><code><span>void</span> <span>printName</span><span>(</span><span>String</span> firstName<span>,</span> <span>String</span> lastName<span>,</span> <span>{</span><span>String</span> suffix <span>=</span> <span><span>''</span></span><span>}</span><span>)</span> <span>{</span>
  <span>print</span><span>(</span><span><span>'</span><span><span>$</span><span>firstName</span></span><span> </span><span><span>$</span><span>lastName</span></span><span> </span><span><span>$</span><span>suffix</span></span><span>'</span></span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>函数不能同时具有可选的位置参数和可选的命名参数。</p>
<h2 id="异常" tabindex="-1"> 异常</h2>
<p>Dart 代码可以引发并捕获异常。与 Java 相反，Dart 的所有异常都是未经检查的异常。方法需要制订它们可能引发哪些异常，您也不被强制捕获任何异常。</p>
<p>Dart 提供 <code>Exception</code> 和 <code>Error</code> 类型，但是您可以抛出任何非 null 对象:</p>
<div><pre><code><span>throw</span> <span>Exception</span><span>(</span><span><span>'Something bad happened.'</span></span><span>)</span><span>;</span>
<span>throw</span> <span><span>'Waaaaaaah!'</span></span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>使用 <code>try</code>，<code>on</code> 以及 <code>catch</code> 处理异常时的关键字:</p>
<div><pre><code><span>try</span> <span>{</span>
  <span>breedMoreLlamas</span><span>(</span><span>)</span><span>;</span>
<span>}</span> <span>on</span> <span>OutOfLlamasException</span> <span>{</span>
  <span>// A specific exception</span>
  <span>buyMoreLlamas</span><span>(</span><span>)</span><span>;</span>
<span>}</span> <span>on</span> <span>Exception</span> <span>catch</span> <span>(</span>e<span>)</span> <span>{</span>
  <span>// Anything else that is an exception</span>
  <span>print</span><span>(</span><span><span>'Unknown exception: </span><span><span>$</span><span>e</span></span><span>'</span></span><span>)</span><span>;</span>
<span>}</span> <span>catch</span> <span>(</span>e<span>)</span> <span>{</span>
  <span>// No specified type, handles all</span>
  <span>print</span><span>(</span><span><span>'Something really unknown: </span><span><span>$</span><span>e</span></span><span>'</span></span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><p><code>try</code> 的作用和大多数其他语言一样。使用 <code>on</code> 关键字按类型过滤特定的异常，并使用 <code>catch</code> 关键字获取对异常对象的引用。</p>
<p>如果您不能完全处理该异常，请使用 <code>rethrow</code> 关键字传播该异常:</p>
<div><pre><code><span>try</span> <span>{</span>
  <span>breedMoreLlamas</span><span>(</span><span>)</span><span>;</span>
<span>}</span> <span>catch</span> <span>(</span>e<span>)</span> <span>{</span>
  <span>print</span><span>(</span><span><span>'I was just trying to breed llamas!.'</span></span><span>)</span><span>;</span>
  <span>rethrow</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>要执行代码(无论是否引发异常)，请使用 <code>finally</code>:</p>
<div><pre><code><span>try</span> <span>{</span>
  <span>breedMoreLlamas</span><span>(</span><span>)</span><span>;</span>
<span>}</span> <span>catch</span> <span>(</span>e<span>)</span> <span>{</span>
  <span>// ... handle exception ...</span>
<span>}</span> <span>finally</span> <span>{</span>
  <span>// Always clean up, even if an exception is thrown.</span>
  <span>cleanLlamaStalls</span><span>(</span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h2 id="在构造函数种使用-this" tabindex="-1"> 在构造函数种使用 <code>this</code></h2>
<p>Dart 提供了一个方便的快捷方式，用于将值分配给构造函数中的属性: <code>this.propertyName</code> 在声明构造函数时使用:</p>
<div><pre><code><span>class</span> <span>MyColor</span> <span>{</span>
  int red<span>;</span>
  int green<span>;</span>
  int blue<span>;</span>

  <span>MyColor</span><span>(</span><span>this</span><span>.</span>red<span>,</span> <span>this</span><span>.</span>green<span>,</span> <span>this</span><span>.</span>blue<span>)</span><span>;</span>
<span>}</span>

<span>final</span> color <span>=</span> <span>MyColor</span><span>(</span><span>80</span><span>,</span> <span>80</span><span>,</span> <span>128</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>该技术也适用于命名参数。属性名称成为参数的名称:</p>
<div><pre><code><span>class</span> <span>MyColor</span> <span>{</span>
  <span>.</span><span>.</span><span>.</span>

  <span>MyColor</span><span>(</span><span>{</span><span>this</span><span>.</span>red<span>,</span> <span>this</span><span>.</span>green<span>,</span> <span>this</span><span>.</span>blue<span>}</span><span>)</span><span>;</span>
<span>}</span>

<span>final</span> color <span>=</span> <span>MyColor</span><span>(</span>red<span>:</span> <span>80</span><span>,</span> green<span>:</span> <span>80</span><span>,</span> blue<span>:</span> <span>80</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>对于可选参数，默认值可以按预期运行:</p>
<div><pre><code><span>MyColor</span><span>(</span><span>[</span><span>this</span><span>.</span>red <span>=</span> <span>0</span><span>,</span> <span>this</span><span>.</span>green <span>=</span> <span>0</span><span>,</span> <span>this</span><span>.</span>blue <span>=</span> <span>0</span><span>]</span><span>)</span><span>;</span>
<span>// or</span>
<span>MyColor</span><span>(</span><span>{</span><span>this</span><span>.</span>red <span>=</span> <span>0</span><span>,</span> <span>this</span><span>.</span>green <span>=</span> <span>0</span><span>,</span> <span>this</span><span>.</span>blue <span>=</span> <span>0</span><span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h2 id="初始化列表" tabindex="-1"> 初始化列表</h2>
<p>有时在实现构造函数时，需要在构造函数主体执行之前进行一些设置。例如，在构造函数主体执行之前，final 字段必须具有值。您可以在构造函数的签名及其主体之间的初始化器列表中执行此操作:</p>
<div><pre><code><span>Point</span><span>.</span><span>fromJson</span><span>(</span><span>Map</span><span><span>&lt;</span><span>String</span><span>,</span> num<span>></span></span> json<span>)</span>
    <span>:</span> x <span>=</span> json<span>[</span><span><span>'x'</span></span><span>]</span><span>,</span>
      y <span>=</span> json<span>[</span><span><span>'y'</span></span><span>]</span> <span>{</span>
  <span>print</span><span>(</span><span><span>'In Point.fromJson(): (</span><span><span>$</span><span>x</span></span><span>, </span><span><span>$</span><span>y</span></span><span>)'</span></span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>初始化器列表也是放置断言的方便位置，断言仅在开发期间运行:</p>
<div><pre><code><span>NonNegativePoint</span><span>(</span><span>this</span><span>.</span>x<span>,</span> <span>this</span><span>.</span>y<span>)</span>
    <span>:</span> <span>assert</span><span>(</span>x <span>>=</span> <span>0</span><span>)</span><span>,</span>
      <span>assert</span><span>(</span>y <span>>=</span> <span>0</span><span>)</span> <span>{</span>
  <span>print</span><span>(</span><span><span>'I just made a NonNegativePoint: (</span><span><span>$</span><span>x</span></span><span>, </span><span><span>$</span><span>y</span></span><span>)'</span></span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="命名构造函数" tabindex="-1"> 命名构造函数</h2>
<p>为了允许类具有多个构造函数，Dart 支持命名构造函数:</p>
<div><pre><code><span>class</span> <span>Point</span> <span>{</span>
  double x<span>,</span> y<span>;</span>

  <span>Point</span><span>(</span><span>this</span><span>.</span>x<span>,</span> <span>this</span><span>.</span>y<span>)</span><span>;</span>

  <span>Point</span><span>.</span><span>origin</span><span>(</span><span>)</span> <span>{</span>
    x <span>=</span> <span>0</span><span>;</span>
    y <span>=</span> <span>0</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>要使用命名构造函数，请使用其全名调用它:</p>
<div><pre><code><span>final</span> myPoint <span>=</span> <span>Point</span><span>.</span><span>origin</span><span>(</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><h2 id="工厂构造函数" tabindex="-1"> 工厂构造函数</h2>
<p>Dart 支持工厂构造函数，该构造函数可以返回子类型，甚至可以返回 null。要创建工厂构造函数，请使用 <code>factory</code> 关键字:</p>
<div><pre><code><span>class</span> <span>Square</span> <span>extends</span> <span>Shape</span> <span>{</span><span>}</span>

<span>class</span> <span>Circle</span> <span>extends</span> <span>Shape</span> <span>{</span><span>}</span>

<span>class</span> <span>Shape</span> <span>{</span>
  <span>Shape</span><span>(</span><span>)</span><span>;</span>

  <span>factory</span> <span>Shape</span><span>.</span><span>fromTypeName</span><span>(</span><span>String</span> typeName<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>typeName <span>==</span> <span><span>'square'</span></span><span>)</span> <span>return</span> <span>Square</span><span>(</span><span>)</span><span>;</span>
    <span>if</span> <span>(</span>typeName <span>==</span> <span><span>'circle'</span></span><span>)</span> <span>return</span> <span>Circle</span><span>(</span><span>)</span><span>;</span>

    <span>print</span><span>(</span><span><span>'I don\'t recognize </span><span><span>$</span><span>typeName</span></span><span>'</span></span><span>)</span><span>;</span>
    <span>return</span> <span>null</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><h2 id="重定向构造函数" tabindex="-1"> 重定向构造函数</h2>
<p>有时，构造函数的唯一目的是重定向到同一类中的另一个构造函数。重定向构造函数的主体为空，构造函数调用出现在冒号(<code>:</code>)之后。</p>
<div><pre><code><span>class</span> <span>Automobile</span> <span>{</span>
  <span>String</span> make<span>;</span>
  <span>String</span> model<span>;</span>
  int mpg<span>;</span>

  <span>// The main constructor for this class.</span>
  <span>Automobile</span><span>(</span><span>this</span><span>.</span>make<span>,</span> <span>this</span><span>.</span>model<span>,</span> <span>this</span><span>.</span>mpg<span>)</span><span>;</span>

  <span>// Delegates to the main constructor.</span>
  <span>Automobile</span><span>.</span><span>hybrid</span><span>(</span><span>String</span> make<span>,</span> <span>String</span> model<span>)</span> <span>:</span> <span>this</span><span>(</span>make<span>,</span> model<span>,</span> <span>60</span><span>)</span><span>;</span>

  <span>// Delegates to a named constructor</span>
  <span>Automobile</span><span>.</span><span>fancyHybrid</span><span>(</span><span>)</span> <span>:</span> <span>this</span><span>.</span><span>hybrid</span><span>(</span><span><span>'Futurecar'</span></span><span>,</span> <span><span>'Mark 2'</span></span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br></div></div><h2 id="const-构造函数" tabindex="-1"> const 构造函数</h2>
<p>如果您的类产生了永不改变的对象，则可以使这些对象具有编译时常量。为此，请定义一个 <code>const</code> 构造函数，并确保所有实例变量都是最终变量。</p>
<div><pre><code><span>class</span> <span>ImmutablePoint</span> <span>{</span>
  <span>const</span> <span>ImmutablePoint</span><span>(</span><span>this</span><span>.</span>x<span>,</span> <span>this</span><span>.</span>y<span>)</span><span>;</span>

  <span>final</span> int x<span>;</span>
  <span>final</span> int y<span>;</span>

  <span>static</span> <span>const</span> <span>ImmutablePoint</span> origin <span>=</span> <span>ImmutablePoint</span><span>(</span><span>0</span><span>,</span> <span>0</span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>可迭代的集合</title>
      <link>https://mrhope.site/code/language/dart/samples/iterable.html</link>
      <guid>https://mrhope.site/code/language/dart/samples/iterable.html</guid>
      <source url="https://mrhope.site/rss.xml">可迭代的集合</source>
      <description>本节教您如何使用实现 Iterable 类的集合 - 例如 List 和 Set。可迭代对象是各种 Dart 应用程序的基本构建块，即使您没有注意到，您可能已经在使用它们。
本节包含以下内容:

如何读取 Iterable 的元素。
如何检查 Iterable 的元素是否满足条件。
如何过滤 Iterable 的内容。
如何将 Iterable 的内容映射到其他值。

</description>
      <category>Dart</category>
      <pubDate>Sat, 30 May 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>本节教您如何使用实现 <a href="https://api.dart.dev/stable/dart-core/Iterable-class.html" target="_blank" rel="noopener noreferrer">Iterable<ExternalLinkIcon/></a> 类的集合 - 例如 <a href="https://api.dart.dev/stable/dart-core/List-class.html" target="_blank" rel="noopener noreferrer">List<ExternalLinkIcon/></a> 和 <a href="https://api.dart.dev/stable/dart-core/Set-class.html" target="_blank" rel="noopener noreferrer">Set<ExternalLinkIcon/></a>。可迭代对象是各种 Dart 应用程序的基本构建块，即使您没有注意到，您可能已经在使用它们。</p>
<p>本节包含以下内容:</p>
<ul>
<li>如何读取 Iterable 的元素。</li>
<li>如何检查 Iterable 的元素是否满足条件。</li>
<li>如何过滤 Iterable 的内容。</li>
<li>如何将 Iterable 的内容映射到其他值。</li>
</ul>

<h2 id="什么是集合" tabindex="-1"> 什么是集合</h2>
<p>集合是代表一组对象(称为元素)的对象。可迭代对象是一种集合。</p>
<p>集合可以为空，也可以包含许多元素。根据目的，集合可以具有不同的结构和实现。这些是一些最常见的集合类型:</p>
<ul>
<li><a href="https://api.dart.dev/stable/dart-core/List-class.html" target="_blank" rel="noopener noreferrer">List<ExternalLinkIcon/></a>: 用于按元素索引读取元素。</li>
<li><a href="https://api.dart.dev/stable/dart-core/Set-class.html" target="_blank" rel="noopener noreferrer">Set<ExternalLinkIcon/></a>: 用于包含只能出现一次的元素。</li>
<li><a href="https://api.dart.dev/stable/dart-core/Map-class.html" target="_blank" rel="noopener noreferrer">Map<ExternalLinkIcon/></a>: 用于使用键读取元素。</li>
</ul>
<h2 id="什么是可迭代的" tabindex="-1"> 什么是可迭代的</h2>
<p>一个 <code>Iterable</code> 是可以顺序访问的元素的集合。</p>
<p>在 Dart 中，一个 <code>Iterable</code> 是一个抽象类，这意味着您不能直接实例化它。但是，您可以 <code>Iterable</code> 通过创建新的 <code>List</code> 或来创建新的 <code>Set</code>。</p>
<p><code>List</code> 和 <code>Set</code> 都是 <code>Iterable</code>，所以它们具有和 <code>Iterable</code> 类相同的方法和属性。</p>
<p>一个 <code>Map</code> 在其内部使用不同的数据结构，这取决于它的实现。例如，<a href="https://api.dart.dev/stable/dart-collection/HashMap-class.html" target="_blank" rel="noopener noreferrer">HashMap<ExternalLinkIcon/></a> 使用一个哈希表，其中的元素(也称为 values)是使用键获得的。<code>Map</code> 也可以使用 <code>Iterable</code> 上的 <code>entries</code> 或 <code>values</code> 属性读取他的元素。</p>
<p>此示例显示 <code>List</code> 的 <code>int</code>，也为 <code>Iterable</code> 的 <code>int</code>:</p>
<div><pre><code><span>Iterable</span><span><span>&lt;</span>int<span>></span></span> iterable <span>=</span> <span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>]</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>一个 List 的不同之处 在于，使用 <code>Iterable</code>，您不能保证按索引读取元素将是有效的。<code>Iterable</code> 相对 <code>List</code>，没有 <code>[]</code> 运算符。</p>
<p>例如，考虑以下代码，该代码无效:</p>
<div><pre><code><span>Iterable</span><span><span>&lt;</span>int<span>></span></span> iterable <span>=</span> <span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>]</span><span>;</span>
int value <span>=</span> iterable<span>[</span><span>1</span><span>]</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><p>如果您使用 <code>[]</code> 读取元素，则编译器会告诉您 <code>Iterable</code> 类上未定义运算符 '<code>[]</code>'，这意味着您不能在这种情况下使用 <code>[index]</code>。</p>
<p>您可以改为使用读取元素 <code>elementAt()</code>，该元素将逐步浏览可迭代的元素，直到到达该位置为止。</p>
<div><pre><code><span>Iterable</span><span><span>&lt;</span>int<span>></span></span> iterable <span>=</span> <span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>]</span><span>;</span>
int value <span>=</span> iterable<span>.</span><span>elementAt</span><span>(</span><span>1</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br></div></div><h2 id="读取元素" tabindex="-1"> 读取元素</h2>
<p>您可以使用 <code>for-in</code> 循环依次读取可迭代的元素。</p>
<div><pre><code><span>void</span> <span>main</span><span>(</span><span>)</span> <span>{</span>
  <span>var</span> iterable <span>=</span> <span>[</span><span><span>'Salad'</span></span><span>,</span> <span><span>'Popcorn'</span></span><span>,</span> <span><span>'Toast'</span></span><span>]</span><span>;</span>
  <span>for</span> <span>(</span><span>var</span> element <span>in</span> iterable<span>)</span> <span>{</span>
    <span>print</span><span>(</span>element<span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><p>提示</p>
<p>在后台，<code>for-in</code> 循环使用迭代器。但是，您很少看到直接使用 <code>Iterator</code> API 的情况，因为 <code>for-in</code> 它更易于阅读和理解，并且不易出错。</p>
</div>
<div><p>关键词</p>
<ul>
<li>Iterable: Dart Iterable 类。</li>
<li>Iterator: 用于使用 for-in 从 Iterable 对象读取元素的对象。</li>
<li><code>for-in</code> 循环: 一种简单的按顺序读取 <code>Iterable</code> 元素的方法。</li>
</ul>
</div>
<h3 id="使用-fist-和-last" tabindex="-1"> 使用 <code>fist</code> 和 <code>last</code></h3>
<p>在某些情况下，您只想访问 <code>Iterable</code> 的第一个或最后一个元素。</p>
<p>使用 <code>Iterable</code> 类，您无法直接访问元素，因此无法调用 <code>iterable[0]</code> 来访问第一个元素。相反，您可以使用 <code>first</code> 获取第一个元素的。</p>
<p>同样，对于 Iterable 类，您不能使用运算符 <code>[]</code> 来访问最后一个元素，但是可以使用该 <code>last</code> 属性。</p>
<div><pre><code><span>void</span> <span>main</span><span>(</span><span>)</span> <span>{</span>
  <span>var</span> iterable <span>=</span> <span>[</span><span><span>'Salad'</span></span><span>,</span> <span><span>'Popcorn'</span></span><span>,</span> <span><span>'Toast'</span></span><span>]</span><span>;</span>
  <span>print</span><span>(</span><span><span>'The first element is </span><span><span>${</span><span>iterable<span>.</span>first</span><span>}</span></span><span>'</span></span><span>)</span><span>;</span>
  <span>print</span><span>(</span><span><span>'The last element is </span><span><span>${</span><span>iterable<span>.</span>last</span><span>}</span></span><span>'</span></span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><div><p>注意</p>
<p>因为访问 <code>Iterable</code> 的最后一个元素需要逐步浏览所有其他元素， 所以 <code>last</code> 可能很慢。使用 <code>first</code> 或 <code>last</code> 在一个空 <code>Iterable</code> 会产生 <code>StateError</code>。</p>
</div>
<h3 id="使用-firstwhere" tabindex="-1"> 使用 <code>firstWhere()</code></h3>
<p>您已经看到您可以按顺序访问 <code>Iterable</code> 元素，并且可以轻松获取第一个或最后一个元素。</p>
<p>现在，您将学习如何使用 <code>firstWhere()</code> 来找到满足某些条件的第一个元素。此方法要求您传递一个谓词(predicate)，该谓词是一个在输入满足特定条件时返回 true 的函数。</p>
<div><pre><code><span>String</span> element <span>=</span> iterable<span>.</span><span>firstWhere</span><span>(</span><span>(</span>element<span>)</span> <span>=</span><span>></span> element<span>.</span>length <span>></span> <span>5</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>例如，如果要查找第一个字符数超过 5 个的 String，则必须传递一个在元素大小大于 5 时返回 true 的谓词。</p>
<div><pre><code>bool <span>predicate</span><span>(</span><span>String</span> element<span>)</span> <span>{</span>
  <span>return</span> element<span>.</span>length <span>></span> <span>5</span><span>;</span>
<span>}</span>

<span>main</span><span>(</span><span>)</span> <span>{</span>
  <span>var</span> items <span>=</span> <span>[</span><span><span>'Salad'</span></span><span>,</span> <span><span>'Popcorn'</span></span><span>,</span> <span><span>'Toast'</span></span><span>,</span> <span><span>'Lasagne'</span></span><span>]</span><span>;</span>

  <span>// You can find with a simple expression:</span>
  <span>var</span> element1 <span>=</span> items<span>.</span><span>firstWhere</span><span>(</span><span>(</span>element<span>)</span> <span>=</span><span>></span> element<span>.</span>length <span>></span> <span>5</span><span>)</span><span>;</span>
  <span>print</span><span>(</span>element1<span>)</span><span>;</span>

  <span>// Or try using a function block:</span>
  <span>var</span> element2 <span>=</span> items<span>.</span><span>firstWhere</span><span>(</span><span>(</span>element<span>)</span> <span>{</span>
    <span>return</span> element<span>.</span>length <span>></span> <span>5</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
  <span>print</span><span>(</span>element2<span>)</span><span>;</span>

  <span>// Or even pass in a function reference:</span>
  <span>var</span> element3 <span>=</span> items<span>.</span><span>firstWhere</span><span>(</span>predicate<span>)</span><span>;</span>
  <span>print</span><span>(</span>element3<span>)</span><span>;</span>

  <span>// You can also use an `orElse` function in case no value is found!</span>
  <span>var</span> element4 <span>=</span> items<span>.</span><span>firstWhere</span><span>(</span>
    <span>(</span>element<span>)</span> <span>=</span><span>></span> element<span>.</span>length <span>></span> <span>10</span><span>,</span>
    orElse<span>:</span> <span>(</span><span>)</span> <span>=</span><span>></span> <span><span>'None!'</span></span><span>,</span>
  <span>)</span><span>;</span>
  <span>print</span><span>(</span>element4<span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div><p>在此示例中，您可以看到三种不同的方式来编写谓词:</p>
<ul>
<li>作为表达式: 测试代码的一行使用箭头语法(<code>=&gt;</code>)。</li>
<li>作为一个块: 测试代码在方括号和 <code>return</code> 语句之间有多行。</li>
<li>作为函数: 测试代码位于 <code>firstWhere()</code> 作为参数传递给方法的外部函数中。</li>
</ul>
<p>没有正确或错误的方法。使用最适合您的方式，使您的代码更易于阅读和理解。</p>
<p>在示例中，<code>firstWhereWithOrElse()</code> 使用可选的 named 参数 <code>orElse</code> 调用了 <code>firstWhere()</code>。当找不到元素时，该参数提供了替代方法。在这种情况下，由于没有元素满足提供的条件，因此返回了文本 <code>'None!'</code>。</p>
<div><p>注意</p>
<p>如果没有元素满足测试谓词，并且 <code>orElse</code> 未提供参数，则 <code>firstWhere()</code> 抛出 <code>StateError</code>。</p>
</div>
<div><p>快速回顾</p>
<ul>
<li>Iterable 中的元素必须被依次访问。</li>
<li>遍历所有元素的最简单方法是使用 <code>for-in</code> 循环。</li>
<li>您可以使用 <code>first</code> 和 <code>last</code> getter 获取第一个和最后一个元素。</li>
<li>您还可以通过找到第一个满足条件的元素 <code>firstWhere()</code>。</li>
<li>您可以将测试谓词编写为表达式，块或函数。</li>
</ul>
<p>关键词:</p>
<ul>
<li>谓词(Predicate): 满足特定条件时返回 true 的函数。</li>
</ul>
</div>
<h3 id="singlewhere" tabindex="-1"> singleWhere</h3>
<p><code>singleWhere()</code> 工作方式与 <code>firstWhere()</code> 相似，但是在这种情况下，它只期望 Iterable 的一个元素满足谓词。如果 Iterable 满足谓词条件的元素超过一个或全部不满足，则该方法将引发 <code>StateError</code> 异常。</p>
<div><p>注意</p>
<p><code>singleWhere()</code> 依次执行直到 Iterable 的最后一个元素，如果 Iterable 数量为无限或包含大量元素，可能会导致问题。</p>
</div>
<h2 id="条件检查" tabindex="-1"> 条件检查</h2>
<p>使用 Iterable 时，有时您需要验证集合的所有元素都满足某些条件。</p>
<p>您可能很想使用这样的 <code>for-in</code> 循环来编写解决方案:</p>
<div><pre><code><span>for</span> <span>(</span><span>var</span> item <span>in</span> items<span>)</span> <span>{</span>
  <span>if</span> <span>(</span>item<span>.</span>length <span>&lt;</span> <span>5</span><span>)</span> <span>{</span>
    <span>return</span> <span>false</span><span>;</span>
  <span>}</span>
<span>}</span>
<span>return</span> <span>true</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>但是，您可以使用 <code>every()</code> 方法完成相同操作:</p>
<div><pre><code><span>return</span> items<span>.</span><span>every</span><span>(</span><span>(</span>element<span>)</span> <span>=</span><span>></span> element<span>.</span>length <span>>=</span> <span>5</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>使用 <code>every()</code> 方法可以使代码更易读，更紧凑且更不易出错。</p>
<h3 id="使用-any-和-every" tabindex="-1"> 使用 any() 和 every()</h3>
<p>Iterable 类提供了两个方法，您可以用它来验证条件:</p>
<ul>
<li>any(): 如果至少一个元素满足条件，则返回 true。</li>
<li>every(): 如果所有元素都满足条件，则返回 true。</li>
</ul>
<div><pre><code><span>void</span> <span>main</span><span>(</span><span>)</span> <span>{</span>
  <span>var</span> items <span>=</span> <span>[</span><span><span>'Salad'</span></span><span>,</span> <span><span>'Popcorn'</span></span><span>,</span> <span><span>'Toast'</span></span><span>]</span><span>;</span>

  <span>if</span> <span>(</span>items<span>.</span><span>any</span><span>(</span><span>(</span>element<span>)</span> <span>=</span><span>></span> element<span>.</span><span>contains</span><span>(</span><span><span>'a'</span></span><span>)</span><span>)</span><span>)</span> <span>{</span>
    <span>print</span><span>(</span><span><span>'At least one element contains "a"'</span></span><span>)</span><span>;</span>
  <span>}</span>

  <span>if</span> <span>(</span>items<span>.</span><span>every</span><span>(</span><span>(</span>element<span>)</span> <span>=</span><span>></span> element<span>.</span>length <span>>=</span> <span>5</span><span>)</span><span>)</span> <span>{</span>
    <span>print</span><span>(</span><span><span>'All elements have length >= 5'</span></span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>在示例中，<code>any()</code> 验证至少一个元素包含字符 <code>a</code>，<code>every()</code> 验证所有元素的长度等于或大于 5。</p>
<p>运行代码后，尝试更改 <code>any()</code> 的谓词，使其返回 false:</p>
<div><pre><code><span>if</span> <span>(</span>items<span>.</span><span>any</span><span>(</span><span>(</span>element<span>)</span> <span>=</span><span>></span> element<span>.</span><span>contains</span><span>(</span><span><span>'Z'</span></span><span>)</span><span>)</span><span>)</span> <span>{</span>
  <span>print</span><span>(</span><span><span>'At least one element contains "Z"'</span></span><span>)</span><span>;</span>
<span>}</span> <span>else</span> <span>{</span>
  <span>print</span><span>(</span><span><span>'No element contains "Z"'</span></span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>您还可以 <code>any()</code> 用来验证 Iterable 中没有任何元素满足特定条件。</p>
<div><p>快速回顾</p>
<ul>
<li>尽管可以使用 <code>for-in</code> 循环来检查条件，但是有更好的方法可以执行此操作。</li>
<li>any() 允许您检查是否有任何元素满足条件。</li>
<li>every() 允许您检查所有元素均满足条件。</li>
</ul>
</div>
<h2 id="筛选" tabindex="-1"> 筛选</h2>
<p>前面的部分介绍了 <code>firstWhere()</code> 与 <code>singleWhere()</code> 这些可以帮助您找到满足特定谓词的元素的方法。</p>
<p>但是，如果要查找满足特定条件的所有元素怎么办? 您可以使用 <code>where()</code> 方法来完成。</p>
<div><pre><code><span>var</span> evenNumbers <span>=</span> numbers<span>.</span><span>where</span><span>(</span><span>(</span>number<span>)</span> <span>=</span><span>></span> number<span>.</span>isEven<span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>在此示例中， numbers 是包含多个 int 值的 Iterable，<code>where()</code> 会查找所有偶数。</p>
<p><code>where()</code> 的输出是另一个 Iterable，您可以使用它来对其进行迭代或应用其他 Iterable 方法。在下一个示例中，where() 的输出直接在 <code>for-in</code> 循环内部使用。</p>
<div><pre><code><span>var</span> evenNumbers <span>=</span> numbers<span>.</span><span>where</span><span>(</span><span>(</span>number<span>)</span> <span>=</span><span>></span> number<span>.</span>isEven<span>)</span><span>;</span>
<span>for</span> <span>(</span><span>var</span> number <span>in</span> evenNumbers<span>)</span> <span>{</span>
  <span>print</span><span>(</span><span><span>'</span><span><span>$</span><span>number</span></span><span> is even'</span></span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="使用-where" tabindex="-1"> 使用 where()</h3>
<p>此示例真是如何将 <code>where()</code> 与其他方法(例如 <code>any()</code>)一起使用。</p>
<p>在此示例中，<code>where()</code> 用于查找所有偶数，然后 <code>any()</code> 用于检查结果是否包含负数。</p>
<p>在示例的后面，<code>where()</code> 再次用于查找所有大于 1000 的数字。由于没有数字，结果为空 Iterable。</p>
<div><p>提示</p>
<p>如果没有元素满足 <code>where()</code> 中的谓词 ，则该方法返回 null Iterable。不同于 <code>singleWhere()</code> 或 <code>firstWhere()</code>， <code>where()</code> 不会引发 StateError 异常。</p>
</div>
<h3 id="使用-takewhile" tabindex="-1"> 使用 takeWhile</h3>
<p>方法 <code>takeWhile()</code> 和 <code>skipWhile()</code> 还可以帮助您从 Iterable 中过滤元素。</p>
<p>这个例子展示了 <code>takeWhile()</code> 和 <code>skipWhile()</code> 是如何拆分包含数字的 Iterable。</p>
<div><pre><code><span>main</span><span>(</span><span>)</span> <span>{</span>
  <span>var</span> numbers <span>=</span> <span>[</span><span>1</span><span>,</span> <span>3</span><span>,</span> <span>-</span><span>2</span><span>,</span> <span>0</span><span>,</span> <span>4</span><span>,</span> <span>5</span><span>]</span><span>;</span>

  <span>var</span> numbersUntilZero <span>=</span> numbers<span>.</span><span>takeWhile</span><span>(</span><span>(</span>number<span>)</span> <span>=</span><span>></span> number <span>!=</span> <span>0</span><span>)</span><span>;</span>
  <span>print</span><span>(</span><span><span>'Numbers until 0: </span><span><span>$</span><span>numbersUntilZero</span></span><span>'</span></span><span>)</span><span>;</span>

  <span>var</span> numbersAfterZero <span>=</span> numbers<span>.</span><span>skipWhile</span><span>(</span><span>(</span>number<span>)</span> <span>=</span><span>></span> number <span>!=</span> <span>0</span><span>)</span><span>;</span>
  <span>print</span><span>(</span><span><span>'Numbers after 0: </span><span><span>$</span><span>numbersAfterZero</span></span><span>'</span></span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>在此示例中，<code>takeWhile()</code> 返回一个 Iterable，其中包含所有导致满足谓词的元素的元素。另一方面，<code>skipWhile()</code> 返回一个移除了满足谓词的元素及它之前的所有元素的 Iterable。注意，包括满足谓词的元素。</p>
<div><p>快速回顾</p>
<ul>
<li>使用 <code>where()</code> 过滤 Iterable 的元素。</li>
<li><code>where()</code> 的输出是另一个 Iterable。</li>
<li>使用 <code>takeWhile()</code> 和 <code>skipWhile()</code> 获取元素，直到满足条件为止。</li>
<li>这些方法的输出可以为空 Iterable。</li>
</ul>
</div>
<h2 id="映射" tabindex="-1"> 映射</h2>
<p>Iterables 使用 <code>map()</code> 方法进行映射。您可以在每个元素上应用功能，并用新元素替换每个元素。</p>
<div><pre><code><span>Iterable</span><span><span>&lt;</span>int<span>></span></span> output <span>=</span> numbers<span>.</span><span>map</span><span>(</span><span>(</span>number<span>)</span> <span>=</span><span>></span> number <span>*</span> <span>10</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>在此示例中，Iterable 数字的每个元素都乘以 10。</p>
<p>您还可以使用 <code>map()</code> 将元素转换为其他对象，例如，将 int 全部转换为 String，如下面的示例所示。</p>
<div><pre><code><span>Iterable</span><span><span>&lt;</span><span>String</span><span>></span></span> output <span>=</span> numbers<span>.</span><span>map</span><span>(</span><span>(</span>number<span>)</span> <span>=</span><span>></span> number<span>.</span><span>toString</span><span>(</span><span>)</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><div><p>提示</p>
<p><code>map()</code> 返回一个惰性的 Iterable，这意味着仅在迭代元素时才调用提供的函数。</p>
</div>
<div><p>快速回顾</p>
<ul>
<li><code>map()</code> 将对应函数应用于 Iterable 的所有元素。</li>
<li><code>map()</code> 的输出是另一个 Iterable。</li>
<li>在 Iterable 迭代之前，不会调用该函数。</li>
</ul>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>dart 语言范例</title>
      <link>https://mrhope.site/code/language/dart/samples/samples.html</link>
      <guid>https://mrhope.site/code/language/dart/samples/samples.html</guid>
      <source url="https://mrhope.site/rss.xml">dart 语言范例</source>
      <description>该章内容并不全面，只是为喜欢通过示例学习的人们简要介绍了该语言。您可能还需要查看语言和库导览，或 Dart 概要。
</description>
      <category>Dart</category>
      <pubDate>Sat, 30 May 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>该章内容并不全面，只是为喜欢通过示例学习的人们简要介绍了该语言。您可能还需要查看语言和库导览，或 <a href="/code/language/dart/samples/cheatsheet.html">Dart 概要</a>。</p>

<h2 id="hello-world" tabindex="-1"> Hello World</h2>
<p>每个应用都有 <code>main()</code> 函数。要在控制台上显示文本，可以使用顶级 <code>print()</code> 函数:</p>
<div><pre><code><span>void</span> <span>main</span><span>(</span><span>)</span> <span>{</span>
  <span>print</span><span>(</span><span><span>'Hello, World!'</span></span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h2 id="变量" tabindex="-1"> 变量</h2>
<p>即使在类型安全的 Dart 代码中，由于类型推断，大多数变量也不需要显式类型:</p>
<div><pre><code><span>var</span> name <span>=</span> <span><span>'Voyager I'</span></span><span>;</span>
<span>var</span> year <span>=</span> <span>1977</span><span>;</span>
<span>var</span> antennaDiameter <span>=</span> <span>3.7</span><span>;</span>
<span>var</span> flybyObjects <span>=</span> <span>[</span><span><span>'Jupiter'</span></span><span>,</span> <span><span>'Saturn'</span></span><span>,</span> <span><span>'Uranus'</span></span><span>,</span> <span><span>'Neptune'</span></span><span>]</span><span>;</span>
<span>var</span> image <span>=</span> <span>{</span>
  <span><span>'tags'</span></span><span>:</span> <span>[</span><span><span>'saturn'</span></span><span>]</span><span>,</span>
  <span><span>'url'</span></span><span>:</span> <span><span>'//path/to/saturn.jpg'</span></span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p><a href="https://dart.dev/guides/language/language-tour#variables" target="_blank" rel="noopener noreferrer">阅读有关 Dart 中变量的更多信息<ExternalLinkIcon/></a>，包括默认值，<code>final</code> 和 <code>const</code> 关键字以及静态类型。</p>
<h2 id="控制语句" tabindex="-1"> 控制语句</h2>
<p>Dart 支持通常的控制语句:</p>
<div><pre><code><span>if</span> <span>(</span>year <span>>=</span> <span>2001</span><span>)</span> <span>{</span>
  <span>print</span><span>(</span><span><span>'21st century'</span></span><span>)</span><span>;</span>
<span>}</span> <span>else</span> <span>if</span> <span>(</span>year <span>>=</span> <span>1901</span><span>)</span> <span>{</span>
  <span>print</span><span>(</span><span><span>'20th century'</span></span><span>)</span><span>;</span>
<span>}</span>

<span>for</span> <span>(</span><span>var</span> object <span>in</span> flybyObjects<span>)</span> <span>{</span>
  <span>print</span><span>(</span>object<span>)</span><span>;</span>
<span>}</span>

<span>for</span> <span>(</span>int month <span>=</span> <span>1</span><span>;</span> month <span>&lt;=</span> <span>12</span><span>;</span> month<span>++</span><span>)</span> <span>{</span>
  <span>print</span><span>(</span>month<span>)</span><span>;</span>
<span>}</span>

<span>while</span> <span>(</span>year <span>&lt;</span> <span>2016</span><span>)</span> <span>{</span>
  year <span>+=</span> <span>1</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><p><a href="https://dart.dev/guides/language/language-tour#control-flow-statements" target="_blank" rel="noopener noreferrer">阅读有关 Dart 中控制流语句的更多信息<ExternalLinkIcon/></a>，包括 <code>break</code> 和 <code>continue</code>，<code>switch</code> 和 <code>case</code>，和 <code>assert</code>。</p>
<h2 id="函数" tabindex="-1"> 函数</h2>
<p><a href="https://dart.dev/guides/language/effective-dart/design#types" target="_blank" rel="noopener noreferrer">我们建议<ExternalLinkIcon/></a> 指定每个函数的参数和返回值的类型:</p>
<div><pre><code>int <span>fibonacci</span><span>(</span>int n<span>)</span> <span>{</span>
  <span>if</span> <span>(</span>n <span>==</span> <span>0</span> <span>||</span> n <span>==</span> <span>1</span><span>)</span> <span>return</span> n<span>;</span>
  <span>return</span> <span>fibonacci</span><span>(</span>n <span>-</span> <span>1</span><span>)</span> <span>+</span> <span>fibonacci</span><span>(</span>n <span>-</span> <span>2</span><span>)</span><span>;</span>
<span>}</span>

<span>var</span> result <span>=</span> <span>fibonacci</span><span>(</span><span>20</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>简写 <code>=&gt;</code>(箭头)语法对于包含单个语句的函数很方便。当将匿名函数作为参数传递时，此语法特别有用:</p>
<div><pre><code>flybyObjects<span>.</span><span>where</span><span>(</span><span>(</span>name<span>)</span> <span>=</span><span>></span> name<span>.</span><span>contains</span><span>(</span><span><span>'turn'</span></span><span>)</span><span>)</span><span>.</span><span>forEach</span><span>(</span>print<span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br></div></div><p>除了显示匿名函数(<code>where()</code> 的参数)之外，此代码还显示您可以将函数用作参数: 顶级 <code>print()</code> 函数是 <code>forEach()</code> 的参数。</p>
<p><a href="https://dart.dev/guides/language/language-tour#functions" target="_blank" rel="noopener noreferrer">阅读有关<ExternalLinkIcon/></a> Dart 中函数的更多信息，包括可选参数，默认参数值和词法范围。</p>
<h2 id="注释" tabindex="-1"> 注释</h2>
<p>Dart 注释通常以开头 <code>//</code>。</p>
<div><pre><code><span>// This is a normal, one-line comment.</span>

<span>/// This is a documentation comment, used to document libraries,</span>
<span>/// classes, and their members. Tools like IDEs and dartdoc treat</span>
<span>/// doc comments specially.</span>

<span>/*Comments like these are also supported.*/</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p><a href="https://dart.dev/guides/language/language-tour#comments" target="_blank" rel="noopener noreferrer">阅读有关<ExternalLinkIcon/></a> Dart 中注释的更多信息，包括文档工具的工作方式。</p>
<h2 id="导入" tabindex="-1"> 导入</h2>
<p>要访问其他库中定义的 API，请使用 <code>import</code>。</p>
<div><pre><code><span>// Importing core libraries</span>
<span>import</span> <span><span>'dart:math'</span></span><span>;</span>

<span>// Importing libraries from external packages</span>
<span>import</span> <span><span>'package:test/test.dart'</span></span><span>;</span>

<span>// Importing files</span>
<span>import</span> <span><span>'path/to/my_other_file.dart'</span></span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p><a href="https://dart.dev/guides/language/language-tour#libraries-and-visibility" target="_blank" rel="noopener noreferrer">阅读有关<ExternalLinkIcon/></a> Dart 中库和可见性的更多信息，包括库前缀 <code>show</code> 和 <code>hide</code>，以及通过 <code>deferred</code> 关键字的延迟加载。</p>
<h2 id="类" tabindex="-1"> 类</h2>
<p>这是一个具有三个属性，两个构造函数和一个方法的类的示例。其中一个属性不能直接设置，因此是使用 <code>getter</code> 方法(而不是变量)定义的。</p>
<div><pre><code><span>class</span> <span>Spacecraft</span> <span>{</span>
  <span>String</span> name<span>;</span>
  <span>DateTime</span> launchDate<span>;</span>

  <span>// Constructor, with syntactic sugar for assignment to members.</span>
  <span>Spacecraft</span><span>(</span><span>this</span><span>.</span>name<span>,</span> <span>this</span><span>.</span>launchDate<span>)</span> <span>{</span>
    <span>// Initialization code goes here.</span>
  <span>}</span>

  <span>// Named constructor that forwards to the default one.</span>
  <span>Spacecraft</span><span>.</span><span>unlaunched</span><span>(</span><span>String</span> name<span>)</span> <span>:</span> <span>this</span><span>(</span>name<span>,</span> <span>null</span><span>)</span><span>;</span>

  int <span>get</span> launchYear <span>=</span><span>></span>
      launchDate<span>?</span><span>.</span>year<span>;</span> <span>// read-only non-final property</span>

  <span>// Method.</span>
  <span>void</span> <span>describe</span><span>(</span><span>)</span> <span>{</span>
    <span>print</span><span>(</span><span><span>'Spacecraft: </span><span><span>$</span><span>name</span></span><span>'</span></span><span>)</span><span>;</span>
    <span>if</span> <span>(</span>launchDate <span>!=</span> <span>null</span><span>)</span> <span>{</span>
      int years <span>=</span>
          <span>DateTime</span><span>.</span><span>now</span><span>(</span><span>)</span><span>.</span><span>difference</span><span>(</span>launchDate<span>)</span><span>.</span>inDays <span>~/</span>
              <span>365</span><span>;</span>
      <span>print</span><span>(</span><span><span>'Launched: </span><span><span>$</span><span>launchYear</span></span><span> (</span><span><span>$</span><span>years</span></span><span> years ago)'</span></span><span>)</span><span>;</span>
    <span>}</span> <span>else</span> <span>{</span>
      <span>print</span><span>(</span><span><span>'Unlaunched'</span></span><span>)</span><span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div><p>您可以使用这样的 <code>Spacecraft</code> 类:</p>
<div><pre><code><span>var</span> voyager <span>=</span> <span>Spacecraft</span><span>(</span><span><span>'Voyager I'</span></span><span>,</span> <span>DateTime</span><span>(</span><span>1977</span><span>,</span> <span>9</span><span>,</span> <span>5</span><span>)</span><span>)</span><span>;</span>
voyager<span>.</span><span>describe</span><span>(</span><span>)</span><span>;</span>

<span>var</span> voyager3 <span>=</span> <span>Spacecraft</span><span>.</span><span>unlaunched</span><span>(</span><span><span>'Voyager III'</span></span><span>)</span><span>;</span>
voyager3<span>.</span><span>describe</span><span>(</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p><a href="https://dart.dev/guides/language/language-tour#classes" target="_blank" rel="noopener noreferrer">阅读有关<ExternalLinkIcon/></a> Dart 中类的更多信息，包括初始化列表，可选 <code>new</code> 和 <code>const</code>，重定向构造函数，<code>factory</code> 构造函数，getter，setter 等。</p>
<h2 id="遗产" tabindex="-1"> 遗产</h2>
<p>Dart 具有单一继承。</p>
<div><pre><code><span>class</span> <span>Orbiter</span> <span>extends</span> <span>Spacecraft</span> <span>{</span>
  double altitude<span>;</span>
  <span>Orbiter</span><span>(</span><span>String</span> name<span>,</span> <span>DateTime</span> launchDate<span>,</span> <span>this</span><span>.</span>altitude<span>)</span>
      <span>:</span> <span>super</span><span>(</span>name<span>,</span> launchDate<span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p><a href="https://dart.dev/guides/language/language-tour#extending-a-class" target="_blank" rel="noopener noreferrer">阅读有关<ExternalLinkIcon/></a> 扩展类，可选 <code>@override</code> 注释等的更多信息。</p>
<h2 id="混入" tabindex="-1"> 混入</h2>
<p>Mixins 是在多个类层次结构中重用代码的一种方式。以下类可以充当 mixin:</p>
<div><pre><code><span>class</span> <span>Piloted</span> <span>{</span>
  int astronauts <span>=</span> <span>1</span><span>;</span>
  <span>void</span> <span>describeCrew</span><span>(</span><span>)</span> <span>{</span>
    <span>print</span><span>(</span><span><span>'Number of astronauts: </span><span><span>$</span><span>astronauts</span></span><span>'</span></span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>要将 mixin 的功能添加到类中，只需使用 mixin 扩展类即可。</p>
<div><pre><code><span>class</span> <span>PilotedCraft</span> <span>extends</span> <span>Spacecraft</span> <span>with</span> <span>Piloted</span> <span>{</span>
  <span>// ···</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p><code>PilotedCraft</code> 现在具有 <code>astronauts</code> 字段和 <code>describeCrew()</code> 方法。</p>
<p><a href="https://dart.dev/guides/language/language-tour#adding-features-to-a-class-mixins" target="_blank" rel="noopener noreferrer">阅读有关<ExternalLinkIcon/></a> mixin 的更多信息。</p>
<h2 id="接口和抽象类" tabindex="-1"> 接口和抽象类</h2>
<p>Dart 没有 <code>interface</code> 关键字。相反，所有类都隐式定义一个接口。因此，您可以实现任何类。</p>
<div><pre><code><span>class</span> <span>MockSpaceship</span> <span>implements</span> <span>Spacecraft</span> <span>{</span>
  <span>// ···</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p><a href="https://dart.dev/guides/language/language-tour#implicit-interfaces" target="_blank" rel="noopener noreferrer">阅读有关<ExternalLinkIcon/></a> 隐式接口的更多信息。</p>
<p>您可以创建要由具体类扩展(或实现)的抽象类。抽象类可以包含抽象方法(具有空主体)。</p>
<div><pre><code><span>abstract</span> <span>class</span> <span>Describable</span> <span>{</span>
  <span>void</span> <span>describe</span><span>(</span><span>)</span><span>;</span>

  <span>void</span> <span>describeWithEmphasis</span><span>(</span><span>)</span> <span>{</span>
    <span>print</span><span>(</span><span><span>'========='</span></span><span>)</span><span>;</span>
    <span>describe</span><span>(</span><span>)</span><span>;</span>
    <span>print</span><span>(</span><span><span>'========='</span></span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>任何扩展类 <code>Describable</code> 都具有 <code>describeWithEmphasis()</code> 方法，该方法调用扩展程序的实现 <code>describe()</code>。</p>
<p><a href="https://dart.dev/guides/language/language-tour#abstract-classes" target="_blank" rel="noopener noreferrer">阅读有关<ExternalLinkIcon/></a> 抽象类和方法的更多信息。</p>
<h2 id="异步" tabindex="-1"> 异步</h2>
<p>避免陷入回调地狱，您可以使用 <code>async</code> 和 <code>await</code> 来提高代码的可读性。</p>
<div><pre><code><span>const</span> oneSecond <span>=</span> <span>Duration</span><span>(</span>seconds<span>:</span> <span>1</span><span>)</span><span>;</span>
<span>// ···</span>
<span>Future</span><span><span>&lt;</span><span>void</span><span>></span></span> <span>printWithDelay</span><span>(</span><span>String</span> message<span>)</span> <span>async</span> <span>{</span>
  <span>await</span> <span>Future</span><span>.</span><span>delayed</span><span>(</span>oneSecond<span>)</span><span>;</span>
  <span>print</span><span>(</span>message<span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>上面的方法等效于:</p>
<div><pre><code><span>Future</span><span><span>&lt;</span><span>void</span><span>></span></span> <span>printWithDelay</span><span>(</span><span>String</span> message<span>)</span> <span>{</span>
  <span>return</span> <span>Future</span><span>.</span><span>delayed</span><span>(</span>oneSecond<span>)</span><span>.</span><span>then</span><span>(</span><span>(</span>_<span>)</span> <span>{</span>
    <span>print</span><span>(</span>message<span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>如下例所示，<code>async</code> 和 <code>await</code> 有助于使异步代码易于阅读。</p>
<div><pre><code><span>Future</span><span><span>&lt;</span><span>void</span><span>></span></span> <span>createDescriptions</span><span>(</span><span>Iterable</span><span><span>&lt;</span><span>String</span><span>></span></span> objects<span>)</span> <span>async</span> <span>{</span>
  <span>for</span> <span>(</span><span>var</span> object <span>in</span> objects<span>)</span> <span>{</span>
    <span>try</span> <span>{</span>
      <span>var</span> file <span>=</span> <span>File</span><span>(</span><span><span>'</span><span><span>$</span><span>object</span></span><span>.txt'</span></span><span>)</span><span>;</span>
      <span>if</span> <span>(</span><span>await</span> file<span>.</span><span>exists</span><span>(</span><span>)</span><span>)</span> <span>{</span>
        <span>var</span> modified <span>=</span> <span>await</span> file<span>.</span><span>lastModified</span><span>(</span><span>)</span><span>;</span>
        <span>print</span><span>(</span>
            <span><span>'File for </span><span><span>$</span><span>object</span></span><span> already exists. It was modified on </span><span><span>$</span><span>modified</span></span><span>.'</span></span><span>)</span><span>;</span>
        <span>continue</span><span>;</span>
      <span>}</span>
      <span>await</span> file<span>.</span><span>create</span><span>(</span><span>)</span><span>;</span>
      <span>await</span> file<span>.</span><span>writeAsString</span><span>(</span><span><span>'Start describing </span><span><span>$</span><span>object</span></span><span> in this file.'</span></span><span>)</span><span>;</span>
    <span>}</span> <span>on</span> <span>IOException</span> <span>catch</span> <span>(</span>e<span>)</span> <span>{</span>
      <span>print</span><span>(</span><span><span>'Cannot create description for </span><span><span>$</span><span>object</span></span><span>: </span><span><span>$</span><span>e</span></span><span>'</span></span><span>)</span><span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><p>您还可以使用 <code>async*</code>，它为您提供了一种很好的，易于阅读的方式来构建流。</p>
<div><pre><code><span>Stream</span><span><span>&lt;</span><span>String</span><span>></span></span> <span>report</span><span>(</span><span>Spacecraft</span> craft<span>,</span> <span>Iterable</span><span><span>&lt;</span><span>String</span><span>></span></span> objects<span>)</span> <span>async*</span> <span>{</span>
  <span>for</span> <span>(</span><span>var</span> object <span>in</span> objects<span>)</span> <span>{</span>
    <span>await</span> <span>Future</span><span>.</span><span>delayed</span><span>(</span>oneSecond<span>)</span><span>;</span>
    <span>yield</span> <span><span>'</span><span><span>${</span><span>craft<span>.</span>name</span><span>}</span></span><span> flies by </span><span><span>$</span><span>object</span></span><span>'</span></span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p><a href="https://dart.dev/guides/language/language-tour#asynchrony-support" target="_blank" rel="noopener noreferrer">阅读更多<ExternalLinkIcon/></a> 关于异步支持，包括 <code>async</code> 功能 <code>Future</code>，<code>Stream</code> 和异步循环(await for)。</p>
<h2 id="异常" tabindex="-1"> 异常</h2>
<p>要引发异常，请使用 <code>throw</code>:</p>
<div><pre><code><span>if</span> <span>(</span>astronauts <span>==</span> <span>0</span><span>)</span> <span>{</span>
  <span>throw</span> <span>StateError</span><span>(</span><span><span>'No astronauts.'</span></span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>要捕获异常，请使用 <code>try</code> 带有 <code>on</code> 或 <code>catch</code>(或两者)的语句:</p>
<div><pre><code><span>try</span> <span>{</span>
  <span>for</span> <span>(</span><span>var</span> object <span>in</span> flybyObjects<span>)</span> <span>{</span>
    <span>var</span> description <span>=</span> <span>await</span> <span>File</span><span>(</span><span><span>'</span><span><span>$</span><span>object</span></span><span>.txt'</span></span><span>)</span><span>.</span><span>readAsString</span><span>(</span><span>)</span><span>;</span>
    <span>print</span><span>(</span>description<span>)</span><span>;</span>
  <span>}</span>
<span>}</span> <span>on</span> <span>IOException</span> <span>catch</span> <span>(</span>e<span>)</span> <span>{</span>
  <span>print</span><span>(</span><span><span>'Could not describe object: </span><span><span>$</span><span>e</span></span><span>'</span></span><span>)</span><span>;</span>
<span>}</span> <span>finally</span> <span>{</span>
  flybyObjects<span>.</span><span>clear</span><span>(</span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>注意上面的代码是异步的； <code>try</code> 适用于同步代码和 <code>async</code> 函数中的代码。</p>
<p>阅读有关异常的更多信息，包括堆栈跟踪 <code>rethrow</code>，和错误与异常之间的区别。</p>
<h2 id="其他话题" tabindex="-1"> 其他话题</h2>
<p>更多的代码示例在 <a href="https://dart.dev/guides/language/language-tour" target="_blank" rel="noopener noreferrer">语言示例<ExternalLinkIcon/></a> 和 <a href="https://dart.dev/guides/libraries/library-tour" target="_blank" rel="noopener noreferrer">库示例<ExternalLinkIcon/></a> 中。另请参阅 <a href="https://api.dart.dev/" target="_blank" rel="noopener noreferrer">Dart API 参考<ExternalLinkIcon/></a>， 其中通常包含示例。</p>
]]></content:encoded>
    </item>
    <item>
      <title>COMSOL</title>
      <link>https://mrhope.site/software/comsol/</link>
      <guid>https://mrhope.site/software/comsol/</guid>
      <source url="https://mrhope.site/rss.xml">COMSOL</source>
      <description>这里是一些 Comsol 的学习资料整理与学习心得。
</description>
      <category>软件</category>
      <pubDate>Fri, 29 May 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<p>这里是一些 Comsol 的学习资料整理与学习心得。</p>

<div><p>写在前面</p>
<p>本教程只适用于从未接触过仿真的人员，内容比较基础。</p>
<p>我本人主要活跃在计算机相关领域，本科专业是物理学，并没有学过系统的工程原理、数值分析、模型建构以及相关的误差分析。COMSOL 是我本科制作毕设的软件，在毕设前，我也使用 COMSOL 构建了几个模型，完成了一些装置的模拟与优化。</p>
<p>本篇教程，是根据我对 COMSOL 以及有限元仿真的理解书写的，一定会有一些疏漏与理解错误之处，还望大家指出。另外我主要研究过的方向是传热与流体流动，在本教程的举例中，也大多以这两方面为主。对其他的方向与模块，我是不熟悉的。</p>
</div>
<ul>
<li>
<p><a href="/software/comsol/install.html">软件下载与安装</a></p>
</li>
<li>
<p><a href="/software/comsol/intro.html">有限元分析软件介绍</a></p>
</li>
<li>
<p><a href="/software/comsol/get-started.html">快速上手 COMSOL</a></p>
</li>
<li>
<p><a href="/software/comsol/geometry/">几何</a></p>
<ul>
<li>
<p><a href="/software/comsol/geometry/view.html">浏览几何</a></p>
</li>
<li>
<p><a href="/software/comsol/geometry/build.html">构建几何</a></p>
</li>
</ul>
</li>
<li>
<p><a href="/software/comsol/select.html">选择</a></p>
</li>
<li>
<p><a href="/software/comsol/material.html">材料</a></p>
</li>
<li>
<p><a href="/software/comsol/physic-field.html">物理场</a></p>
</li>
<li>
<p><a href="/software/comsol/mesh/">网格</a></p>
</li>
<li>
<p><a href="/software/comsol/study.html">研究</a></p>
</li>
<li>
<p><a href="/software/comsol/result.html">结果</a></p>
</li>
<li>
<p><a href="/software/comsol/app.html">APP</a></p>
</li>
</ul>
<h2 id="文档" tabindex="-1"> 文档</h2>
<ul>
<li>
<p><a href="https://mrhope.site/file/comsol/IntroductionToCOMSOLMultiphysics.zh_CN.pdf" target="_blank" rel="noopener noreferrer">COMSOL 新手指南<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://mrhope.site/file/comsol/App%E5%BC%80%E5%8F%91%E5%99%A8%E7%AE%80%E4%BB%8B.pdf" target="_blank" rel="noopener noreferrer">COMSOL App 开发器简介<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://mrhope.site/file/comsol/ApplicationProgrammingGuide.zh_CN.pdf" target="_blank" rel="noopener noreferrer">COMSOL Multiphysics 应用程序编程指南<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="http://cn.comsol.com/multiphysics/" target="_blank" rel="noopener noreferrer">COMSOL 多物理场仿真百科<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://cn.comsol.com/videos" target="_blank" rel="noopener noreferrer">COMSOL 视频中心<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://cn.comsol.com/video-training" target="_blank" rel="noopener noreferrer">COMSOL 在线课程回放<ExternalLinkIcon/></a> (应该是在疫情期间限时开放)</p>
</li>
<li>
<p><a href="https://cn.comsol.com/papers-presentations" target="_blank" rel="noopener noreferrer">基于 COMSOL 的论文<ExternalLinkIcon/></a></p>
</li>
</ul>
<h2 id="其他杂项" tabindex="-1"> 其他杂项</h2>
<ul>
<li>
<p><a href="https://cn.comsol.com/blogs/how-to-make-boundary-conditions-conditional-in-your-simulation/" target="_blank" rel="noopener noreferrer">如何设置特殊边界条件<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://cn.comsol.com/blogs/how-to-customize-the-comsol-desktop-and-use-keyboard-shortcuts/" target="_blank" rel="noopener noreferrer">如何定制 COMSOL Desktop<sup>®</sup> 和使用键盘快捷键<ExternalLinkIcon/></a></p>
</li>
<li>
<p><a href="https://cn.comsol.com/blogs/how-to-use-the-find-and-auto-completion-tools-for-faster-model-setup/" target="_blank" rel="noopener noreferrer">使用查找工具和自动完成工具加快建模过程<ExternalLinkIcon/></a></p>
</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>COMSOL 安装</title>
      <link>https://mrhope.site/software/comsol/install.html</link>
      <guid>https://mrhope.site/software/comsol/install.html</guid>
      <source url="https://mrhope.site/rss.xml">COMSOL 安装</source>
      <category>软件</category>
      <pubDate>Fri, 29 May 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="软件下载" tabindex="-1"> 软件下载</h2>
<p>您可以直接从 <a href="https://cn.comsol.com/product-download" target="_blank" rel="noopener noreferrer">官网下载页面<ExternalLinkIcon/></a> 进行下载。</p>
<h2 id="软件许可" tabindex="-1"> 软件许可</h2>
<ol>
<li>
<p>可以注册一个 COMSOL 账号，积极参与并收听 COMSOL 官网上的免费 Workshop，每次参加都会附赠 15 天的免费试用许可证。</p>
<div><p>试用许可证</p>
<p>COMSOL 试用许可证与 COMSOL 全产品许可证的唯一区别是无法使用 COMSOL Compiler，即不能使用该许可证将 COMSOL 模型编译为各平台可用的应用程序。</p>
<p>COMSOL workshop 的频率很高，平均不到十天就有一期，在 <a href="http://cn.comsol.com/events" target="_blank" rel="noopener noreferrer">这里<ExternalLinkIcon/></a> 查看并注册。</p>
</div>
</li>
<li>
<p><s>打着学习交流的名义，科学上网在国外相关论坛上搜索 “LMCOMSOL_Multiphysics_SSQ.lic”</s> ❌</p>
<p>这是违法的，并且可能收到 COMSOL 公司的追责。</p>
</li>
</ol>
]]></content:encoded>
    </item>
  </channel>
</rss>