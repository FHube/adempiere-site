"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[46504],{69785:(e,n,l)=>{l.r(n),l.d(n,{default:()=>y});var a=l(34086);const d=(0,a.uE)("<p>JavaScript 语言的每一个值，都属于某一种数据类型。JavaScript 的数据类型，共有六种。</p><ul><li>数值 (number): 整数和小数(比如 <code>1</code> 和 <code>3.14</code>)</li><li>字符串 (string): 文本(比如 <code>Hello World</code>)。</li><li>布尔值 (boolean): 表示真伪的两个特殊值，即 <code>true</code> (真) 和 <code>false</code> (假)</li><li><code>undefined</code>: 表示“未定义”或不存在，即由于目前没有定义，所以此处暂时没有任何值</li><li><code>null</code>: 表示空值，即此处的值为空。</li><li>对象 (object): 各种值组成的集合。</li></ul>",2),c=(0,a.Uk)("深入了解数据类型"),o=(0,a.uE)('<h2 id="number" tabindex="-1"><a class="header-anchor" href="#number" aria-hidden="true">#</a> Number</h2><p>JavaScript 不区分整数和浮点数，统一用 <code>Number</code> 表示，以下都是合法的 <code>Number</code> 类型:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>123; // 整数 123\n0.456; // 浮点数 0.456\n1.2345e3; // 科学计数法表示 1.2345x1000，等同于 1234.5\n-99; // 负数\nNaN; // NaN 表示 Not a Number，当无法计算结果时用 NaN 表示\nInfinity; // Infinity 表示无限大，当数值超过了 JavaScript 的 Number 所能表示的最大值时，就表示为 Infinity\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',3),r=(0,a.Uk)("深入了解 Number"),t=(0,a._)("h2",{id:"字符串",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#字符串","aria-hidden":"true"},"#"),(0,a.Uk)(" 字符串")],-1),i=(0,a._)("p",null,[(0,a.Uk)("字符串 (String) 是以单引号 "),(0,a._)("code",null,"'"),(0,a.Uk)(" 或双引号 "),(0,a._)("code",null,'"'),(0,a.Uk)(" 括起来的任意文本，比如 "),(0,a._)("code",null,"'abc'"),(0,a.Uk)("，"),(0,a._)("code",null,'"xyz"'),(0,a.Uk)(" 等等。")],-1),s=(0,a.Uk)("字符串入门"),u=(0,a.Uk)("深入了解 String"),p=(0,a.uE)('<h2 id="布尔值" tabindex="-1"><a class="header-anchor" href="#布尔值" aria-hidden="true">#</a> 布尔值</h2><p>布尔值 (Boolean) 和布尔代数的表示完全一致，一个布尔值只有 <code>true</code>、<code>false</code> 两种值，要么是 <code>true</code>，要么是 <code>false</code>，可以直接用 <code>true</code>、<code>false</code> 表示布尔值，也可以通过布尔运算计算出来:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>true; // 这是一个 true 值\nfalse; // 这是一个 false 值\n2 &gt; 1; // 这是一个 true 值\n2 &gt;= 3; // 这是一个 false 值\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>下列运算符会返回布尔值:</p><ul><li>前置逻辑运算符: <code>!</code> (Not)</li><li>相等运算符: <code>===</code>，<code>!==</code>，<code>==</code>，<code>!=</code></li><li>比较运算符: <code>&gt;</code>，<code>&gt;=</code>，<code>&lt;</code>，<code>&lt;=</code></li></ul><hr>',6),m=(0,a.Uk)("布尔值入门"),g=(0,a.uE)('<h2 id="null-和-undefined" tabindex="-1"><a class="header-anchor" href="#null-和-undefined" aria-hidden="true">#</a> null 和 undefined</h2><p><code>null</code> 表示一个 “空” 的值，它和 <code>0</code> 以及空字符串 <code>&#39;&#39;</code> 不同，<code>0</code> 是一个数值，<code>&#39;&#39;</code> 表示长度为 0 的字符串，而 <code>null</code> 表示“空”。</p><p>在其他语言中，也有类似 JavaScript 的 <code>null</code> 的表示，例如 Java 也用 <code>null</code>，Swift 用 <code>nil</code>，Python 用 <code>None</code> 表示。但是，在 JavaScript 中，还有一个和 <code>null</code> 类似的 <code>undefined</code>，它表示 “未定义”。</p><p>JavaScript 的设计者希望用 <code>null</code> 表示一个空的值，而 <code>undefined</code> 表示值未定义。事实证明，这并没有什么卵用，区分两者的意义不大。大多数情况下，我们都应该用 <code>null</code>。<code>undefined</code> 仅仅在判断函数参数是否传递的情况下有用。</p><h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h2><p>数组 (Array) 是一组<strong>按顺序</strong>排列的<strong>集合</strong>，集合的每个值称为<strong>元素</strong>。JavaScript 的数组可以包括任意数据类型。例如:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>[1, 2, 3.14, &quot;Hello&quot;, null, true];\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>上述数组包含 6 个元素。数组用 <code>[]</code> 表示，元素之间用 <code>,</code> 分隔。</p>',8),b=(0,a.Uk)("数组入门"),h=(0,a.Uk)("深入了解 Array"),v=(0,a.uE)('<h2 id="对象" tabindex="-1"><a class="header-anchor" href="#对象" aria-hidden="true">#</a> 对象</h2><p>JavaScript 的对象 (Object) 是一组由 <strong><code>键-值</code></strong> 组成的<strong>无序</strong>集合，例如:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>let person = {\n  name: &quot;Mr.Hope&quot;,\n  isHandsome: true,\n  birth: 1998,\n  school: &quot;No.1 Middle School&quot;,\n  height: 1.76,\n  weight: 50,\n  car: null,\n};\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>JavaScript 对象的键都是字符串类型，值可以是任意数据类型。上述 <code>person</code> 对象一共定义了 6 个键值对，其中每个键又称为对象的属性，例如，<code>person</code> 的 <code>name</code> 属性为 <code>&#39;Bob&#39;</code>，<code>zipcode</code> 属性为 <code>null</code>。</p><p>要获取一个对象的属性，我们用 <code>Object.Key</code> 的方式:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>person.name; // &#39;Mr.Hope&#39;\nperson.zipcode; // null\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',6),f=(0,a.Uk)("对象入门"),_=(0,a.Uk)("深入了解 Object"),j={},y=(0,l(82831).Z)(j,[["render",function(e,n){const l=(0,a.up)("RouterLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[d,(0,a.kq)(" more "),(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(l,{to:"/code/language/js/types/"},{default:(0,a.w5)((()=>[c])),_:1})])]),o,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(l,{to:"/code/language/js/types/number.html"},{default:(0,a.w5)((()=>[r])),_:1})])]),t,i,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(l,{to:"/code/language/js/guide/string.html"},{default:(0,a.w5)((()=>[s])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(l,{to:"/code/language/js/types/string.html"},{default:(0,a.w5)((()=>[u])),_:1})])]),p,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(l,{to:"/code/language/js/guide/boolean.html"},{default:(0,a.w5)((()=>[m])),_:1})])]),g,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(l,{to:"/code/language/js/guide/array.html"},{default:(0,a.w5)((()=>[b])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(l,{to:"/code/language/js/types/array.html"},{default:(0,a.w5)((()=>[h])),_:1})])]),v,(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(l,{to:"/code/language/js/guide/object.html"},{default:(0,a.w5)((()=>[f])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(l,{to:"/code/language/js/types/object.html"},{default:(0,a.w5)((()=>[_])),_:1})])])],64)}]])},82831:(e,n)=>{n.Z=(e,n)=>{const l=e.__vccOpts||e;for(const[e,a]of n)l[e]=a;return l}},11530:(e,n,l)=>{l.r(n),l.d(n,{data:()=>a});const a={key:"v-a4a26144",path:"/code/language/js/guide/data-structure.html",title:"数据类型",lang:"zh-CN",frontmatter:{title:"数据类型",icon:"type",date:"2019-09-15T00:00:00.000Z",category:["JavaScript"],tag:["快速上手"],summary:"JavaScript 语言的每一个值，都属于某一种数据类型。JavaScript 的数据类型，共有六种。\n\n数值 (number): 整数和小数(比如 1 和 3.14)\n字符串 (string): 文本(比如 Hello World)。\n布尔值 (boolean): 表示真伪的两个特殊值，即 true (真) 和 false (假)\nundefined: 表示“未定义”或不存在，即由于目前没有定义，所以此处暂时没有任何值\nnull: 表示空值，即此处的值为空。\n对象 (object): 各种值组成的集合。\n\n",head:[["meta",{property:"og:url",content:"https://mrhope.site/code/language/js/guide/data-structure.html"}],["meta",{property:"og:site_name",content:"Mr.Hope"}],["meta",{property:"og:title",content:"数据类型"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:updated_time",content:"2022-02-06T16:46:58.000Z"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{property:"article:tag",content:"快速上手"}],["meta",{property:"article:published_time",content:"2019-09-15T00:00:00.000Z"}],["meta",{property:"article:modified_time",content:"2022-02-06T16:46:58.000Z"}]]},excerpt:"<p>JavaScript 语言的每一个值，都属于某一种数据类型。JavaScript 的数据类型，共有六种。</p>\n<ul>\n<li>数值 (number): 整数和小数(比如 <code v-pre>1</code> 和 <code v-pre>3.14</code>)</li>\n<li>字符串 (string): 文本(比如 <code v-pre>Hello World</code>)。</li>\n<li>布尔值 (boolean): 表示真伪的两个特殊值，即 <code v-pre>true</code> (真) 和 <code v-pre>false</code> (假)</li>\n<li><code v-pre>undefined</code>: 表示“未定义”或不存在，即由于目前没有定义，所以此处暂时没有任何值</li>\n<li><code v-pre>null</code>: 表示空值，即此处的值为空。</li>\n<li>对象 (object): 各种值组成的集合。</li>\n</ul>\n",headers:[{level:2,title:"Number",slug:"number",children:[]},{level:2,title:"字符串",slug:"字符串",children:[]},{level:2,title:"布尔值",slug:"布尔值",children:[]},{level:2,title:"null 和 undefined",slug:"null-和-undefined",children:[]},{level:2,title:"数组",slug:"数组",children:[]},{level:2,title:"对象",slug:"对象",children:[]}],git:{createdTime:1591204114e3,updatedTime:1644166018e3,contributors:[{name:"Mr.Hope",email:"zhangbowang1998@gmail.com",commits:6}]},readingTime:{minutes:2.73,words:820},filePathRelative:"code/language/js/guide/data-structure.md"}}}]);