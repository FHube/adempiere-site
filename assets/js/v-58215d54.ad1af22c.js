"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[82428],{23915:(e,n,a)=>{a.r(n),a.d(n,{default:()=>I});var s=a(34086);const t=(0,s._)("p",null,"在初步进入 JavaScript 的世界后，实战是十分重要的。本章是一些经典的案例，可以进行总结与测试。",-1),r=(0,s.uE)('<h2 id="成年判断" tabindex="-1"><a class="header-anchor" href="#成年判断" aria-hidden="true">#</a> 成年判断</h2><p>请给出一个函数 <code>isAdult</code>。该函数接受一个数字参数，值为年龄，返回一个布尔值，为对应年龄是否成年。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>isAdult(6); // false\nisAdult(18); // true\nisAdult(50); // true\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>答案解析<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>。</p><h2 id="买书" tabindex="-1"><a class="header-anchor" href="#买书" aria-hidden="true">#</a> 买书</h2><p>请给出一个函数 <code>bookPrice</code>。该函数接受两个数字参数，第一个是书的价格，第二个是书的单价。作为一个精明的老板，您决定:</p><ul><li>买 10 本以下，不打折</li><li>满 10 本，打九折</li><li>满 20 本，打八折</li><li><s>不给钱就打骨折😒</s></li></ul><p>该函数返回您要让他付的钱。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>bookPrice(20，5); // 100\nbookPrice(12，12); // 129.6\nbookPrice(6，30); // 144\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>答案解析<sup class="footnote-ref"><a href="#footnote2">[2]</a><a class="footnote-anchor" id="footnote-ref2"></a></sup>。</p><h2 id="数组中特定元素出现次数" tabindex="-1"><a class="header-anchor" href="#数组中特定元素出现次数" aria-hidden="true">#</a> 数组中特定元素出现次数</h2><p>请给出一个函数 <code>getTimes</code>。该函数有两个参数，第一个参数是一个未知长度的装满数字的数组，第二个参数是一个数字。函数返回这个数字在数组中出现的次数。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>getTimes([1, 1, 2, 3, 4, 4, 4], 1); // 2\ngetTimes([1, 1, 2, 3, 4, 4, 4], 5); // 0\ngetTimes([1, 1, 2, 3, 4, 4, 4], 4); // 3\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>答案解析<sup class="footnote-ref"><a href="#footnote3">[3]</a><a class="footnote-anchor" id="footnote-ref3"></a></sup>。</p><h2 id="小九九" tabindex="-1"><a class="header-anchor" href="#小九九" aria-hidden="true">#</a> 小九九</h2><p>请给出一个函数 <code>nineNine</code>。该函数通过遍历返回一个小九九，该小九九不重复。</p><blockquote><p>即一一得一，一二得二，二二得四，一三得三，二三得六...</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>nineNine(); // [&#39;1 × 1 = 1&#39;, &#39;1 × 2 = 2&#39;,&#39;2 × 2 = 4&#39;,&#39;1 × 3 = 3&#39;, ...,&#39;9 × 9 = 81&#39;]\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>答案解析<sup class="footnote-ref"><a href="#footnote4">[4]</a><a class="footnote-anchor" id="footnote-ref4"></a></sup>。</p><h2 id="扩展" tabindex="-1"><a class="header-anchor" href="#扩展" aria-hidden="true">#</a> 扩展</h2><p>请给出一个函数 <code>pickNumber</code>。该函数返回传入字符串中的所有数字。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>pickNumber(&quot;zhangbowang&quot;); // &#39;&#39;\npickNumber(&quot;z1han2g&quot;); // &#39;12&#39;\npickNumber(&quot;1234&quot;); // &#39;1234&#39;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>答案解析<sup class="footnote-ref"><a href="#footnote5">[5]</a><a class="footnote-anchor" id="footnote-ref5"></a></sup>。</p><hr class="footnotes-sep">',24),l={class:"footnotes"},i={class:"footnotes-list"},p={id:"footnote1",class:"footnote-item"},c=(0,s._)("p",null,"答案",-1),u=(0,s._)("p",null,[(0,s.Uk)("这道题的逻辑是: 如果 "),(0,s._)("code",null,"age >=18"),(0,s.Uk)(" 返回 "),(0,s._)("code",null,"true"),(0,s.Uk)("，反之返回 "),(0,s._)("code",null,"false"),(0,s.Uk)("。")],-1),o=(0,s._)("p",null,"逻辑图如下:",-1),E=(0,s.uE)('<p>最简单的想法肯定是使用 if 条件判断，把上面的流程图写下来:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const isAdult = function (age) {\n  if (age &gt;= 18) return true;\n  else return false;\n};\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>果然，它正常工作了😁。开心的您准备去交差。</p><p>突然，您想起了文档上有这么一句话😳:</p><div class="custom-container center"><p>JavaScript 引擎遇到 <code>return</code> 语句，就直接返回 <code>return</code> 后面的那个表达式的值，</p><p>后面即使还有语句，也不会得到执行。</p></div>',5),m={class:"custom-container right"},d=(0,s.Uk)("文档地址"),A=(0,s.uE)('<p>于是乎，您去掉了 <code>else</code>😮</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const isAdult = function (age) {\n  if (age &gt;= 18) return true;\n\n  return false;\n};\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>接着，懒惰的您想起了箭头函数</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const functionName = (arg1, arg2, ...) =&gt; value;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="custom-container right"><p>的写法。决定投个懒😏</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const isAdult = (age) =&gt; {\n  if (age &gt;= 18) return true;\n\n  return false;\n};\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>成了! 现在函数更简洁了，但是这还不够。</p><p>您又想起了条件表达式就是布尔值， 也就是说 <code>age &gt;= 18</code> 本身就是一个布尔值。😉</p><p>现在当它是 <code>true</code> 就 <code>return true</code>，是 <code>false</code> 就 <code>return false</code> 看起来就变成了一个愚蠢的主意😑，于是乎您又改写了一下:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const isAdult = (age) =&gt; {\n  return age &gt;= 18;\n};\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>这不就变成了只有一条语句的箭头函数了么? 我们当然可以直接返回它!😆</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const isAdult = (age) =&gt; age &gt;= 18;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>最后，是时候去掉那个愚蠢的括号了!</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const isAdult = age =&gt; age &gt;= 18;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>恭喜您，您已经得到了最简形式! 😆 <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p>',15),b={id:"footnote2",class:"footnote-item"},g=(0,s._)("p",null,"答案",-1),B=(0,s._)("p",null,"判断顾客买书的个数。",-1),h=(0,s._)("p",null,[(0,s.Uk)("如果 "),(0,s._)("code",null,"ammount < 10"),(0,s.Uk)(" 不打折，"),(0,s._)("code",null,"10 <= ammount < 20"),(0,s.Uk)(" 打九折，"),(0,s._)("code",null,"ammount > 20"),(0,s.Uk)(" 打八折")],-1),v=(0,s._)("p",null,[(0,s.Uk)("同时 "),(0,s._)("span",{class:"katex"},[(0,s._)("span",{class:"katex-mathml"},[(0,s._)("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[(0,s._)("semantics",null,[(0,s._)("mrow",null,[(0,s._)("mtext",null,"顾客最终付款"),(0,s._)("mo",null,"="),(0,s._)("mtext",null,"书的个数"),(0,s._)("mo",null,"×"),(0,s._)("mtext",null,"书的价格"),(0,s._)("mo",null,"×"),(0,s._)("mtext",null,"打折力度")]),(0,s._)("annotation",{encoding:"application/x-tex"},"\\text{顾客最终付款} = \\text{书的个数} × \\text{书的价格} × \\text{打折力度}")])])]),(0,s._)("span",{class:"katex-html","aria-hidden":"true"},[(0,s._)("span",{class:"base"},[(0,s._)("span",{class:"strut",style:{height:"0.6833em"}}),(0,s._)("span",{class:"mord text"},[(0,s._)("span",{class:"mord cjk_fallback"},"顾客最终付款")]),(0,s._)("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),(0,s._)("span",{class:"mrel"},"="),(0,s._)("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),(0,s._)("span",{class:"base"},[(0,s._)("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),(0,s._)("span",{class:"mord text"},[(0,s._)("span",{class:"mord cjk_fallback"},"书的个数")]),(0,s._)("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),(0,s._)("span",{class:"mbin"},"×"),(0,s._)("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),(0,s._)("span",{class:"base"},[(0,s._)("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),(0,s._)("span",{class:"mord text"},[(0,s._)("span",{class:"mord cjk_fallback"},"书的价格")]),(0,s._)("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),(0,s._)("span",{class:"mbin"},"×"),(0,s._)("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),(0,s._)("span",{class:"base"},[(0,s._)("span",{class:"strut",style:{height:"0.6833em"}}),(0,s._)("span",{class:"mord text"},[(0,s._)("span",{class:"mord cjk_fallback"},"打折力度")])])])])],-1),f=(0,s._)("p",null,"很简单，只是需要用多次 if 判断，我们把它逻辑图描述如下:",-1),_=(0,s.uE)('<p>照着写，您得到了:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const bookPrice = (price, ammount) =&gt; {\n  let percent;\n  let result;\n\n  if (ammount &lt; 10) percent = 1;\n  else if (10 &lt;= ammount &amp;&amp; ammount &lt;= 20) percent = 0.9;\n  else if (ammount &gt;= 20) percent = 0.8;\n\n  result = price * ammount * percent;\n\n  return result;\n};\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>与此同时，您发现您的 if 逻辑判断有重复，当第 6 行执行的时候， <code>ammount</code> 已经不可能小于 10 了，否则它会执行第 5 行。最后一个判断也是没有必要的</p><p>您还发现，如果直接返回 <code>price * ammount * percent</code> 就无需声明 <code>result</code>。</p><p>您想了想，重新画了流程图:</p>',5),D=(0,s.uE)('<p>对应的函数为:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const bookPrice = (price, ammount) =&gt; {\n  let percent;\n\n  if (ammount &lt; 10) percent = 1;\n  else if (ammount &lt;= 20) percent = 0.9;\n  else percent = 0.8;\n\n  return price * ammount * percent;\n};\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>接着您突发奇想，突然不想声明 <code>percent</code> 了，您又改了流程图:</p>',3),j=(0,s.uE)('<p>您得到了:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const bookPrice = (price, ammount) =&gt; {\n  if (ammount &lt; 10) return price * ammount;\n  else if (ammount &lt;= 20) return price * ammount * 0.9;\n\n  return price * ammount * 0.8;\n};\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',2),x=(0,s.Uk)("您突然响起了 Mr.Hope 说过的单行代码挑战，结合"),C=(0,s.Uk)("三元运算符"),k=(0,s.Uk)("，您又一次压缩了代码:"),F=(0,s.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const bookPrice = (price, ammount) =&gt;\n  ammount &lt; 10\n    ? price * ammount\n    : ammount &lt;= 20\n    ? price * ammount * 0.9\n    : price * ammount * 0.8;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>结合运算符顺序，您去掉了没用的括号，并将它写在一行:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const bookPrice = (price, ammount) =&gt;\n  ammount &lt; 10\n    ? price * ammount\n    : ammount &lt;= 20\n    ? price * ammount * 0.9\n    : price * ammount * 0.8;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>它太长了，为什么不把公共的 <code>price * ammount</code> 提取出来呢?</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const bookPrice = (price, ammount) =&gt;\n  price * ammount * (ammount &lt; 10 ? 1 : ammount &lt;= 20 ? 0.9 : 0.8);\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>我们也可以用更简洁的参数把它变得更短:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const bookPrice = (p, a) =&gt; p * a * (a &lt; 10 ? 1 : a &lt;= 20 ? 0.9 : 0.8);\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div> <a href="#footnote-ref2" class="footnote-backref">↩︎</a>',9),w={id:"footnote3",class:"footnote-item"},y=(0,s._)("p",null,"答案",-1),U=(0,s._)("p",null,"我们最简单的想法就是将想要统计 element 与数组的每一个 x 进行比较，如果匹配默默的记一个数，当全部比较完成后返回这个数。",-1),q=(0,s._)("p",null,"用流程图就是:",-1),M=(0,s._)("p",null,[(0,s.Uk)("接下来，我们就要细化了。我们希望循环数组，从第一个元素 "),(0,s._)("code",null,"arr[0]"),(0,s.Uk)(" 到 最后一个元素。")],-1),T=(0,s._)("p",null,[(0,s.Uk)("回忆一下，如果数组有 "),(0,s._)("span",{class:"katex"},[(0,s._)("span",{class:"katex-mathml"},[(0,s._)("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[(0,s._)("semantics",null,[(0,s._)("mrow",null,[(0,s._)("mi",null,"x")]),(0,s._)("annotation",{encoding:"application/x-tex"},"x")])])]),(0,s._)("span",{class:"katex-html","aria-hidden":"true"},[(0,s._)("span",{class:"base"},[(0,s._)("span",{class:"strut",style:{height:"0.4306em"}}),(0,s._)("span",{class:"mord mathnormal"},"x")])])]),(0,s.Uk)(" 个元素，那么数组的索引值是 "),(0,s._)("span",{class:"katex"},[(0,s._)("span",{class:"katex-mathml"},[(0,s._)("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[(0,s._)("semantics",null,[(0,s._)("mrow",null,[(0,s._)("mn",null,"0")]),(0,s._)("annotation",{encoding:"application/x-tex"},"0")])])]),(0,s._)("span",{class:"katex-html","aria-hidden":"true"},[(0,s._)("span",{class:"base"},[(0,s._)("span",{class:"strut",style:{height:"0.6444em"}}),(0,s._)("span",{class:"mord"},"0")])])]),(0,s.Uk)(" 到 "),(0,s._)("span",{class:"katex"},[(0,s._)("span",{class:"katex-mathml"},[(0,s._)("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[(0,s._)("semantics",null,[(0,s._)("mrow",null,[(0,s._)("mi",null,"x"),(0,s._)("mo",null,"−"),(0,s._)("mn",null,"1")]),(0,s._)("annotation",{encoding:"application/x-tex"},"x - 1")])])]),(0,s._)("span",{class:"katex-html","aria-hidden":"true"},[(0,s._)("span",{class:"base"},[(0,s._)("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),(0,s._)("span",{class:"mord mathnormal"},"x"),(0,s._)("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),(0,s._)("span",{class:"mbin"},"−"),(0,s._)("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),(0,s._)("span",{class:"base"},[(0,s._)("span",{class:"strut",style:{height:"0.6444em"}}),(0,s._)("span",{class:"mord"},"1")])])]),(0,s.Uk)("。所以最后一个元素是 "),(0,s._)("code",null,"arr[arr.length - 1]"),(0,s.Uk)("。")],-1),N=(0,s._)("p",null,[(0,s.Uk)("我们只需要创建一个变量 i，让它从 0 循环到 "),(0,s._)("code",null,"arr.length - 1"),(0,s.Uk)(" 即可，这样我们就可以在每次循环中通过访问 "),(0,s._)("code",null,"arr[i]"),(0,s.Uk)(" 来依次访问数组的每一个元素了。")],-1),P=(0,s._)("p",null,"所以新的流程图是:",-1),W=(0,s.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const getTimes = (arr, element) =&gt; {\n  let count = 0;\n  let i = 0;\n\n  while (i &lt;= arr.length - 1) {\n    if (element === arr[i]) count = count + 1;\n    i = i + 1;\n  }\n\n  return count;\n};\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>您想起了自加自减运算符，同时您发现由于 i 是整数，<code>i &lt;= arr.length - 1</code> 和 <code>i &lt; arr.length</code> 等价，于是您做了一些改动:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const getTimes = (arr, element) =&gt; {\n  let count = 0;\n  let i = 0;\n\n  while (i &lt; arr.length) {\n    if (element === arr[i]) count += 1;\n    i += 1;\n  }\n\n  return count;\n};\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>经验告诉您，用 for 循环体将循环变量的处理写在一起更好一些:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const getTimes = (arr, element) =&gt; {\n  let count = 0;\n\n  for (let i = 0; i &lt;= arr.length; i++) if (element === arr[i]) count++;\n\n  return count;\n};\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>单行挑战:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const getTimes = (a, e, c = 0) =&gt;\n  a.length === 0 ? c : getTimes(a, e, c + Number(a.pop() === e));\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const getTimes = (a, e, c = 0) =&gt;\n  a.length === 0 ? c : getTimes(a, e, c + (a.pop() === e ? 1 : 0));\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>思路:</p>',9),L=(0,s.uE)('<p>或</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const getTimes = (a, e, c = 0, p = 0) =&gt;\n  p === a.length ? c : getTimes(a, e, c + (a[p] === e ? 1 : 0), p + 1);\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const getTimes = (a, e, c = 0, p = 0) =&gt;\n  p === a.length ? c : getTimes(a, e, c + Number(a[p] === e), p + 1);\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>思路:</p>',4),Z=(0,s.Uk)(),z=(0,s._)("a",{href:"#footnote-ref3",class:"footnote-backref"},"↩︎",-1),J={id:"footnote4",class:"footnote-item"},S=(0,s._)("p",null,"答案",-1),H=(0,s._)("p",null,"思路:",-1),$=(0,s._)("p",null,[(0,s.Uk)("这个函数显然要用两层循环，设置第一个变量从 "),(0,s._)("span",{class:"katex"},[(0,s._)("span",{class:"katex-mathml"},[(0,s._)("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[(0,s._)("semantics",null,[(0,s._)("mrow",null,[(0,s._)("mn",null,"1")]),(0,s._)("annotation",{encoding:"application/x-tex"},"1")])])]),(0,s._)("span",{class:"katex-html","aria-hidden":"true"},[(0,s._)("span",{class:"base"},[(0,s._)("span",{class:"strut",style:{height:"0.6444em"}}),(0,s._)("span",{class:"mord"},"1")])])]),(0,s.Uk)(" 到 "),(0,s._)("span",{class:"katex"},[(0,s._)("span",{class:"katex-mathml"},[(0,s._)("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[(0,s._)("semantics",null,[(0,s._)("mrow",null,[(0,s._)("mn",null,"9")]),(0,s._)("annotation",{encoding:"application/x-tex"},"9")])])]),(0,s._)("span",{class:"katex-html","aria-hidden":"true"},[(0,s._)("span",{class:"base"},[(0,s._)("span",{class:"strut",style:{height:"0.6444em"}}),(0,s._)("span",{class:"mord"},"9")])])]),(0,s.Uk)(" 循环，在这个循环之中让第二个变量从 "),(0,s._)("span",{class:"katex"},[(0,s._)("span",{class:"katex-mathml"},[(0,s._)("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[(0,s._)("semantics",null,[(0,s._)("mrow",null,[(0,s._)("mn",null,"1")]),(0,s._)("annotation",{encoding:"application/x-tex"},"1")])])]),(0,s._)("span",{class:"katex-html","aria-hidden":"true"},[(0,s._)("span",{class:"base"},[(0,s._)("span",{class:"strut",style:{height:"0.6444em"}}),(0,s._)("span",{class:"mord"},"1")])])]),(0,s.Uk)(" 到 "),(0,s._)("code",null,"第一个变量"),(0,s.Uk)(" 循环。然后在每次循环中向数组新增一项对应的字符串。")],-1),R=(0,s._)("p",null,"流程图:",-1),O=(0,s.uE)('<p>所以很容易就可以写出:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>const nineNine = () =&gt; {\n  const arr = [];\n\n  for (let i = 1; i &lt;= 9; i++)\n    for (let j = 1; j &lt;= i; j++) arr.push(`${i} × ${j} = ${i * j}`);\n\n  return arr;\n};\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div> <a href="#footnote-ref4" class="footnote-backref">↩︎</a>',4),Y=(0,s._)("li",{id:"footnote5",class:"footnote-item"},[(0,s._)("p",null,"答案"),(0,s._)("p",null,[(0,s.Uk)("这道题真的很简单，就是把"),(0,s._)("a",{href:"#%E6%95%B0%E7%BB%84%E4%B8%AD%E7%89%B9%E5%AE%9A%E5%85%83%E7%B4%A0%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0"},"数组中特定元素出现次数"),(0,s.Uk)("中判断元素相等的表达式换成判断是否是数字就可以了。所以答案在此省略。 "),(0,s._)("a",{href:"#footnote-ref5",class:"footnote-backref"},"↩︎")])],-1),G={},I=(0,a(82831).Z)(G,[["render",function(e,n){const a=(0,s.up)("FlowChart"),G=(0,s.up)("RouterLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[t,(0,s.kq)(" more "),r,(0,s._)("section",l,[(0,s._)("ol",i,[(0,s._)("li",p,[c,u,o,(0,s.Wm)(a,{id:"flowchart-382ee242",code:"st%3D%3Estart%3A%20%E5%BC%80%E5%A7%8B%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%0Agetage%3D%3Einputoutput%3A%20%E8%8E%B7%E5%BE%97%20age%0Aadult%3D%3Econdition%3A%20age%20%3E%2018%3F%0Atrue%3D%3Einputoutput%3A%20return%20true%0Afalse%3D%3Einputoutput%3A%20return%20false%0Aend%3D%3Eend%3A%20%E7%BB%93%E6%9D%9F%0A%0Ast-%3Egetage-%3Eadult%0Aadult(yes)-%3Etrue-%3Eend%0Aadult(no)-%3Efalse-%3Eend%0A%0A",preset:"vue"}),E,(0,s._)("div",m,[(0,s._)("p",null,[(0,s.Wm)(G,{to:"/code/language/js/function/declare.html#return"},{default:(0,s.w5)((()=>[d])),_:1})])]),A]),(0,s._)("li",b,[g,B,h,v,f,(0,s.Wm)(a,{id:"flowchart-64a56f34",code:"st%3D%3Estart%3A%20%E5%BC%80%E5%A7%8B%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%0Apercent%3D%3Eoperation%3A%20%E5%A3%B0%E6%98%8E%E6%89%93%E6%8A%98%E5%8A%9B%E5%BA%A6%20percent%0Aresult%3D%3Eoperation%3A%20%E5%A3%B0%E6%98%8E%E6%9C%80%E7%BB%88%E4%BB%B7%E6%A0%BC%20result%0Aget%3D%3Einputoutput%3A%20%E8%8E%B7%E5%BE%97%20price%2C%20ammount%0Afunc1%3D%3Econdition%3A%20ammount%20%3C%2010%3F%0Ap1%3D%3Eoperation%3A%20percent%20%3D%201%0Afunc2%3D%3Econdition%3A%2010%20%3C%3D%20ammount%20%3C%2020%3F%0Ap0.9%3D%3Eoperation%3A%20percent%20%3D%200.9%0Afunc3%3D%3Econdition%3A%20ammount%20%3E%2020%3F%0Ap0.8%3D%3Eoperation%3A%20percent%20%3D%200.8%0Acal%3D%3Eoperation%3A%20result%20%3D%20price%20%C3%97%20ammount%20%C3%97%20percent%0Areturn%3D%3Einputoutput%3A%20%E8%BF%94%E5%9B%9E%20result%0Aend%3D%3Eend%3A%20%E7%BB%93%E6%9D%9F%0A%0Ast-%3Epercent-%3Eget-%3Efunc1%0Afunc1(yes%2Cright)-%3Ep1-%3Ecal%0Afunc1(no)-%3Efunc2%0Afunc2(yes%2Cright)-%3Ep0.9-%3Ecal%0Afunc2(no)-%3Efunc3%0Afunc3(yes%2Cright)-%3Ep0.8-%3Ecal%0Acal-%3Ereturn-%3Eend%0A",preset:"vue"}),_,(0,s.Wm)(a,{id:"flowchart-64a56eee",code:"st%3D%3Estart%3A%20%E5%BC%80%E5%A7%8B%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%0Apercent%3D%3Eoperation%3A%20%E5%A3%B0%E6%98%8E%E6%89%93%E6%8A%98%E5%8A%9B%E5%BA%A6%20percent%0Aget%3D%3Einputoutput%3A%20%E8%8E%B7%E5%BE%97%20price%2C%20ammount%0Afunc1%3D%3Econdition%3A%20ammount%20%3C%2010%3F%0Ap1%3D%3Eoperation%3A%20percent%20%3D%201%0Afunc2%3D%3Econdition%3A%20ammount%20%3C%2020%3F%0Ap0.9%3D%3Eoperation%3A%20percent%20%3D%200.9%0Ap0.8%3D%3Eoperation%3A%20percent%20%3D%200.8%0Areturn%3D%3Einputoutput%3A%20%E8%BF%94%E5%9B%9E%20price%20%C3%97%20ammount%20%C3%97%20percent%0Aend%3D%3Eend%3A%20%E7%BB%93%E6%9D%9F%0A%0Ast-%3Epercent-%3Eget-%3Efunc1%0Afunc1(yes%2Cright)-%3Ep1-%3Ereturn%0Afunc1(no)-%3Efunc2%0Afunc2(yes%2Cright)-%3Ep0.9-%3Ereturn%0Afunc2(no)-%3Ep0.8-%3Ereturn%0Areturn-%3Eend%0A",preset:"vue"}),D,(0,s.Wm)(a,{id:"flowchart-64a56eb4",code:"st%3D%3Estart%3A%20%E5%BC%80%E5%A7%8B%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%0Aget%3D%3Einputoutput%3A%20%E8%8E%B7%E5%BE%97%20price%2C%20ammount%0Afunc1%3D%3Econdition%3A%20ammount%20%3C%2010%3F%0Afunc2%3D%3Econdition%3A%20ammount%20%3C%2020%3F%0Areturn1%3D%3Einputoutput%3A%20price%20%C3%97%20ammount%20%C3%97%201%0Areturn2%3D%3Einputoutput%3A%20price%20%C3%97%20ammount%20%C3%97%200.9%0Areturn3%3D%3Einputoutput%3A%20price%20%C3%97%20ammount%20%C3%97%200.8%0Aend%3D%3Eend%3A%20%E7%BB%93%E6%9D%9F%0A%0Ast-%3Eget-%3Efunc1%0Afunc1(yes%2Cright)-%3Ereturn1-%3Eend%0Afunc1(no)-%3Efunc2%0Afunc2(yes%2Cright)-%3Ereturn2-%3Eend%0Afunc2(no)-%3Ereturn3-%3Eend%0A",preset:"vue"}),j,(0,s._)("p",null,[x,(0,s.Wm)(G,{to:"/code/language/js/guide/condition.html#%E4%B8%89%E5%85%83%E8%BF%90%E7%AE%97%E7%AC%A6"},{default:(0,s.w5)((()=>[C])),_:1}),k]),F]),(0,s._)("li",w,[y,U,q,(0,s.Wm)(a,{id:"flowchart-64a568de",code:"st%3D%3Estart%3A%20%E5%BC%80%E5%A7%8B%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%0Aget%3D%3Einputoutput%3A%20%E8%8E%B7%E5%BE%97%20arr%2C%20element%0Aletcount%3D%3Eoperation%3A%20%E5%A3%B0%E6%98%8E%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%20count%20%3D%200%0Agetfirst%3D%3Eoperation%3A%20%E5%BE%AA%E7%8E%AF%E6%95%B0%E7%BB%84%EF%BC%8C%E5%BE%97%E5%88%B0%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%20x%0Aequal%3D%3Econdition%3A%20element%20%3D%3D%3D%20x%3F%0Aaddcount%3D%3Eoperation%3A%20count%20%3D%20count%20%2B%201%0Aequal%3D%3Econdition%3A%20element%20%3D%3D%3D%20x%3F%0Aislast%3D%3Econdition%3A%20x%20%E6%98%AF%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E4%B9%88%3F%0Amovex%3D%3Eoperation%3A%20%E8%AE%A9%20x%20%E6%88%90%E4%B8%BA%E4%B8%8B%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%0Areturn%3D%3Einputoutput%3A%20%E8%BF%94%E5%9B%9E%20count%0Aend%3D%3Eend%3A%20%E7%BB%93%E6%9D%9F%0A%0Ast-%3Eget-%3Eletcount-%3Egetfirst-%3Eequal%0Aequal(yes)-%3Eaddcount-%3Eislast%0Aequal(no)-%3Eislast%0Aislast(yes)-%3Ereturn-%3Eend%0Aislast(no)-%3Emovex(top)-%3Eequal%0A",preset:"vue"}),M,T,N,P,(0,s.Wm)(a,{id:"flowchart-64a56870",code:"st%3D%3Estart%3A%20%E5%BC%80%E5%A7%8B%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%0Aget%3D%3Einputoutput%3A%20%E8%8E%B7%E5%BE%97%20arr%2C%20element%0Aletcount%3D%3Eoperation%3A%20%E5%A3%B0%E6%98%8E%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%20count%20%3D%200%0Aleti%3D%3Eoperation%3A%20%E5%A3%B0%E6%98%8E%E5%BE%AA%E7%8E%AF%E5%8F%98%E9%87%8F%20i%20%3D%200%0Aequal%3D%3Econdition%3A%20element%20%3D%3D%3D%20arr%5Bi%5D%3F%0Aaddcount%3D%3Eoperation%3A%20count%20%3D%20count%20%2B%201%0Aequal%3D%3Econdition%3A%20element%20%3D%3D%3D%20x%3F%0Aislast%3D%3Econdition%3A%20i%20%3C%3D%20arr.length%20-%201%3F%0Amovex%3D%3Eoperation%3A%20i%20%3D%20i%20%2B%201%0Areturn%3D%3Einputoutput%3A%20%E8%BF%94%E5%9B%9E%20count%0Aend%3D%3Eend%3A%20%E7%BB%93%E6%9D%9F%0A%0Ast-%3Eget-%3Eletcount-%3Eleti-%3Eequal%0Aequal(yes%2Cleft)-%3Eaddcount-%3Eislast%0Aequal(no)-%3Eislast%0Aislast(yes)-%3Ereturn-%3Eend%0Aislast(no)-%3Emovex(top)-%3Eequal%0A",preset:"vue"}),W,(0,s.Wm)(a,{id:"flowchart-64a56822",code:"start%3D%3Estart%3A%20%E5%BC%80%E5%A7%8B%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%0Aget%3D%3Einputoutput%3A%20%E8%8E%B7%E5%BE%97%20arr%2C%20element%2C%20count(%E9%BB%98%E8%AE%A4%E4%B8%BA%200)%0Aequal%3D%3Econdition%3A%20%E6%95%B0%E7%BB%84%E9%95%BF%E5%BA%A6%E6%98%AF%200%3F%0Areturn%3D%3Einputoutput%3A%20%E8%BF%94%E5%9B%9E%20count%0Aoperate%3D%3Eoperation%3A%20%E4%BC%A0%E5%85%A5%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E4%B8%BA%20arr%0A%E4%BC%A0%E5%85%A5%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%8F%82%E6%95%B0%E4%B8%BA%20element%0A%E4%BC%A0%E5%85%A5%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%8F%82%E6%95%B0%E4%B8%BA%20count%20%2B%20Number(a.pop()%20%3D%3D%3D%20e))%0A(%E8%BF%99%E8%BF%98%E4%BC%9A%E5%90%8C%E6%97%B6%E6%8A%8A%20arr%20%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0%E5%88%A0%E6%8E%89)%0Areturnfunc%3D%3Esubroutine%3A%20%E5%B0%86%E6%96%B0%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E5%85%A5%E6%9C%AC%E5%87%BD%E6%95%B0%E5%B9%B6%E8%BF%94%E5%9B%9E%E8%BF%99%E4%B8%AA%E5%87%BD%E6%95%B0%0Aend%3D%3Eend%3A%20%E7%BB%93%E6%9D%9F%0A%0Astart-%3Eget-%3Eequal%0Aequal(yes)-%3Ereturn-%3Eend%0Aequal(no)-%3Eoperate-%3Ereturnfunc(left)%0A",preset:"vue"}),L,(0,s.Wm)(a,{id:"flowchart-64a567e6",code:"start%3D%3Estart%3A%20%E5%BC%80%E5%A7%8B%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%0Aget%3D%3Einputoutput%3A%20%E8%8E%B7%E5%BE%97%20arr%2C%20element%2C%20count(%E9%BB%98%E8%AE%A4%E4%B8%BA%200)%2Cposition(%E9%BB%98%E8%AE%A4%E4%B8%BA%200)%0Aequal%3D%3Econdition%3A%20position%20%3D%3D%3D%20arr.length%3F%0Areturn%3D%3Einputoutput%3A%20%E8%BF%94%E5%9B%9E%20count%0Aoperate%3D%3Eoperation%3A%20%E4%BC%A0%E5%85%A5%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0%E4%B8%BA%20arr%0A%E4%BC%A0%E5%85%A5%E7%AC%AC%E4%BA%8C%E4%B8%AA%E5%8F%82%E6%95%B0%E4%B8%BA%20element%0A%E4%BC%A0%E5%85%A5%E7%AC%AC%E4%B8%89%E4%B8%AA%E5%8F%82%E6%95%B0%E4%B8%BA%20count%20%2B%20(a%5Bp%5D%20%3D%3D%3D%20e%20%3F%201%20%3A%200)%0A%E4%BC%A0%E5%85%A5%E7%AC%AC%E5%9B%9B%E4%B8%AA%E5%8F%82%E6%95%B0%E4%B8%BA%20position%20%2B%201%0Areturnfunc%3D%3Esubroutine%3A%20%E5%B0%86%E6%96%B0%E7%9A%84%E5%8F%82%E6%95%B0%E4%BC%A0%E5%85%A5%E6%9C%AC%E5%87%BD%E6%95%B0%E5%B9%B6%E8%BF%94%E5%9B%9E%E8%BF%99%E4%B8%AA%E5%87%BD%E6%95%B0%0Aend%3D%3Eend%3A%20%E7%BB%93%E6%9D%9F%0A%0Astart-%3Eget-%3Eequal%0Aequal(yes)-%3Ereturn-%3Eend%0Aequal(no)-%3Eoperate-%3Ereturnfunc(left)%0A",preset:"vue"}),Z,z]),(0,s._)("li",J,[S,H,$,R,(0,s.Wm)(a,{id:"flowchart-64a56772",code:"start%3D%3Estart%3A%20%E5%BC%80%E5%A7%8B%E6%89%A7%E8%A1%8C%E5%87%BD%E6%95%B0%0Aoperate%3D%3Eoperation%3A%20let%20arr%20%3D%20%5B%5D%3B%0Alet%20i%20%3D%201%3B%0Ainitj%3D%3Eoperation%3A%20let%20j%20%3D%201%3B%0Apush%3D%3Eoperation%3A%20%E5%90%91%E6%95%B0%E7%BB%84%E8%BE%93%E5%85%A5%E5%B0%8F%E4%B9%9D%E4%B9%9D%0Aarr.push(%60%24%7Bi%7D%20%C3%97%20%24%7Bj%7D%20%3D%20%24%7Bi%20*%20j%7D%60)%3B%0Aji%3D%3Econdition%3A%20j%20%3C%3D%20i%3F%0Aplusj%3D%3Eoperation%3A%20j%2B%2B%0Ai9%3D%3Econdition%3A%20i%20%3C%3D%209%3F%0Aplusi%3D%3Eoperation%3A%20i%2B%2B%0Areturn%3D%3Einputoutput%3A%20%E8%BF%94%E5%9B%9E%20arr%0Aend%3D%3Eend%3A%20%E7%BB%93%E6%9D%9F%0A%0Astart-%3Eoperate-%3Einitj-%3Epush-%3Eji%0Aji(yes%2Cright)-%3Eplusj(top)-%3Epush%0Aji(no)-%3Ei9%0Ai9(yes)-%3Eplusi(left)-%3Einitj%0Ai9(no)-%3Ereturn-%3Eend%0A",preset:"vue"}),O]),Y])])],64)}]])},82831:(e,n)=>{n.Z=(e,n)=>{const a=e.__vccOpts||e;for(const[e,s]of n)a[e]=s;return a}},21714:(e,n,a)=>{a.r(n),a.d(n,{data:()=>s});const s={key:"v-58215d54",path:"/code/language/js/guide/exercise.html",title:"实战",lang:"zh-CN",frontmatter:{title:"实战",icon:"exercise",date:"2019-09-18T00:00:00.000Z",category:["JavaScript"],tag:["快速上手"],summary:"在初步进入 JavaScript 的世界后，实战是十分重要的。本章是一些经典的案例，可以进行总结与测试。\n",head:[["meta",{property:"og:url",content:"https://mrhope.site/code/language/js/guide/exercise.html"}],["meta",{property:"og:site_name",content:"Mr.Hope"}],["meta",{property:"og:title",content:"实战"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:updated_time",content:"2022-02-06T16:46:58.000Z"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{property:"article:tag",content:"快速上手"}],["meta",{property:"article:published_time",content:"2019-09-18T00:00:00.000Z"}],["meta",{property:"article:modified_time",content:"2022-02-06T16:46:58.000Z"}]]},excerpt:"<p>在初步进入 JavaScript 的世界后，实战是十分重要的。本章是一些经典的案例，可以进行总结与测试。</p>\n",headers:[{level:2,title:"成年判断",slug:"成年判断",children:[]},{level:2,title:"买书",slug:"买书",children:[]},{level:2,title:"数组中特定元素出现次数",slug:"数组中特定元素出现次数",children:[]},{level:2,title:"小九九",slug:"小九九",children:[]},{level:2,title:"扩展",slug:"扩展",children:[]}],git:{createdTime:1591204114e3,updatedTime:1644166018e3,contributors:[{name:"Mr.Hope",email:"zhangbowang1998@gmail.com",commits:11}]},readingTime:{minutes:9.02,words:2705},filePathRelative:"code/language/js/guide/exercise.md"}}}]);