"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[58721],{27992:(n,e,a)=>{a.r(e),a.d(e,{default:()=>p});var s=a(34086);const r=(0,s.uE)('<h2 id="wx-for" tabindex="-1"><a class="header-anchor" href="#wx-for" aria-hidden="true">#</a> wx:for</h2><p>在组件上使用 <code>wx:for</code> 控制属性绑定一个数组，即可使用数组中各项的数据重复渲染该组件。</p><p>默认数组的当前项的下标变量名默认为 <code>index</code>，数组当前项的变量名默认为 <code>item</code></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view wx:for=&quot;{{array}}&quot;&gt;\n  {{index}}: {{item.message}}\n&lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Page({\n  data: {\n    array: [\n      {\n        message: &quot;foo&quot;,\n      },\n      {\n        message: &quot;bar&quot;,\n      },\n    ],\n  },\n});\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>使用 <code>wx:for-item</code> 可以指定数组当前元素的变量名，</p><p>使用 <code>wx:for-index</code> 可以指定数组当前下标的变量名:</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view wx:for=&quot;{{array}}&quot; wx:for-index=&quot;idx&quot; wx:for-item=&quot;itemName&quot;&gt;\n  {{idx}}: {{itemName.message}}\n&lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>wx:for</code> 也可以嵌套，下边是一个九九乘法表</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view wx:for=&quot;{{[1, 2, 3, 4, 5, 6, 7, 8, 9]}}&quot; wx:for-item=&quot;i&quot;&gt;\n  &lt;view wx:for=&quot;{{[1, 2, 3, 4, 5, 6, 7, 8, 9]}}&quot; wx:for-item=&quot;j&quot;&gt;\n    &lt;view wx:if=&quot;{{i &lt;= j}}&quot;&gt;\n      {{i}} * {{j}} = {{i * j}}\n    &lt;/view&gt;\n  &lt;/view&gt;\n&lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="block-wx-for" tabindex="-1"><a class="header-anchor" href="#block-wx-for" aria-hidden="true">#</a> block wx:for</h2><p>类似 <code>block wx:if</code>，也可以将 <code>wx:for</code> 用在 <code>&lt;block /&gt;</code> 标签上，以渲染一个包含多节点的结构块。例如:</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;block wx:for=&quot;{{[1, 2, 3]}}&quot;&gt;\n  &lt;view&gt; {{index}}: &lt;/view&gt;\n  &lt;view&gt; {{item}} &lt;/view&gt;\n&lt;/block&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="wx-key" tabindex="-1"><a class="header-anchor" href="#wx-key" aria-hidden="true">#</a> wx:key</h2><p>如果列表中项目的位置会动态改变或者有新的项目添加到列表中，并且希望列表中的项目保持自己的特征和状态(如 input 中的输入内容，switch 的选中状态)，需要使用 <code>wx:key</code> 来指定列表中项目的唯一的标识符。</p><p><code>wx:key</code> 的值以两种形式提供</p><ol><li>字符串，代表在 <code>for</code> 循环的 <code>array</code> 中 <code>item</code> 的某个 <code>property</code>，该 <code>property</code> 的值需要是列表中唯一的字符串或数字，且不能动态改变。</li><li>保留关键字 <code>*this</code> 代表在 <code>for</code> 循环中的 <code>item</code> 本身，这种表示需要 <code>item</code> 本身是一个唯一的字符串或者数字.</li></ol><p>当数据改变触发渲染层重新渲染的时候，会校正带有 <code>key</code> 的组件，框架会确保他们被重新排序，而不是重新创建，以确保使组件保持自身的状态，并且提高列表渲染时的效率。</p><p>如不提供 <code>wx:key</code>，会报一个 warning， 如果明确知道该列表是静态，或者不必关注其顺序，可以选择忽略。</p><p>示例代码:</p>',20),l={href:"https://developers.weixin.qq.com/s/tpg5tKmv6kZt",target:"_blank",rel:"noopener noreferrer"},t=(0,s.Uk)("在开发者工具中预览效果"),i=(0,s.uE)('<div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;switch wx:for=&quot;{{objectArray}}&quot; wx:key=&quot;unique&quot; style=&quot;display: block;&quot;&gt; {{item.id}} &lt;/switch&gt;\n&lt;button bindtap=&quot;switch&quot;&gt; Switch &lt;/button&gt;\n&lt;button bindtap=&quot;addToFront&quot;&gt; Add to the front &lt;/button&gt;\n\n&lt;switch wx:for=&quot;{{numberArray}}&quot; wx:key=&quot;*this&quot; style=&quot;display: block;&quot;&gt; {{item}} &lt;/switch&gt;\n&lt;button bindtap=&quot;addNumberToFront&quot;&gt; Add to the front &lt;/button&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Page({\n  data: {\n    objectArray: [\n      { id: 5, unique: &quot;unique_5&quot; },\n      { id: 4, unique: &quot;unique_4&quot; },\n      { id: 3, unique: &quot;unique_3&quot; },\n      { id: 2, unique: &quot;unique_2&quot; },\n      { id: 1, unique: &quot;unique_1&quot; },\n      { id: 0, unique: &quot;unique_0&quot; },\n    ],\n    numberArray: [1, 2, 3, 4],\n  },\n  switch(e) {\n    const length = this.data.objectArray.length;\n\n    for (let i = 0; i &lt; length; ++i) {\n      const x = Math.floor(Math.random() * length);\n      const y = Math.floor(Math.random() * length);\n      const temp = this.data.objectArray[x];\n\n      this.data.objectArray[x] = this.data.objectArray[y];\n      this.data.objectArray[y] = temp;\n    }\n\n    this.setData({\n      objectArray: this.data.objectArray,\n    });\n  },\n  addToFront(e) {\n    const length = this.data.objectArray.length;\n\n    this.data.objectArray = [{ id: length, unique: `unique_${length}` }].concat(\n      this.data.objectArray\n    );\n    this.setData({\n      objectArray: this.data.objectArray,\n    });\n  },\n  addNumberToFront(e) {\n    this.data.numberArray = [this.data.numberArray.length + 1].concat(\n      this.data.numberArray\n    );\n    this.setData({\n      numberArray: this.data.numberArray,\n    });\n  },\n});\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>当 <code>wx:for</code> 的值为字符串时，会将字符串解析成字符串数组</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view wx:for=&quot;array&quot;&gt;\n  {{item}}\n&lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>等同于</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view wx:for=&quot;{{[&#39;a&#39;,&#39;r&#39;,&#39;r&#39;,&#39;a&#39;,&#39;y&#39;]}}&quot;&gt;\n  {{item}}\n&lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>花括号和引号之间如果有空格，将最终被解析成为字符串</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view wx:for=&quot;{{[1,2,3]}} &quot;&gt;\n  {{item}}\n&lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>等同于</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view wx:for=&quot;{{[1,2,3] + &#39; &#39;}}&quot; &gt;\n  {{item}}\n&lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div>',4),o={},p=(0,a(82831).Z)(o,[["render",function(n,e){const a=(0,s.up)("ExternalLinkIcon");return(0,s.wg)(),(0,s.iD)(s.HY,null,[r,(0,s._)("p",null,[(0,s._)("a",l,[t,(0,s.Wm)(a)])]),i],64)}]])},82831:(n,e)=>{e.Z=(n,e)=>{const a=n.__vccOpts||n;for(const[n,s]of e)a[n]=s;return a}},8250:(n,e,a)=>{a.r(e),a.d(e,{data:()=>s});const s={key:"v-4adb0560",path:"/code/mini-app/guide/view/list-render.html",title:"列表渲染",lang:"zh-CN",frontmatter:{title:"列表渲染",icon:"loop",category:["小程序"],summary:"wx:for 在组件上使用 wx:for 控制属性绑定一个数组，即可使用数组中各项的数据重复渲染该组件。 默认数组的当前项的下标变量名默认为 index，数组当前项的变量名默认为 item 使用 wx:for-item 可以指定数组当前元素的变量名， 使用 wx:for-index 可以指定数组当前下标的变量名: wx:for 也可以嵌套，下边是一个九九乘法",head:[["meta",{property:"og:url",content:"https://mrhope.site/code/mini-app/guide/view/list-render.html"}],["meta",{property:"og:site_name",content:"Mr.Hope"}],["meta",{property:"og:title",content:"列表渲染"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:updated_time",content:"2021-01-20T11:45:00.000Z"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{property:"article:modified_time",content:"2021-01-20T11:45:00.000Z"}]]},excerpt:"",headers:[{level:2,title:"wx:for",slug:"wx-for",children:[]},{level:2,title:"block wx:for",slug:"block-wx-for",children:[]},{level:2,title:"wx:key",slug:"wx-key",children:[]}],git:{createdTime:1611033126e3,updatedTime:16111431e5,contributors:[{name:"Mr.Hope",email:"zhangbowang1998@gmail.com",commits:2}]},readingTime:{minutes:2.7,words:810},filePathRelative:"code/mini-app/guide/view/list-render.md"}}}]);