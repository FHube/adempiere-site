"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[22966],{17566:(e,a,n)=>{n.r(a),n.d(a,{default:()=>t});var s=n(34086);const l=(0,s._)("p",null,[(0,s.Uk)("WXML 中的动态数据均来自对应 "),(0,s._)("code",null,"Page"),(0,s.Uk)(" 的 "),(0,s._)("code",null,"data"),(0,s.Uk)("。")],-1),r=(0,s.uE)('<h2 id="简单绑定" tabindex="-1"><a class="header-anchor" href="#简单绑定" aria-hidden="true">#</a> 简单绑定</h2><p>数据绑定使用 Mustache 语法(双大括号)将变量包起来，可以作用于:</p><h3 id="内容" tabindex="-1"><a class="header-anchor" href="#内容" aria-hidden="true">#</a> 内容</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view&gt; {{ message }} &lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Page({\n  data: {\n    message: &quot;Hello MINA!&quot;,\n  },\n});\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="组件属性-需要在双引号之内" tabindex="-1"><a class="header-anchor" href="#组件属性-需要在双引号之内" aria-hidden="true">#</a> 组件属性(需要在双引号之内)</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view id=&quot;item-{{id}}&quot;&gt; &lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Page({\n  data: {\n    id: 0,\n  },\n});\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="控制属性-需要在双引号之内" tabindex="-1"><a class="header-anchor" href="#控制属性-需要在双引号之内" aria-hidden="true">#</a> 控制属性(需要在双引号之内)</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view wx:if=&quot;{{condition}}&quot;&gt; &lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Page({\n  data: {\n    condition: true,\n  },\n});\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="关键字-需要在双引号之内" tabindex="-1"><a class="header-anchor" href="#关键字-需要在双引号之内" aria-hidden="true">#</a> 关键字(需要在双引号之内)</h3><ul><li><p><code>true</code>: <code>boolean</code> 类型的 <code>true</code>，代表真值。</p></li><li><p><code>false</code>: <code>boolean</code> 类型的 <code>false</code>，代表假值。</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>&lt;checkbox checked=&quot;{{false}}&quot;&gt; &lt;/checkbox&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="custom-container danger"><p class="custom-container-title">警告</p><p>不要直接写 <code>checked=&quot;false&quot;</code>，其计算结果是一个字符串，转成 <code>boolean</code> 类型后代表真值。</p></div><h2 id="运算" tabindex="-1"><a class="header-anchor" href="#运算" aria-hidden="true">#</a> 运算</h2>',16),i=(0,s._)("div",null,[(0,s._)("p",null,[(0,s.Uk)("可以在 "),(0,s._)("code",{"v-pre":""},"{{ }}"),(0,s.Uk)(" 内进行简单的运算，支持的有如下几种方式:")])],-1),d=(0,s.uE)('<h3 id="三元运算" tabindex="-1"><a class="header-anchor" href="#三元运算" aria-hidden="true">#</a> 三元运算</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view hidden=&quot;{{flag ? true : false}}&quot;&gt; Hidden &lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="算数运算" tabindex="-1"><a class="header-anchor" href="#算数运算" aria-hidden="true">#</a> 算数运算</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view&gt; {{a + b}} + {{c}} + d &lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Page({\n  data: {\n    a: 1,\n    b: 2,\n    c: 3,\n  },\n});\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>view</code> 中的内容为 <code>3 + 3 + d</code>。</p><h3 id="逻辑判断" tabindex="-1"><a class="header-anchor" href="#逻辑判断" aria-hidden="true">#</a> 逻辑判断</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view wx:if=&quot;{{length &gt; 5}}&quot;&gt; &lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="字符串运算" tabindex="-1"><a class="header-anchor" href="#字符串运算" aria-hidden="true">#</a> 字符串运算</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view&gt;{{&quot;hello&quot; + name}}&lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Page({\n  data: {\n    name: &quot;MINA&quot;,\n  },\n});\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="数据路径运算" tabindex="-1"><a class="header-anchor" href="#数据路径运算" aria-hidden="true">#</a> 数据路径运算</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view&gt;{{object.key}} {{array[0]}}&lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Page({\n  data: {\n    object: {\n      key: &quot;Hello &quot;,\n    },\n    array: [&quot;MINA&quot;],\n  },\n});\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="组合" tabindex="-1"><a class="header-anchor" href="#组合" aria-hidden="true">#</a> 组合</h2><p>也可以在 Mustache 内直接进行组合，构成新的对象或者数组。</p><h3 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view wx:for=&quot;{{[zero, 1, 2, 3, 4]}}&quot;&gt; {{item}} &lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Page({\n  data: {\n    zero: 0,\n  },\n});\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>最终组合成数组 <code>[0, 1, 2, 3, 4]</code>。</p><h3 id="对象" tabindex="-1"><a class="header-anchor" href="#对象" aria-hidden="true">#</a> 对象</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;template is=&quot;objectCombine&quot; data=&quot;{{for: a, bar: b}}&quot;&gt;&lt;/template&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Page({\n  data: {\n    a: 1,\n    b: 2,\n  },\n});\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>最终组合成的对象是 <code>{for: 1, bar: 2}</code></p><p>也可以用扩展运算符 <code>...</code> 来将一个对象展开</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;template is=&quot;objectCombine&quot; data=&quot;{{...obj1, ...obj2, e: 5}}&quot;&gt;&lt;/template&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Page({\n  data: {\n    obj1: {\n      a: 1,\n      b: 2,\n    },\n    obj2: {\n      c: 3,\n      d: 4,\n    },\n  },\n});\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>最终组合成的对象是 <code>{a: 1, b: 2, c: 3, d: 4, e: 5}</code>。</p><p>如果对象的 <code>key</code> 和 <code>value</code> 相同，也可以间接地表达。</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;template is=&quot;objectCombine&quot; data=&quot;{{foo, bar}}&quot;&gt;&lt;/template&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Page({\n  data: {\n    foo: &quot;my-foo&quot;,\n    bar: &quot;my-bar&quot;,\n  },\n});\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>最终组合成的对象是 <code>{foo: &#39;my-foo&#39;, bar:&#39;my-bar&#39;}</code>。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>上述方式可以随意组合，但是如有存在变量名相同的情况，后边的会覆盖前面，如:</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;template is=&quot;objectCombine&quot; data=&quot;{{...obj1, ...obj2, a, c: 6}}&quot;&gt;&lt;/template&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Page({\n  data: {\n    obj1: {\n      a: 1,\n      b: 2,\n    },\n    obj2: {\n      b: 3,\n      c: 4,\n    },\n    a: 5,\n  },\n});\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>最终组合成的对象是 <code>{a: 5, b: 3, c: 6}</code>。</p></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>花括号和引号之间如果有空格，将最终被解析成为字符串</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view wx:for=&quot;{{[1,2,3]}} &quot;&gt;\n  {{item}}\n&lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>等同于</p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code>&lt;view wx:for=&quot;{{[1,2,3] + &#39; &#39;}}&quot;&gt;\n  {{item}}\n&lt;/view&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></div>',34),c={},t=(0,n(82831).Z)(c,[["render",function(e,a){return(0,s.wg)(),(0,s.iD)(s.HY,null,[l,(0,s.kq)(" more "),r,i,d],64)}]])},82831:(e,a)=>{a.Z=(e,a)=>{const n=e.__vccOpts||e;for(const[e,s]of a)n[e]=s;return n}},68566:(e,a,n)=>{n.r(a),n.d(a,{data:()=>s});const s={key:"v-01fc8b56",path:"/code/mini-app/guide/view/data-bind.html",title:"数据绑定",lang:"zh-CN",frontmatter:{title:"数据绑定",icon:"rank",category:["小程序"],summary:"WXML 中的动态数据均来自对应 Page 的 data。\n",head:[["meta",{property:"og:url",content:"https://mrhope.site/code/mini-app/guide/view/data-bind.html"}],["meta",{property:"og:site_name",content:"Mr.Hope"}],["meta",{property:"og:title",content:"数据绑定"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:updated_time",content:"2021-01-20T11:45:00.000Z"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{property:"article:modified_time",content:"2021-01-20T11:45:00.000Z"}]]},excerpt:"<p>WXML 中的动态数据均来自对应 <code v-pre>Page</code> 的 <code v-pre>data</code>。</p>\n",headers:[{level:2,title:"简单绑定",slug:"简单绑定",children:[{level:3,title:"内容",slug:"内容",children:[]},{level:3,title:"组件属性(需要在双引号之内)",slug:"组件属性-需要在双引号之内",children:[]},{level:3,title:"控制属性(需要在双引号之内)",slug:"控制属性-需要在双引号之内",children:[]},{level:3,title:"关键字(需要在双引号之内)",slug:"关键字-需要在双引号之内",children:[]}]},{level:2,title:"运算",slug:"运算",children:[{level:3,title:"三元运算",slug:"三元运算",children:[]},{level:3,title:"算数运算",slug:"算数运算",children:[]},{level:3,title:"逻辑判断",slug:"逻辑判断",children:[]},{level:3,title:"字符串运算",slug:"字符串运算",children:[]},{level:3,title:"数据路径运算",slug:"数据路径运算",children:[]}]},{level:2,title:"组合",slug:"组合",children:[{level:3,title:"数组",slug:"数组",children:[]},{level:3,title:"对象",slug:"对象",children:[]}]}],git:{createdTime:1611033126e3,updatedTime:16111431e5,contributors:[{name:"Mr.Hope",email:"zhangbowang1998@gmail.com",commits:3}]},readingTime:{minutes:2.05,words:615},filePathRelative:"code/mini-app/guide/view/data-bind.md"}}}]);