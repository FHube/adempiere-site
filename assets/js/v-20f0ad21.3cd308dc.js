"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[20011],{34301:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const t=(0,a(66252).uE)('<p>本文介绍 CSS 的一些最基本的概念: 层叠、优先级和继承。</p><h2 id="冲突规则" tabindex="-1"><a class="header-anchor" href="#冲突规则" aria-hidden="true">#</a> 冲突规则</h2><p>CSS 代表层叠样式表，我们需要理解第一个词 cascading。</p><p><strong>Cascade</strong>, 和它密切相关的概念是 <strong>Specificity</strong>，决定在发生冲突的时候应该使用哪条规则。</p><p>这里也有继承的概念，也就是在默认情况下，一些 CSS 属性继承当前元素的父元素上设置的值，有些则不继承。这也可能导致一些和期望不同的结果。</p><h3 id="层叠" tabindex="-1"><a class="header-anchor" href="#层叠" aria-hidden="true">#</a> 层叠</h3><p>Style sheets cascade(样式表层叠) 决定了 CSS 规则的顺序很重要。</p><p>当应用两条同级别的规则到一个元素的时候，写在后面的就是实际使用的规则。</p><p><strong>案例</strong>: 我们有两个关于 <code>h1</code> 的规则。这些规则有相同的优先级，顺序在最后的生效，所以 <code>h1</code> 最后显示为蓝色。</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Mr.Hope is handsome!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">h1</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">h1</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="优先级" tabindex="-1"><a class="header-anchor" href="#优先级" aria-hidden="true">#</a> 优先级</h3><p>浏览器是根据优先级来决定当多个规则有不同选择器对应相同的元素的时候需要使用哪个规则。它基本上是一个衡量选择器具体选择哪些区域的尺度:</p><ul><li>一个元素选择器不是很具体 (它会选择页面上该类型的所有元素)，所以它的优先级就会低一些。</li><li>一个类选择器稍微具体点 (它会选择该页面中有特定 class 属性值的元素)，所以它的优先级就要高一点。</li></ul><div id="code-demo-22d870cc" class="code-demo-wrapper" data-title="%E6%A1%88%E4%BE%8B" data-code="%7B%22html%22%3A%22%3Ch1%20class%3D%5C%22main-heading%5C%22%3EMr.Hope%20is%20handsome!%3C%2Fh1%3E%5Cn%22%2C%22css%22%3A%22.main-heading%20%7B%5Cn%20%20color%3A%20red%3B%5Cn%7D%5Cn%5Cnh1%20%7B%5Cn%20%20color%3A%20blue%3B%5Cn%7D%5Cn%22%7D"><div class="demo-wrapper"><div class="code-demo-app"></div></div><div class="code-wrapper"><div class="code"><p>上面的 <code>h1</code> 会显示红色 (类选择器有更高的优先级，即使元素选择器顺序在它后面)。</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>main-heading<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Mr.Hope is handsome!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.main-heading</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">h1</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div></div><div class="code-demo-footer"></div></div><h3 id="继承" tabindex="-1"><a class="header-anchor" href="#继承" aria-hidden="true">#</a> 继承</h3><p>一些设置在父元素上的 CSS 属性是可以被子元素继承的，有些则不能。</p><p><strong>案例</strong>: 如果您设置一个元素的 <code>color</code> 和 <code>font-family</code> ，默认情况下每个在里面的元素也都会有相同的属性。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token comment">/* 整个文档的文字默认情况下都是蓝的，除非针对性的设置为其他颜色 */</span>\n<span class="token selector">body</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>一些属性是不能继承的。比如您在一个元素上设置 <code>width: 50%</code> ，所有的后代不会是父元素的宽度的 50%。如果这个也可以继承的话，CSS 就会很难使用了!</p></div><h2 id="理解继承" tabindex="-1"><a class="header-anchor" href="#理解继承" aria-hidden="true">#</a> 理解继承</h2><p>我们从继承开始。下面的例子中我们有一个 <code>ul</code>，里面有两个无序列表。我们已经给 <code>&lt;ul&gt;</code> 设置了 <code>border</code>， <code>padding</code> 和 <code>color</code>.</p><p><code>color</code> 应用在直接子元素，也影响其他后代，如子元素 <code>&lt;li&gt;</code>，和第一个嵌套列表中的子项。然后添加了一个 <code>special</code> 类到第二个嵌套列表。该类声明了不同的颜色。然后通过它的子元素继承。</p><div id="code-demo-396a7606" class="code-demo-wrapper" data-title="%E7%BB%A7%E6%89%BF%E6%A1%88%E4%BE%8B" data-code="%7B%22html%22%3A%22%3Cul%20class%3D%5C%22main%5C%22%3E%5Cn%20%20%3Cli%3EItem%20One%3C%2Fli%3E%5Cn%20%20%3Cli%3E%5Cn%20%20%20%20Item%20Two%5Cn%20%20%20%20%3Cul%3E%5Cn%20%20%20%20%20%20%3Cli%3E2.1%3C%2Fli%3E%5Cn%20%20%20%20%20%20%3Cli%3E2.2%3C%2Fli%3E%5Cn%20%20%20%20%3C%2Ful%3E%5Cn%20%20%3C%2Fli%3E%5Cn%20%20%3Cli%3E%5Cn%20%20%20%20Item%20Three%5Cn%20%20%20%20%3Cul%20class%3D%5C%22special%5C%22%3E%5Cn%20%20%20%20%20%20%3Cli%3E%5Cn%20%20%20%20%20%20%20%203.1%5Cn%20%20%20%20%20%20%20%20%3Cul%3E%5Cn%20%20%20%20%20%20%20%20%20%20%3Cli%3E3.1.1%3C%2Fli%3E%5Cn%20%20%20%20%20%20%20%20%20%20%3Cli%3E3.1.2%3C%2Fli%3E%5Cn%20%20%20%20%20%20%20%20%3C%2Ful%3E%5Cn%20%20%20%20%20%20%3C%2Fli%3E%5Cn%20%20%20%20%20%20%3Cli%3E3.2%3C%2Fli%3E%5Cn%20%20%20%20%3C%2Ful%3E%5Cn%20%20%3C%2Fli%3E%5Cn%3C%2Ful%3E%5Cn%22%2C%22css%22%3A%22.main%20%7B%5Cn%20%20color%3A%20rebeccapurple%3B%5Cn%20%20border%3A%202px%20solid%20%23ccc%3B%5Cn%20%20padding%3A%201em%3B%5Cn%7D%5Cn%5Cn.special%20%7B%5Cn%20%20color%3A%20black%3B%5Cn%20%20font-weight%3A%20bold%3B%5Cn%7D%5Cn%22%7D"><div class="demo-wrapper"><div class="code-demo-app"></div></div><div class="code-wrapper"><div class="code"><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>main<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>Item One<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>\n    Item Two\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>2.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>\n    Item Three\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>special<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>\n        3.1\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>3.1.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>3.1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>3.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">.main</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> rebeccapurple<span class="token punctuation">;</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> 2px solid #ccc<span class="token punctuation">;</span>\n  <span class="token property">padding</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.special</span> <span class="token punctuation">{</span>\n  <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>\n  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></div></div><div class="code-demo-footer"></div></div><p>像 <code>width</code> (上面提到的), <code>margin</code>, <code>padding</code>, 和 <code>border</code> 不会被继承。如果 <code>border</code> 可以被继承，每个列表和列表项都会获得一个边框 — 可能就不是我们想要的结果!</p><p>哪些属性属于默认继承很大程度上是由常识决定的。</p><h3 id="控制继承" tabindex="-1"><a class="header-anchor" href="#控制继承" aria-hidden="true">#</a> 控制继承</h3><p>CSS 为控制继承提供了四个特殊的通用属性值。每个 CSS 属性都接收这些值。</p><ul><li><code>inherit</code>: 使子元素属性和父元素相同。实际上就是 &quot;开启继承&quot;.</li><li><code>initial</code>: 与浏览器默认样式相同。如果浏览器默认样式中未设置且该属性是自然继承的，那么会设置为 <code>inherit</code>。</li><li><code>unset</code>: 将属性重置为自然值，也就是如果属性是自然继承那么就是 <code>inherit</code>，否则和 <code>initial</code> 一样</li></ul><div class="custom-container info"><p class="custom-container-title">相关信息</p><p>还有一个属性 <code>revert</code>，但只有很少的浏览器支持。</p></div><h3 id="重设所有属性值" tabindex="-1"><a class="header-anchor" href="#重设所有属性值" aria-hidden="true">#</a> 重设所有属性值</h3><p>CSS 的缩写属性 <code>all</code> 可以用于同时将这些继承值中的一个应用于(几乎)所有属性。它的值可以是其中任意一个(<code>inherit</code>, <code>initial</code>, <code>unset</code>, <code>revert</code>)。这是一种撤销对样式所做更改的简便方法，以便回到默认状态。</p><div id="code-demo-555afbf4" class="code-demo-wrapper" data-title="%E9%87%8D%E8%AE%BE%E6%89%80%E6%9C%89%E5%B1%9E%E6%80%A7%E5%80%BC" data-code="%7B%22html%22%3A%22%3Cblockquote%3E%5Cn%20%20%3Cp%3EThis%20blockquote%20is%20styled%3C%2Fp%3E%5Cn%3C%2Fblockquote%3E%5Cn%5Cn%3Cblockquote%20class%3D%5C%22fix-this%5C%22%3E%5Cn%20%20%3Cp%3EThis%20blockquote%20is%20not%20styled%3C%2Fp%3E%5Cn%3C%2Fblockquote%3E%5Cn%22%2C%22css%22%3A%22blockquote%20%7B%5Cn%20%20background-color%3A%20red%3B%5Cn%20%20border%3A%202px%20solid%20green%3B%5Cn%7D%5Cn%5Cn.fix-this%20%7B%5Cn%20%20all%3A%20unset%3B%5Cn%7D%5Cn%22%7D"><div class="demo-wrapper"><div class="code-demo-app"></div></div><div class="code-wrapper"><div class="code"><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>blockquote</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>This blockquote is styled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>blockquote</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>blockquote</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fix-this<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>This blockquote is not styled<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>blockquote</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">blockquote</span> <span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> 2px solid green<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token selector">.fix-this</span> <span class="token punctuation">{</span>\n  <span class="token property">all</span><span class="token punctuation">:</span> unset<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div></div><div class="code-demo-footer"></div></div><h2 id="理解层叠" tabindex="-1"><a class="header-anchor" href="#理解层叠" aria-hidden="true">#</a> 理解层叠</h2><p>有三个因素需要考虑，根据重要性排序如下:</p><ol><li>重要程度</li><li>优先级</li><li>资源顺序</li></ol><p>我们从下往上，看看浏览器是如何决定该应用哪个 CSS 规则的。</p><h3 id="资源顺序" tabindex="-1"><a class="header-anchor" href="#资源顺序" aria-hidden="true">#</a> 资源顺序</h3><p>我们已经看到了顺序对于层叠的重要性。如果您有超过一条规则，而且都是相同的权重，那么最后面的规则会应用。可以理解为后面的规则覆盖前面的规则，直到最后一个开始设置样式。</p><h3 id="优先级计算" tabindex="-1"><a class="header-anchor" href="#优先级计算" aria-hidden="true">#</a> 优先级计算</h3><p>在您了解了顺序的重要性后，会发现在一些情况下，有些规则在最后出现，但是却应用了前面的规则。</p><p>只要前面的有更高的优先级，浏览器就把它选择为元素的样式。就像前面看到的，类选择器的权重大于元素选择器，因此类上定义的属性将覆盖应用于元素上的属性。</p><div class="custom-container warning"><p class="custom-container-title">注意</p><p>虽然我们考虑的是选择器，但是只有相同的属性会被覆盖，不会覆盖所有规则，也就是说优先级低的选择器的其他不冲突声明仍会生效。</p></div><div class="custom-container tip"><p class="custom-container-title">技巧</p><p>一种常见的做法是给基本元素定义通用样式，然后给不同的元素创建对应的类。</p><p>比如我的博客对很多标签的样式进行了调整(比如减小了 <code>&lt;h1&gt;</code> 的字体大小以及标题的字体粗细)，并通过类来对特定区域的标签进行进一步的样式调整。</p></div><p>本质上，不同类型的选择器有不同的分数值，把这些分数相加就得到特定选择器的权重，然后就可以进行匹配。</p><p>一个选择器的优先级可以说是由四个部分相加 (分量)，可以认为是个十百千 — 四位数的四个位数:</p><ul><li>千位: 如果声明在 style 的属性(内联样式)则该位得一分。这样的声明没有选择器，所以它得分总是 1000。</li><li>百位: 选择器中包含 ID 选择器则该位得一分。</li><li>十位: 选择器中包含类选择器、属性选择器或者伪类则该位得一分。</li><li>个位: 选择器中包含元素、伪元素选择器则该位得一分。</li></ul><div class="custom-container warning"><p class="custom-container-title">注意</p><p>通用选择器 (<code>*</code>)，组合符 (<code>+</code>, <code>&gt;</code>, <code>~</code>, 空格)，和否定伪类 (<code>:not</code>) 不会影响优先级。</p></div><div class="custom-container danger"><p class="custom-container-title">相关信息</p><p>在进行计算时不允许进行进位，例如，20 个类选择器仅仅意味着 20 个十位，而不能视为 两个百位，也就是说，无论多少个类选择器的权重叠加，都不会超过一个 ID 选择器。</p></div><h2 id="important" tabindex="-1"><a class="header-anchor" href="#important" aria-hidden="true">#</a> !important</h2><p><code>!important</code> 可以用来覆盖所有上面所有优先级计算。</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">button</span> <span class="token punctuation">{</span>\n  <span class="token property">border</span><span class="token punctuation">:</span> none <span class="token important">!important</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>请不要滥用 <code>!important</code>，只有在不得不使用的情况下再进行使用。</p><p>覆盖 <code>!important</code> 唯一的办法就是另一个 <code>!important</code> 具有相同优先级而且顺序靠后，或者更高优先级。</p></div>',53),e={},p=(0,a(83744).Z)(e,[["render",function(n,s){return t}]])},92840:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-20f0ad21",path:"/code/website/css/guide/cascade.html",title:"优先级和继承",lang:"zh-CN",frontmatter:{title:"优先级和继承",icon:"sort",date:"2019-09-06T00:00:00.000Z",category:["CSS"],tag:["快速上手"],head:[["meta",{property:"og:url",content:"https://mrhope.site/code/website/css/guide/cascade.html"}],["meta",{property:"og:title",content:"优先级和继承"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{name:"twitter:card",content:"summary_large_image"}],["meta",{property:"article:tag",content:"快速上手"}],["meta",{property:"article:published_time",content:"2019-09-06T00:00:00.000Z"}]]},excerpt:"<p>本文介绍 CSS 的一些最基本的概念: 层叠、优先级和继承。</p>\n",headers:[{level:2,title:"冲突规则",slug:"冲突规则",children:[{level:3,title:"层叠",slug:"层叠",children:[]},{level:3,title:"优先级",slug:"优先级",children:[]},{level:3,title:"继承",slug:"继承",children:[]}]},{level:2,title:"理解继承",slug:"理解继承",children:[{level:3,title:"控制继承",slug:"控制继承",children:[]},{level:3,title:"重设所有属性值",slug:"重设所有属性值",children:[]}]},{level:2,title:"理解层叠",slug:"理解层叠",children:[{level:3,title:"资源顺序",slug:"资源顺序",children:[]},{level:3,title:"优先级计算",slug:"优先级计算",children:[]}]},{level:2,title:"!important",slug:"important",children:[]}],git:{createdTime:160460048e4,updatedTime:1644166018e3,contributors:[{name:"Mr.Hope",email:"zhangbowang1998@gmail.com",commits:11}]},readingTime:{minutes:6.4,words:1919},filePathRelative:"code/website/css/guide/cascade.md"}}}]);