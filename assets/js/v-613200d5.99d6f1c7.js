"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6767],{79145:(n,t,e)=>{e.r(t),e.d(t,{default:()=>i});var l=e(34086);const s=(0,l.uE)('<p>表格是由行和列组成的结构化数据集(表格数据)，它能够使您简捷迅速地查找某个表示不同类型数据之间的某种关系的值。</p><p>表格的一个特点就是严格. 通过在行和列的标题之间进行视觉关联的方法，就可以让信息能够很简单地被解读出来。</p><h2 id="常见误区" tabindex="-1"><a class="header-anchor" href="#常见误区" aria-hidden="true">#</a> 常见误区</h2><p>HTML 表格应该用于表格数据 ，这正是 HTML 表格设计出来的用途。请不要用它来进行布局。</p><p>使用表格而不是 CSS 布局的缺点:</p><ol><li><p>表格布局减少了视觉受损的用户的可访问性:</p><p>屏幕阅读器, 被盲人所使用, 解析存在于 HTML 页面上的标签，然后为用户读出其中的内容。因为对于布局来说，表格不是一个正确的工具，使用的标记比使用 CSS 布局技术更复杂, 所以屏幕阅读器的输出会让他们的用户感到困惑。</p></li><li><p>表格会产生很多标签:</p><p>正如刚才提到的, 表格布局通常会比正确的布局技术涉及更复杂的标签结构，这会导致代码变得更难于编写、维护、调试.</p></li><li><p>表格不能自动响应:</p><p>当您使用正确的布局容器 (比如 <code>&lt;header&gt;</code>, <code>&lt;section&gt;</code>, <code>&lt;article&gt;</code>, 或是 <code>&lt;div&gt;</code>), 它们的默认宽度是父元素的 <code>100%</code>. 而表格的的默认大小是根据其内容而定的。因此，需要采取额外的措施来获取表格布局样式，以便有效地在各种设备上工作。</p></li></ol><h2 id="使用表格" tabindex="-1"><a class="header-anchor" href="#使用表格" aria-hidden="true">#</a> 使用表格</h2><ul><li>使用 <code>&lt;table&gt;&lt;/table&gt;</code> 构建表格。</li><li>在表格中，最小的内容容器是单元格, 是通过 <code>&lt;td&gt;</code> 元素创建的 (td 代表 table data)，同时使用 <code>&lt;th&gt;</code> 元素 (th 代表 table header) 描述表格标题，它是一个特殊的单元格。</li><li>使用 <code>&lt;tr&gt;</code> 元素 (tr 代表 table row) 描述一行表格</li></ul><h2 id="合并单元格" tabindex="-1"><a class="header-anchor" href="#合并单元格" aria-hidden="true">#</a> 合并单元格</h2><p>表格中的标题和单元格有 <code>colspan</code> 和 <code>rowspan</code> 属性，这两个属性可以帮助我们实现这些效果。这两个属性接受一个没有单位的数字值，数字决定了它们的宽度或高度是几个单元格。比如 <code>colspan=&quot;2&quot;</code> 使一个单元格的宽度是两个单元格。</p><div class="custom-container tip"><p class="custom-container-title">规则</p><p>当单元格额外占据其他单元格位置时。表格会在渲染时自动跳过他们放置其他单元格。</p></div><h2 id="为列提供共同的样式" tabindex="-1"><a class="header-anchor" href="#为列提供共同的样式" aria-hidden="true">#</a> 为列提供共同的样式</h2><p>HTML 有一种方法可以定义整列数据的样式信息: 就是 <code>&lt;col&gt;</code> 和 <code>&lt;colgroup&gt;</code> 元素。</p><p>如果您想让一列中的每个数据的样式都一样，那么您就要为每个数据都添加一个样式，这样的做法是令人厌烦和低效的。您通常需要在列中的每个 <code>&lt;td&gt;</code> 或 <code>&lt;th&gt;</code> 上定义样式，或者使用一个复杂的选择器，比如 <code>:nth-child()</code>。为了舍弃这种做法，我们可以只定义一次，在 <code>&lt;col&gt;</code> 元素中。<code>&lt;col&gt;</code> 元素被规定包含在 <code>&lt;colgroup&gt;</code> 容器中，而 <code>&lt;colgroup&gt;</code> 就在 <code>&lt;table&gt;</code> 标签的下方。</p>',14),a=(0,l._)("div",{class:"language-html ext-html line-numbers-mode"},[(0,l._)("pre",{class:"language-html"},[(0,l._)("code",null,'<table>\n  <colgroup>\n    <col />\n    <col style="background-color: yellow" />\n  </colgroup>\n  <tr>\n    <th>Data 1</th>\n    <th>Data 2</th>\n  </tr>\n  <tr>\n    <td>Calcutta</td>\n    <td>Orange</td>\n  </tr>\n  <tr>\n    <td>Robots</td>\n    <td>Jazz</td>\n  </tr>\n</table>\n')]),(0,l._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,l._)("span",{class:"line-number"},"1"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"2"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"3"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"4"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"5"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"6"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"7"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"8"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"9"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"10"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"11"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"12"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"13"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"14"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"15"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"16"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"17"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"18"),(0,l._)("br")])],-1),r=(0,l.uE)('<p>我们使用了两个 <code>&lt;col&gt;</code> 来定义“列的样式”，每一个 <code>&lt;col&gt;</code> 都会制定每列的样式，对于第一列，我们没有采取任何样式，但是我们仍然需要添加一个空的 <code>&lt;col&gt;</code> 元素，如果不这样做，那么我们的样式就会应用到第一列上，这和我们预想的不一样。</p><p>如果您想把这种样式信息应用到每一列，我们可以只使用一个 <code>&lt;col&gt;</code> 元素，不过需要包含 <code>span</code> 属性，像这样:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>&lt;colgroup&gt;\n  &lt;col style=&quot;background-color: yellow&quot; span=&quot;2&quot; /&gt;\n&lt;/colgroup&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>rowspan</code> 就像 <code>colspan</code>, <code>span</code> 需要一个无单位的数字值，用来制定您想要让这个样式应用到表格中多少列</p>',4),d=(0,l._)("div",{class:"language-html ext-html line-numbers-mode"},[(0,l._)("pre",{class:"language-html"},[(0,l._)("code",null,'<table>\n  <colgroup>\n    <col span="2" />\n    <col style="background-color:#97DB9A;" />\n    <col style="width:42px;" />\n    <col style="background-color:#97DB9A;" />\n    <col style="background-color:#DCC48E; border:4px solid #C1437A;" />\n    <col span="2" style="width:42px;" />\n  </colgroup>\n  <tr>\n    <td>&nbsp;</td>\n    <th>Mon</th>\n    <th>Tues</th>\n    <th>Wed</th>\n    <th>Thurs</th>\n    <th>Fri</th>\n    <th>Sat</th>\n    <th>Sun</th>\n  </tr>\n  <tr>\n    <th>1st period</th>\n    <td>English</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n    <td>German</td>\n    <td>Dutch</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n  </tr>\n  <tr>\n    <th>2nd period</th>\n    <td>English</td>\n    <td>English</td>\n    <td>&nbsp;</td>\n    <td>German</td>\n    <td>Dutch</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n  </tr>\n  <tr>\n    <th>3rd period</th>\n    <td>&nbsp;</td>\n    <td>German</td>\n    <td>&nbsp;</td>\n    <td>German</td>\n    <td>Dutch</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n  </tr>\n  <tr>\n    <th>4th period</th>\n    <td>&nbsp;</td>\n    <td>English</td>\n    <td>&nbsp;</td>\n    <td>English</td>\n    <td>Dutch</td>\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n  </tr>\n</table>\n')]),(0,l._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,l._)("span",{class:"line-number"},"1"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"2"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"3"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"4"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"5"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"6"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"7"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"8"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"9"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"10"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"11"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"12"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"13"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"14"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"15"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"16"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"17"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"18"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"19"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"20"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"21"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"22"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"23"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"24"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"25"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"26"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"27"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"28"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"29"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"30"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"31"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"32"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"33"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"34"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"35"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"36"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"37"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"38"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"39"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"40"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"41"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"42"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"43"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"44"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"45"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"46"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"47"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"48"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"49"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"50"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"51"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"52"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"53"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"54"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"55"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"56"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"57"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"58"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"59"),(0,l._)("br"),(0,l._)("span",{class:"line-number"},"60"),(0,l._)("br")])],-1),c=(0,l.uE)('<h2 id="添加标题-caption" tabindex="-1"><a class="header-anchor" href="#添加标题-caption" aria-hidden="true">#</a> 添加标题 <code>&lt;caption&gt;</code></h2><p>您可以通过 <code>&lt;caption&gt;</code> 元素为您的表格增加一个标题。</p><p>您应该把 <code>&lt;caption&gt;</code> 元素放入 <code>&lt;table&gt;</code> 元素中，<code>&lt;table&gt;</code> 标签的下面。</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>&lt;table&gt;\n  &lt;caption&gt;\n    Dinosaurs in the Jurassic period\n  &lt;/caption&gt;\n\n  ...\n&lt;/table&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>标题意味着包含对于表格内容的描述，这对那些希望可以快速浏览网页中的表格对他们是否有帮助的读者们来说，是非常好的功能。特别是盲人用户，不需要让屏幕阅读设备读出很多单元格的内容，来让用户了解这张表格讲的是什么，而是可以依靠标题的内容，来决定是否需要了解更详细的内容。</p><h2 id="结构化" tabindex="-1"><a class="header-anchor" href="#结构化" aria-hidden="true">#</a> 结构化</h2><p>使用 <code>&lt;thead&gt;</code>, <code>&lt;tfoot&gt;</code>,和 <code>&lt;tbody&gt;</code> 可以结构化表格。这些元素允许您把表格中的部分标记为表头、页脚、正文部分。</p><p>在长表格的情况下，您可以在每个打印页面上使表格页眉和页脚重复，您也可以让表格的正文部分显示在一个单独的页面上，并通过上下滚动来获得内容。</p><ul><li><code>&lt;thead&gt;</code> 需要嵌套在 table 元素中，放置在头部的位置，因为它通常代表第一行，第一行中往往都是每列的标题，但是不是每种情况都是这样的。如果您使用了 <code>&lt;col&gt;/&lt;colgroup&gt;</code> 元素，那么 <code>&lt;thead&gt;</code> 元素就需要放在它们的下面。</li><li><code>&lt;tfoot&gt;</code> 需要嵌套在 table 元素中，放置在底部 (页脚)的位置，一般是最后一行，往往是对前面所有行的总结，比如，您可以按照预想的方式将 <code>&lt;tfoot&gt;</code> 放在表格的底部，或者就放在 <code>&lt;thead&gt;</code> 的下面。(浏览器仍将它呈现在表格的底部)</li><li><code>&lt;tbody&gt;</code> 需要嵌套在 table 元素中，放置在 <code>&lt;thead&gt;</code> 的下面或者是 <code>&lt;tfoot&gt;</code> 的下面，这取决于您如何设计您的结构。(<code>&lt;tfoot&gt;</code> 放在 <code>&lt;thead&gt;</code> 下面也可以生效.)</li></ul><div class="custom-container warning"><p class="custom-container-title">注意</p><p><code>&lt;tbody&gt;</code> 总是包含在每个表中，如果您没有在代码中指定它，那就是隐式的。可以来验证一下，打开一个没有包含 <code>&lt;tbody&gt;</code> 的网页，然后在开发者工具中查看代码，您会看到浏览器为您添加了这个标签。它可以让您更好地控制表格结构和样式。</p></div><h2 id="嵌套表格" tabindex="-1"><a class="header-anchor" href="#嵌套表格" aria-hidden="true">#</a> 嵌套表格</h2><p>在一个单元格中可以嵌套里另一个表格，但是这会让用户 (尤其是使用阅读器的盲人) 非常困惑，您更应该用锚点与引用的方式去避免嵌套表格。</p><h2 id="屏幕阅读增强" tabindex="-1"><a class="header-anchor" href="#屏幕阅读增强" aria-hidden="true">#</a> 屏幕阅读增强</h2><p>视力受损的用户经常使用一个屏幕阅读设备来为他们读出网页上的信息。对于盲人来说，阅读简单的文字没有什么问题，但是要理解一张表格的内容，这就有一些难度了。虽然，使用正确的标记，我们可以用程序化来代替视觉关联。</p><h3 id="使用列和行的标题" tabindex="-1"><a class="header-anchor" href="#使用列和行的标题" aria-hidden="true">#</a> 使用列和行的标题</h3><p>屏幕阅读设备会识别所有的标题，然后在它们和它们所关联的单元格之间产生编程关联。列和行标题的组合将标识和解释每个单元格中的数据，以便屏幕阅读器用户可以类似于视力正常的用户的操作来理解表格。</p><h3 id="scope-属性" tabindex="-1"><a class="header-anchor" href="#scope-属性" aria-hidden="true">#</a> scope 属性</h3><p>scope 属性可以添加在 <code>&lt;th&gt;</code> 元素中，用来帮助屏幕阅读设备更好地理解那些标题单元格，这个标题单元格到底是列标题呢，还是行标题。</p><div class="custom-container tip"><p class="custom-container-title">案例</p><p>一个表头:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>&lt;thead&gt;\n  &lt;tr&gt;\n    &lt;th scope=&quot;col&quot;&gt;Purchase&lt;/th&gt;\n    &lt;th scope=&quot;col&quot;&gt;Location&lt;/th&gt;\n    &lt;th scope=&quot;col&quot;&gt;Date&lt;/th&gt;\n    &lt;th scope=&quot;col&quot;&gt;Evaluation&lt;/th&gt;\n    &lt;th scope=&quot;col&quot;&gt;Cost (€)&lt;/th&gt;\n  &lt;/tr&gt;\n&lt;/thead&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>一个有行标题的行:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>&lt;tr&gt;\n  &lt;th scope=&quot;row&quot;&gt;Haircut&lt;/th&gt;\n  &lt;td&gt;Hairdresser&lt;/td&gt;\n  &lt;td&gt;12/09&lt;/td&gt;\n  &lt;td&gt;Great idea&lt;/td&gt;\n  &lt;td&gt;30&lt;/td&gt;\n&lt;/tr&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><p>scope 还有两个可选的值 <code>colgroup</code> 和 <code>rowgroup</code>。这些用于位于多个列或行的顶部的标题，以配合 <code>colspan</code> 和 <code>rowspan</code>。</p><h3 id="id-和标题属性" tabindex="-1"><a class="header-anchor" href="#id-和标题属性" aria-hidden="true">#</a> id 和标题属性</h3><p>如果要替代 scope 属性，可以使用 id 和 headers 属性来创造标题与单元格之间的联系。使用方法如下:</p><ul><li>为每个 <code>&lt;th&gt;</code> 元素添加一个唯一的 id 。</li><li>为每个 <code>&lt;td&gt;</code> 元素添加一个 <code>headers</code> 属性。每个单元格的 <code>headers</code> 属性需要包含它从属于的所有标题的 id，之间用空格分隔开。</li></ul><p>这会给您的 HTML 表格中每个单元格的位置一个明确的定义。像一个电子表格一样，通过 headers 属性来定义属于哪些行或列。为了让它工作良好，表格同时需要列和行标题。</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>&lt;thead&gt;\n  &lt;tr&gt;\n    &lt;th id=&quot;purchase&quot;&gt;Purchase&lt;/th&gt;\n    &lt;th id=&quot;location&quot;&gt;Location&lt;/th&gt;\n    &lt;th id=&quot;date&quot;&gt;Date&lt;/th&gt;\n    &lt;th id=&quot;evaluation&quot;&gt;Evaluation&lt;/th&gt;\n    &lt;th id=&quot;cost&quot;&gt;Cost (€)&lt;/th&gt;\n  &lt;/tr&gt;\n&lt;/thead&gt;\n&lt;tbody&gt;\n  &lt;tr&gt;\n    &lt;th id=&quot;haircut&quot;&gt;Haircut&lt;/th&gt;\n    &lt;td headers=&quot;location haircut&quot;&gt;Hairdresser&lt;/td&gt;\n    &lt;td headers=&quot;date haircut&quot;&gt;12/09&lt;/td&gt;\n    &lt;td headers=&quot;evaluation haircut&quot;&gt;Great idea&lt;/td&gt;\n    &lt;td headers=&quot;cost haircut&quot;&gt;30&lt;/td&gt;\n  &lt;/tr&gt;\n\n  ...\n&lt;/tbody&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>',25),o={},i=(0,e(82831).Z)(o,[["render",function(n,t){const e=(0,l.up)("CodeDemo");return(0,l.wg)(),(0,l.iD)(l.HY,null,[s,(0,l.Wm)(e,{id:"code-demo-c59d9d06",title:"%E6%A0%B7%E5%BC%8F%E5%8C%96%E8%A1%A8%E6%A0%BC",code:"%7B%22html%22%3A%22%3Ctable%3E%5Cn%20%20%3Ccolgroup%3E%5Cn%20%20%20%20%3Ccol%20%2F%3E%5Cn%20%20%20%20%3Ccol%20style%3D%5C%22background-color%3A%20yellow%5C%22%20%2F%3E%5Cn%20%20%3C%2Fcolgroup%3E%5Cn%20%20%3Ctr%3E%5Cn%20%20%20%20%3Cth%3EData%201%3C%2Fth%3E%5Cn%20%20%20%20%3Cth%3EData%202%3C%2Fth%3E%5Cn%20%20%3C%2Ftr%3E%5Cn%20%20%3Ctr%3E%5Cn%20%20%20%20%3Ctd%3ECalcutta%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3EOrange%3C%2Ftd%3E%5Cn%20%20%3C%2Ftr%3E%5Cn%20%20%3Ctr%3E%5Cn%20%20%20%20%3Ctd%3ERobots%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3EJazz%3C%2Ftd%3E%5Cn%20%20%3C%2Ftr%3E%5Cn%3C%2Ftable%3E%5Cn%22%7D"},{default:(0,l.w5)((()=>[a])),_:1}),r,(0,l.Wm)(e,{id:"code-demo-522018ce",title:"%E6%A0%B7%E5%BC%8F%E5%8C%96%E8%A1%A8%E6%A0%BC",code:"%7B%22html%22%3A%22%3Ctable%3E%5Cn%20%20%3Ccolgroup%3E%5Cn%20%20%20%20%3Ccol%20span%3D%5C%222%5C%22%20%2F%3E%5Cn%20%20%20%20%3Ccol%20style%3D%5C%22background-color%3A%2397DB9A%3B%5C%22%20%2F%3E%5Cn%20%20%20%20%3Ccol%20style%3D%5C%22width%3A42px%3B%5C%22%20%2F%3E%5Cn%20%20%20%20%3Ccol%20style%3D%5C%22background-color%3A%2397DB9A%3B%5C%22%20%2F%3E%5Cn%20%20%20%20%3Ccol%20style%3D%5C%22background-color%3A%23DCC48E%3B%20border%3A4px%20solid%20%23C1437A%3B%5C%22%20%2F%3E%5Cn%20%20%20%20%3Ccol%20span%3D%5C%222%5C%22%20style%3D%5C%22width%3A42px%3B%5C%22%20%2F%3E%5Cn%20%20%3C%2Fcolgroup%3E%5Cn%20%20%3Ctr%3E%5Cn%20%20%20%20%3Ctd%3E%26nbsp%3B%3C%2Ftd%3E%5Cn%20%20%20%20%3Cth%3EMon%3C%2Fth%3E%5Cn%20%20%20%20%3Cth%3ETues%3C%2Fth%3E%5Cn%20%20%20%20%3Cth%3EWed%3C%2Fth%3E%5Cn%20%20%20%20%3Cth%3EThurs%3C%2Fth%3E%5Cn%20%20%20%20%3Cth%3EFri%3C%2Fth%3E%5Cn%20%20%20%20%3Cth%3ESat%3C%2Fth%3E%5Cn%20%20%20%20%3Cth%3ESun%3C%2Fth%3E%5Cn%20%20%3C%2Ftr%3E%5Cn%20%20%3Ctr%3E%5Cn%20%20%20%20%3Cth%3E1st%20period%3C%2Fth%3E%5Cn%20%20%20%20%3Ctd%3EEnglish%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3E%26nbsp%3B%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3E%26nbsp%3B%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3EGerman%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3EDutch%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3E%26nbsp%3B%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3E%26nbsp%3B%3C%2Ftd%3E%5Cn%20%20%3C%2Ftr%3E%5Cn%20%20%3Ctr%3E%5Cn%20%20%20%20%3Cth%3E2nd%20period%3C%2Fth%3E%5Cn%20%20%20%20%3Ctd%3EEnglish%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3EEnglish%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3E%26nbsp%3B%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3EGerman%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3EDutch%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3E%26nbsp%3B%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3E%26nbsp%3B%3C%2Ftd%3E%5Cn%20%20%3C%2Ftr%3E%5Cn%20%20%3Ctr%3E%5Cn%20%20%20%20%3Cth%3E3rd%20period%3C%2Fth%3E%5Cn%20%20%20%20%3Ctd%3E%26nbsp%3B%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3EGerman%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3E%26nbsp%3B%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3EGerman%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3EDutch%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3E%26nbsp%3B%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3E%26nbsp%3B%3C%2Ftd%3E%5Cn%20%20%3C%2Ftr%3E%5Cn%20%20%3Ctr%3E%5Cn%20%20%20%20%3Cth%3E4th%20period%3C%2Fth%3E%5Cn%20%20%20%20%3Ctd%3E%26nbsp%3B%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3EEnglish%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3E%26nbsp%3B%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3EEnglish%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3EDutch%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3E%26nbsp%3B%3C%2Ftd%3E%5Cn%20%20%20%20%3Ctd%3E%26nbsp%3B%3C%2Ftd%3E%5Cn%20%20%3C%2Ftr%3E%5Cn%3C%2Ftable%3E%5Cn%22%7D"},{default:(0,l.w5)((()=>[d])),_:1}),c],64)}]])},82831:(n,t)=>{t.Z=(n,t)=>{const e=n.__vccOpts||n;for(const[n,l]of t)e[n]=l;return e}},521:(n,t,e)=>{e.r(t),e.d(t,{data:()=>l});const l={key:"v-613200d5",path:"/code/website/html/intro/table.html",title:"表格",lang:"zh-CN",frontmatter:{title:"表格",icon:"table",date:"2019-09-02T00:00:00.000Z",category:["HTML"],summary:"表格是由行和列组成的结构化数据集(表格数据)，它能够使您简捷迅速地查找某个表示不同类型数据之间的某种关系的值。 表格的一个特点就是严格. 通过在行和列的标题之间进行视觉关联的方法，就可以让信息能够很简单地被解读出来。 常见误区 HTML 表格应该用于表格数据 ，这正是 HTML 表格设计出来的用途。请不要用它来进行布局。 使用表格而不是 CSS 布局的缺点:",head:[["meta",{property:"og:url",content:"https://mrhope.site/code/website/html/intro/table.html"}],["meta",{property:"og:site_name",content:"Mr.Hope"}],["meta",{property:"og:title",content:"表格"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:updated_time",content:"2022-02-06T16:46:58.000Z"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{property:"article:published_time",content:"2019-09-02T00:00:00.000Z"}],["meta",{property:"article:modified_time",content:"2022-02-06T16:46:58.000Z"}]]},excerpt:"",headers:[{level:2,title:"常见误区",slug:"常见误区",children:[]},{level:2,title:"使用表格",slug:"使用表格",children:[]},{level:2,title:"合并单元格",slug:"合并单元格",children:[]},{level:2,title:"为列提供共同的样式",slug:"为列提供共同的样式",children:[]},{level:2,title:"添加标题 <caption>",slug:"添加标题-caption",children:[]},{level:2,title:"结构化",slug:"结构化",children:[]},{level:2,title:"嵌套表格",slug:"嵌套表格",children:[]},{level:2,title:"屏幕阅读增强",slug:"屏幕阅读增强",children:[{level:3,title:"使用列和行的标题",slug:"使用列和行的标题",children:[]},{level:3,title:"scope 属性",slug:"scope-属性",children:[]},{level:3,title:"id 和标题属性",slug:"id-和标题属性",children:[]}]}],git:{createdTime:1605457814e3,updatedTime:1644166018e3,contributors:[{name:"Mr.Hope",email:"zhangbowang1998@gmail.com",commits:8}]},readingTime:{minutes:8.16,words:2449},filePathRelative:"code/website/html/intro/table.md"}}}]);