"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[10332],{19434:(e,a,s)=>{s.r(a),s.d(a,{default:()=>l});var n=s(34086);const i=s.p+"assets/img/git16.02f6ee61.png",r=(0,n.uE)('<p>在安装 Git 一节中，我们已经配置了 <code>user.name</code> 和 <code>user.email</code>，实际上，Git 还有很多可配置项。</p><p>比如，让 Git 显示颜色，会让命令输出看起来更醒目:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>git config --global color.ui true\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样，Git 会适当地显示不同的颜色，比如 <code>git status</code> 命令，文件名就会标上颜色。</p><h2 id="配置别名" tabindex="-1"><a class="header-anchor" href="#配置别名" aria-hidden="true">#</a> 配置别名</h2><p>有没有经常敲错命令? 比如 <code>git status</code>? <code>status</code> 这个单词真心不好记。</p><p>如果敲 <code>git st</code> 就表示 <code>git status</code> 那就简单多了，当然这种偷懒的办法我们是极力赞成的。</p><p>我们只需要敲一行命令，告诉 Git，以后 <code>st</code> 就表示 <code>status</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>git config --global alias.st status\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>好了，现在敲 <code>git st</code> 看看效果。</p><p>当然还有别的命令可以简写，很多人都用 <code>co</code> 表示 <code>checkout</code>，<code>ci</code> 表示 <code>commit</code>，<code>br</code> 表示 <code>branch</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>git config --global alias.co checkout\ngit config --global alias.ci commit\ngit config --global alias.br branch\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>以后提交就可以简写成:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>git ci -m &quot;bala bala bala...&quot;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>--global</code> 参数是全局参数，也就是这些命令在这台电脑的所有 Git 仓库下都有用。</p><p>在撤销修改一节中，我们知道，命令 <code>git reset HEAD file</code> 可以把暂存区的修改撤销掉(unstage)，重新放回工作区。既然是一个 <code>unstage</code> 操作，就可以配置一个 <code>unstage</code> 别名:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>git config --global alias.unstage &#39;reset HEAD&#39;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>当您敲入命令:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>git unstage test.py\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>实际上 Git 执行的是:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>git reset HEAD test.py\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>配置一个 <code>git last</code>，让其显示最后一次提交信息:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>git config --global alias.last &#39;log -1&#39;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样，用 <code>git last</code> 就能显示最近一次的提交:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ git last\ncommit adca45d317e6d8a4b23f9811c3d7b7f0f180bfe2\nMerge: bd6ae48 291bea8\nAuthor: Mr-Hope &lt;zhangbowang1998@gmail.com&gt;\nDate:   Thu Aug 22 22:49:22 2013 +0800\n\n    merge &amp; fix hello.py\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>甚至还有人丧心病狂地把 <code>lg</code> 配置成了:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>git config --global alias.lg &quot;log --color --graph --pretty=format:&#39;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&#39; --abbrev-commit&quot;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>来看看 <code>git lg</code> 的效果:</p><p><img src="'+i+'" alt="命令 git lg 示例图"></p><p>为什么不早点告诉我? 别激动，咱不是为了多记几个英文单词嘛!</p><h2 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h2><p>配置 Git 的时候，加上 <code>--global</code> 是针对当前用户起作用的，如果不加，那只针对当前的仓库起作用。</p><p>配置文件放哪了? 每个仓库的 Git 配置文件都放在 <code>.git/config</code> 文件中:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ cat .git/config\n[core]\n    repositoryformatversion = 0\n    filemode = true\n    bare = false\n    logallrefupdates = true\n    ignorecase = true\n    precomposeunicode = true\n[remote &quot;origin&quot;]\n    url = git@github.com:michaelliao/learngit.git\n    fetch = +refs/heads/*:refs/remotes/origin/*\n[branch &quot;master&quot;]\n    remote = origin\n    merge = refs/heads/master\n[alias]\n    last = log -1\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>别名就在 <code>[alias]</code> 后面，要删除别名，直接把对应的行删掉即可。</p><p>而当前用户的 Git 配置文件放在用户主目录下的一个隐藏文件 <code>.gitconfig</code> 中:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ cat .gitconfig\n[alias]\n    co = checkout\n    ci = commit\n    br = branch\n    st = status\n[user]\n    name = Your Name\n    email = your@email.com\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>配置别名也可以直接修改这个文件，如果改错了，可以删掉文件重新通过命令配置。</p><h3 id="别名小结" tabindex="-1"><a class="header-anchor" href="#别名小结" aria-hidden="true">#</a> 别名小结</h3><ul><li>给 Git 配置好别名，就可以输入命令时偷个懒。我们鼓励偷懒。</li></ul>',40),t={},l=(0,s(82831).Z)(t,[["render",function(e,a){return r}]])},82831:(e,a)=>{a.Z=(e,a)=>{const s=e.__vccOpts||e;for(const[e,n]of a)s[e]=n;return s}},4983:(e,a,s)=>{s.r(a),s.d(a,{data:()=>n});const n={key:"v-fe4c8648",path:"/software/git/custom.html",title:"自定义 Git",lang:"zh-CN",frontmatter:{title:"自定义 Git",icon:"skin",author:"廖雪峰",category:["Git"],tag:["Git","软件"],copyright:"Copyright by 廖雪峰 Edited by Mr.Hope",summary:"在安装 Git 一节中，我们已经配置了 user.name 和 user.email，实际上，Git 还有很多可配置项。 比如，让 Git 显示颜色，会让命令输出看起来更醒目: 这样，Git 会适当地显示不同的颜色，比如 git status 命令，文件名就会标上颜色。 配置别名 有没有经常敲错命令? 比如 git status? status 这个单词真心",head:[["meta",{property:"og:url",content:"https://mrhope.site/software/git/custom.html"}],["meta",{property:"og:site_name",content:"Mr.Hope"}],["meta",{property:"og:title",content:"自定义 Git"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:image",content:"https://mrhope.site/"}],["meta",{property:"og:updated_time",content:"2022-02-12T05:50:30.000Z"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{name:"twitter:card",content:"summary_large_image"}],["meta",{name:"twitter:image:alt",content:"自定义 Git"}],["meta",{property:"article:author",content:"廖雪峰"}],["meta",{property:"article:tag",content:"Git"}],["meta",{property:"article:tag",content:"软件"}],["meta",{property:"article:modified_time",content:"2022-02-12T05:50:30.000Z"}]]},excerpt:"",headers:[{level:2,title:"配置别名",slug:"配置别名",children:[]},{level:2,title:"配置文件",slug:"配置文件",children:[{level:3,title:"别名小结",slug:"别名小结",children:[]}]}],git:{createdTime:1591291369e3,updatedTime:164464503e4,contributors:[{name:"Mr.Hope",email:"zhangbowang1998@gmail.com",commits:7}]},readingTime:{minutes:2.5,words:751},filePathRelative:"software/git/custom.md"}}}]);