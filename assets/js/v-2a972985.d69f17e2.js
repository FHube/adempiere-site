"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[70015],{48695:(e,n,s)=>{s.r(n),s.d(n,{default:()=>d});var a=s(34086);const l=(0,a._)("p",null,[(0,a.Uk)("您可以使用 "),(0,a._)("code",null,"vue serve"),(0,a.Uk)(" 和 "),(0,a._)("code",null,"vue build"),(0,a.Uk)(" 命令对单个 "),(0,a._)("code",null,"*.vue"),(0,a.Uk)(" 文件进行快速原型开发，不过这需要先额外安装一个全局的扩展:")],-1),r=(0,a._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a._)("pre",{class:"language-bash"},[(0,a._)("code",null,"npm install -g @vue/cli-service-global\n")]),(0,a._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,a._)("span",{class:"line-number"},"1"),(0,a._)("br")])],-1),i=(0,a.uE)('<h2 id="vue-serve" tabindex="-1"><a class="header-anchor" href="#vue-serve" aria-hidden="true">#</a> vue serve</h2><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>Usage: serve [options][entry]\n\n在开发环境模式下零配置为 .js 或 .vue 文件启动一个服务器\n\nOptions:\n\n- `-o`, `--open`: 打开浏览器\n- `-c`, `--copy`: 将本地 URL 复制到剪切板\n- `-h`, `--help`: 输出用法信息\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>您所需要的仅仅是一个 <code>App.vue</code> 文件:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>&lt;template&gt;\n  &lt;h1&gt;Hello!&lt;/h1&gt;\n&lt;/template&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>然后在这个 <code>App.vue</code> 文件所在的目录下运行:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>vue serve\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p><code>vue serve</code> 使用了和 <code>vue create</code> 创建的项目相同的默认设置 (webpack、Babel、PostCSS 和 ESLint)。它会在当前目录自动推导入口文件——入口可以是 <code>main.js</code>、<code>index.js</code>、<code>App.vue</code> 或 <code>app.vue</code> 中的一个。您也可以显式地指定入口文件:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>vue serve MyComponent.vue\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><h2 id="vue-build" tabindex="-1"><a class="header-anchor" href="#vue-build" aria-hidden="true">#</a> vue build</h2><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>Usage: build [options][entry]\n\n在生产环境模式下零配置构建一个 .js 或 .vue 文件\n\nOptions:\n\n- `-t`, `--target &lt;target&gt;`: 构建目标 (app | lib | wc | wc-async, 默认值: app)\n- `-n`, `--name &lt;name&gt;`: 库的名字或 Web Components 组件的名字 (默认值: 入口文件名)\n- `-d`, `--dest &lt;dir&gt;`: 输出目录 (默认值: dist)\n- `-h`, `--help`: 输出用法信息\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>您也可以使用 <code>vue build</code> 将目标文件构建成一个生产环境的包并用来部署:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>vue build MyComponent.vue\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>vue build</code> 也提供了将组件构建成为一个库或一个 Web Components 组件的能力。</p>',12),c={},d=(0,s(82831).Z)(c,[["render",function(e,n){return(0,a.wg)(),(0,a.iD)(a.HY,null,[l,r,(0,a.kq)(" more "),i],64)}]])},82831:(e,n)=>{n.Z=(e,n)=>{const s=e.__vccOpts||e;for(const[e,a]of n)s[e]=a;return s}},22372:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a={key:"v-2a972985",path:"/code/vue/cli/quick-dev.html",title:"快速原型开发",lang:"zh-CN",frontmatter:{title:"快速原型开发",icon:"create",category:["Vue"],tag:["Vue Cli"],summary:"您可以使用 vue serve 和 vue build 命令对单个 *.vue 文件进行快速原型开发，不过这需要先额外安装一个全局的扩展:\nnpm install -g @vue/cli-service-global\n1",head:[["meta",{property:"og:url",content:"https://mrhope.site/code/vue/cli/quick-dev.html"}],["meta",{property:"og:site_name",content:"Mr.Hope"}],["meta",{property:"og:title",content:"快速原型开发"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:updated_time",content:"2022-02-06T16:46:58.000Z"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{property:"article:tag",content:"Vue Cli"}],["meta",{property:"article:modified_time",content:"2022-02-06T16:46:58.000Z"}]]},excerpt:'<p>您可以使用 <code v-pre>vue serve</code> 和 <code v-pre>vue build</code> 命令对单个 <code v-pre>*.vue</code> 文件进行快速原型开发，不过这需要先额外安装一个全局的扩展:</p>\n<div class="language-bash ext-sh line-numbers-mode"><pre v-pre class="language-bash"><code>npm install -g @vue/cli-service-global\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>',headers:[{level:2,title:"vue serve",slug:"vue-serve",children:[]},{level:2,title:"vue build",slug:"vue-build",children:[]}],git:{createdTime:1591204114e3,updatedTime:1644166018e3,contributors:[{name:"Mr.Hope",email:"zhangbowang1998@gmail.com",commits:3}]},readingTime:{minutes:1.24,words:373},filePathRelative:"code/vue/cli/quick-dev.md"}}}]);