"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[57945],{27811:(n,s,a)=>{a.r(s),a.d(s,{default:()=>_});var p=a(66252);const t={id:"注册小程序",tabindex:"-1"},e=(0,p._)("a",{class:"header-anchor",href:"#注册小程序","aria-hidden":"true"},"#",-1),o=(0,p.Uk)(" 注册小程序 "),c=(0,p._)("p",null,[(0,p.Uk)("每个小程序都需要在 "),(0,p._)("code",null,"app.js"),(0,p.Uk)(" 中调用 "),(0,p._)("code",null,"App"),(0,p.Uk)(" 方法注册小程序示例，绑定生命周期回调函数、错误监听和页面不存在监听函数等。")],-1),l=(0,p.Uk)("详细的参数含义和使用请参考 "),u=(0,p.Uk)("App 参考文档"),i=(0,p.Uk)("。"),r=(0,p.uE)('<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// app.js</span>\n<span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function">onLaunch</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Do something initial when launch.</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Do something when show.</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// Do something when hide.</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onError</span><span class="token punctuation">(</span><span class="token parameter">msg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">globalData</span><span class="token operator">:</span> <span class="token string">&quot;I am global data&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>整个小程序只有一个 App 实例，是全部页面共享的。</p><p>通过 <code>getApp</code> 方法获取到全局唯一的 App 示例，获取 App 上的数据或调用注册在 App 上的函数。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// xxx.js</span>\n<span class="token keyword">const</span> appInstance <span class="token operator">=</span> <span class="token function">getApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>appInstance<span class="token punctuation">.</span>globalData<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// I am global data</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="注册页面" tabindex="-1"><a class="header-anchor" href="#注册页面" aria-hidden="true">#</a> 注册页面</h2><p>对于小程序中的每个页面，都需要在页面对应的 js 文件中进行注册，指定页面的初始数据、生命周期回调、事件处理函数等。</p>',6),k={id:"使用-page-构造器注册页面",tabindex:"-1"},m=(0,p._)("a",{class:"header-anchor",href:"#使用-page-构造器注册页面","aria-hidden":"true"},"#",-1),b=(0,p.Uk)(" 使用 Page 构造器注册页面 "),d=(0,p.uE)('<p>简单的页面可以使用 <code>Page()</code> 进行构造。</p><p>代码示例:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//index.js</span>\n<span class="token function">Page</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;This is page data.&quot;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面创建时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onShow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面出现在前台时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面首次渲染完毕时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onHide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面从前台变为后台时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onUnload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面销毁时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 触发下拉刷新时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onReachBottom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面触底时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onShareAppMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面被用户分享时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onPageScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面滚动时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onResize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 页面尺寸变化时执行</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onTabItemTap</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// tab 点击时执行</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>pagePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 事件响应函数</span>\n  <span class="token function">viewTap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;Set some data for updating view.&quot;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token comment">// this is setData callback</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 自由数据</span>\n  <span class="token literal-property property">customData</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">hi</span><span class="token operator">:</span> <span class="token string">&quot;MINA&quot;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div>',3),g=(0,p.Uk)("详细的参数含义和使用请参考 "),h=(0,p.Uk)("Page 参考文档"),f=(0,p.Uk)("。"),v={id:"使用-component-构造器构造页面",tabindex:"-1"},y=(0,p._)("a",{class:"header-anchor",href:"#使用-component-构造器构造页面","aria-hidden":"true"},"#",-1),w=(0,p.Uk)(" 使用 Component 构造器构造页面 "),x=(0,p.uE)('<p><code>Page</code> 构造器适用于简单的页面。但对于复杂的页面， <code>Page</code> 构造器可能并不好用。</p><p>此时，可以使用 <code>Component</code> 构造器来构造页面。<code>Component</code> 构造器的主要区别是: 方法需要放在 <code>methods: { }</code> 里面。</p><p>代码示例:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">Component</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;This is page data.&quot;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 页面创建时执行</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function">onPullDownRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 下拉刷新时执行</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// 事件响应函数</span>\n    <span class="token function">viewTap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// ...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>这种创建方式非常类似于 自定义组件 ，可以像自定义组件一样使用 <code>behaviors</code> 等高级特性。</p><p>具体细节请阅读 <code>Component</code> 构造器 章节。</p>',6),j={},_=(0,a(83744).Z)(j,[["render",function(n,s){const a=(0,p.up)("Badge"),j=(0,p.up)("RouterLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[(0,p._)("h2",t,[e,o,(0,p.Wm)(a,{text:"重要",type:"error"})]),c,(0,p._)("p",null,[l,(0,p.Wm)(j,{to:"/code/mini-app/guide/service/app.html"},{default:(0,p.w5)((()=>[u])),_:1}),i]),r,(0,p._)("h3",k,[m,b,(0,p.Wm)(a,{text:"重要",type:"error"})]),d,(0,p._)("p",null,[g,(0,p.Wm)(j,{to:"/code/mini-app/guide/service/page.html"},{default:(0,p.w5)((()=>[h])),_:1}),f]),(0,p._)("h3",v,[y,w,(0,p.Wm)(a,{text:"初学无需了解",type:"grey"})]),x],64)}]])},36532:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-55eacf0e",path:"/code/mini-app/guide/service/register.html",title:"注册",lang:"zh-CN",frontmatter:{title:"注册",icon:"config",category:["小程序"],head:[["meta",{property:"og:url",content:"https://mrhope.site/code/mini-app/guide/service/register.html"}],["meta",{property:"og:title",content:"注册"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{name:"twitter:card",content:"summary_large_image"}],["script",{type:"application/ld+json"},'{"@context":"https://schema.org","@type":"NewsArticle","headline":"注册","image":[""],"datePublished":"","dateModified":"","author":[]}']]},excerpt:"",headers:[{level:2,title:"注册小程序",slug:"注册小程序",children:[]},{level:2,title:"注册页面",slug:"注册页面",children:[{level:3,title:"使用 Page 构造器注册页面",slug:"使用-page-构造器注册页面",children:[]},{level:3,title:"使用 Component 构造器构造页面",slug:"使用-component-构造器构造页面",children:[]}]}],git:{createdTime:1604856934e3,updatedTime:1616318554e3,contributors:[{name:"Mr.Hope",email:"zhangbowang1998@gmail.com",commits:2}]},readingTime:{minutes:2.09,words:627},filePathRelative:"code/mini-app/guide/service/register.md"}}}]);