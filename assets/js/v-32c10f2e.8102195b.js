"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[22872],{38166:(e,n,a)=>{a.r(n),a.d(n,{default:()=>H});var s=a(34086);const r=(0,s.uE)('<h2 id="链接" tabindex="-1"><a class="header-anchor" href="#链接" aria-hidden="true">#</a> 链接</h2><p>Markdown 支持两种形式的链接语法: <em>行内</em>和<em>参考</em>。</p><p>不管是哪一种，链接的文字都是用 <code>[方括号]</code> 来标记。</p><h3 id="行内链接" tabindex="-1"><a class="header-anchor" href="#行内链接" aria-hidden="true">#</a> 行内链接</h3><p>要建立一个行内形式的链接，只要在方块括号后输入圆括号并插入网址链接即可，如果您还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可。</p>',5),l={class:"custom-block details"},t=(0,s.uE)('<summary>例子</summary><p><strong>输入</strong>:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.\n\n[This link](http://example.net/) has no title attribute.\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>渲染结果</strong>:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>&lt;p&gt;\n  This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt; an example&lt;/a&gt; inline\n  link.\n&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no title attribute.&lt;/p&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>输出</strong>:</p>',6),i=(0,s.Uk)("This is "),o={href:"http://example.com/",title:"Title",target:"_blank",rel:"noopener noreferrer"},d=(0,s.Uk)("an example"),p=(0,s.Uk)(" inline link."),c={href:"http://example.net/",target:"_blank",rel:"noopener noreferrer"},m=(0,s.Uk)("This link"),u=(0,s.Uk)(" has no title attribute."),g=(0,s.uE)('<p>如果您是要链接到同样主机的资源，您可以使用绝对路径或相对路径:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>See my [About](/about.html) page for details.\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h3><p>参考形式的链接使用另外一个方括号接在链接文字的括号后面，而在第二个方括号里面要填入标识链接的标签:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>This is [an example][id] reference-style link.\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>之后在文件的任意地方，您都可以把这个标签的链接内容定义出来:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>[id]: http://example.com/ &quot;Optional Title Here&quot;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>链接定义的形式为:</p><ul><li>方括号，输入链接的标识 ID</li><li>冒号</li><li>一个以上的空白或 tab</li><li>链接的网址</li><li>选择性地添加 title 内容，可以用单引号、双引号或是括号包括</li></ul><p>下面这三种链接的定义相同:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>[foo]: http://example.com/ &quot;Optional Title Here&quot;\n[foo]: http://example.com/ &quot;Optional Title Here&quot;\n[foo]: http://example.com/ &quot;Optional Title Here&quot;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>链接网址也可以用方括号包起来:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>[id]: [http://example.com/] &quot;Optional Title Here&quot;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>您也可以把 title 属性放到下一行，也可以加一些缩进，网址太长的话，这样会比较好看:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>[id]: http://example.com/longish/path/to/resource/here\n    &quot;Optional Title Here&quot;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。</p><p>链接辨识标签可以有字母、数字、空白和标点符号，但是并<strong>不</strong>区分大小写，因此下面两个链接是一样的:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>[link text][a]\n[link text][A]\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">最佳实践</p><p>由于不区分大小写的原因，Markdown 最佳实践推荐标识标签均使用小写。</p></div><h4 id="简写" tabindex="-1"><a class="header-anchor" href="#简写" aria-hidden="true">#</a> 简写</h4><p>您可以通过简写写法省略指定链接标签，这种情形下，链接标签和链接文字会视为相同，要用预设链接标签只要在链接文字后面加上一个空的方括号，如果您要让 &quot;Google&quot; 链接到 google.com，您可以简化成:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>[Google][]\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>然后定义链接内容:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>[google]: http://google.com/\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>由于链接文字可能包含空白，所以这种简化的标签内也可以包含多个文字:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>Visit [Daring Fireball][] for more information.\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>然后定义链接:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>[daring fireball]: http://daringfireball.net/\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>链接的定义可以放在文件中的任何一个地方，建议放在链接出现段落的后面或文件最后面，就像是注解一样。</p>',29),b={class:"custom-block details"},h=(0,s.uE)('<summary>例子</summary><p><strong>输入</strong>:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>I get 10 times more traffic from [Google][1] than from\n[Yahoo][2] or [MSN][3].\n\n[1]: http://google.com/ &quot;Google&quot;\n[2]: http://search.yahoo.com/ &quot;Yahoo Search&quot;\n[3]: http://search.msn.com/ &quot;MSN Search&quot;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>等同于</strong>:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>I get 10 times more traffic from [Google][] than from\n[Yahoo][] or [MSN][].\n\n[google]: http://google.com/ &quot;Google&quot;\n[yahoo]: http://search.yahoo.com/ &quot;Yahoo Search&quot;\n[msn]: http://search.msn.com/ &quot;MSN Search&quot;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>渲染结果</strong>:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>&lt;p&gt;\n  I get 10 times more traffic from\n  &lt;a href=&quot;http://google.com/&quot; title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from\n  &lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;\n  or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.\n&lt;/p&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>输出</strong>:</p>',8),v=(0,s.Uk)("I get 10 times more traffic from "),k={href:"http://google.com/",title:"Google",target:"_blank",rel:"noopener noreferrer"},w=(0,s.Uk)("Google"),f=(0,s.Uk)(" than from "),x={href:"http://search.yahoo.com/",title:"Yahoo Search",target:"_blank",rel:"noopener noreferrer"},q=(0,s.Uk)("Yahoo"),_=(0,s.Uk)(" or "),y={href:"http://search.msn.com/",title:"MSN Search",target:"_blank",rel:"noopener noreferrer"},T=(0,s.Uk)("MSN"),M=(0,s.Uk)("."),S=(0,s.uE)('<p><strong>同样的行内模式写法</strong>:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)\nthan from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or\n[MSN](http://search.msn.com/ &quot;MSN Search&quot;).\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',2),U=(0,s.uE)('<div class="custom-container tip"><p class="custom-container-title">优势</p><p>参考式的链接其实重点不在于它比较好写，而是它比较好读，比较一下上面的范例，使用参考式的文章本身只有 81 个字符，但是用行内形式的链接却会增加到 176 个字符，如果是用纯 HTML 格式来写，会有 234 个字符，在 HTML 格式中，标签比文字还要多。</p><p>使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让您可以把一些标记相关的资讯移到段落文字之外，您就可以增加链接而不让文章的阅读感觉被打断。</p></div><h2 id="强调" tabindex="-1"><a class="header-anchor" href="#强调" aria-hidden="true">#</a> 强调</h2><p>Markdown 使用星号 (<code>*</code>) 和底线 (<code>_</code>) 作为标记强调字词的符号。</p><p>被 <code>*</code> 或 <code>_</code> 包围的字词会被转成用 <code>&lt;em&gt;</code> 标签包围，用两个 <code>*</code> 或 <code>_</code> 包起来的话，则会被转成 <code>&lt;strong&gt;</code>。</p><details class="custom-block details"><summary>例子</summary><p><strong>输入</strong>:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>**double asterisks** (建议)\n\n_single underscores_ (建议)\n\n__double underscores__\n\n*single asterisks*\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>渲染结果</strong>:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>&lt;strong&gt;double asterisks&lt;/strong&gt;\n\n&lt;em&gt;single underscores&lt;/em&gt;\n\n&lt;strong&gt;double underscores&lt;/strong&gt;\n\n&lt;em&gt;single asterisks&lt;/em&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></details><p>但是如果您的 <code>*</code> 和 <code>_</code> 两边都有空白的话，它们就只会被当成普通的符号</p><details class="custom-block details"><summary>例子</summary><p><strong>输入</strong>:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>These two _, _ and *, * will be treated as normal characters.\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>输出</strong>:</p><p>These two _, _ and *, * will be treated as normal characters.</p></details><div class="custom-container tip"><p class="custom-container-title">最佳实践</p><p>为了将两者进行区分，Markdown 最佳实践要求在所有地方尽可能使用 <code>**</code> 和 <code>_</code>。但是这里有一个例外:</p><p>由于使用代码或者是其他情况，人们很容易创造出带有下划线的单词 (如 <code>last_updated_time</code>)，在这种情况下，updated 就不会识别为斜体。只有在这种情况下，使用 <code>*</code> 而不是 <code>_</code>。</p><details class="custom-block details"><summary>例子</summary><p><strong>输入</strong>:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>A varibale like last_updated_time won’t be _transformed_ like last*updated*time.\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>输出</strong>:</p><p>A varibale like last_updated_time won’t be <em>transformed</em> like last<em>updated</em>time.</p></details></div><p>强调也可以直接插在文字中间:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>un*frigging*believable\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="转义" tabindex="-1"><a class="header-anchor" href="#转义" aria-hidden="true">#</a> 转义</h3><details class="custom-block details"><summary>如果要在文字前后直接插入普通的星号或底线，您可以用 \\</summary><p><strong>输入</strong>:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>\\*this text is surrounded by literal asterisks\\*\n\n\\_this text is surrounded by literal underscores\\_\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>输出</strong>:</p><p>*this text is surrounded by literal asterisks*</p><p>_this text is surrounded by literal underscores_</p></details><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><p>如果要标记一小段行内代码，您可以用反引号 (<code>`</code>) 把它包起来。</p><div class="custom-container tip"><p class="custom-container-title">反引号</p><p>反引号在键盘的左上角，ESC 键的下方</p></div><details class="custom-block details"><summary>例子</summary><p><strong>输入</strong>:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>Use the `printf()` function.\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>渲染结果</strong>:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>输出</strong>:</p><p>Use the <code>printf()</code> function.</p></details><h3 id="转义-1" tabindex="-1"><a class="header-anchor" href="#转义-1" aria-hidden="true">#</a> 转义</h3><p>如果要在代码内插入反引号，您可以用多个反引号来开启和结束行内代码</p><details class="custom-block details"><summary>例子</summary><p><strong>输入</strong>:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>`` There is a literal backtick (`) here. ``\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>渲染结果</strong>:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>输出</strong>:</p><p><code>There is a literal backtick (`) here.</code></p></details><p>代码码区段的起始和结束端都可以放入一个空白，起始端后面一个，结束端前面一个，这样您就可以在区段的一开始就插入反引号。</p><details class="custom-block details"><summary>例子</summary><p><strong>输入</strong>:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>A single backtick in a code span: `` ` ``\n\nA backtick-delimited string in a code span: `` `foo` ``\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>渲染结果</strong>:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>输出</strong>:</p><p>A single backtick in a code span: <code>`</code></p><p>A backtick-delimited string in a code span: <code>`foo`</code></p></details><p>在代码码区段内，<code>&amp;</code> 和方括号都会被转成 HTML 实体，这样会比较容易插入 HTML 原始码.</p><details class="custom-block details"><summary>例子</summary><p><strong>输入</strong>:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>Please don’t use any `&lt;blink&gt;` tags.\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>渲染结果</strong>:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>&lt;p&gt;Please don’t use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>输出</strong>:</p><p>Please don’t use any <code>&lt;blink&gt;</code> tags.</p></details><h2 id="图片" tabindex="-1"><a class="header-anchor" href="#图片" aria-hidden="true">#</a> 图片</h2><p>很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。</p><p>Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式: <em>行内</em> 和 <em>参考</em>。</p><ul><li><p>行内图片的语法如下:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>![Alt text](/path/to/img.jpg)\n\n![Alt text](/path/to/img.jpg &quot;Optional title&quot;)\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>详细叙述如下:</p><ul><li>一个惊叹号 <code>!</code></li><li>一个方括号，里面放上图片的替代文字</li><li>一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 title 文字。</li></ul></li><li><p>参考式的图片语法如下:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>![Alt text][id]\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>id</code> 是图片参考的名称，图片参考的定义方式则和链接参考一样:</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>[id]: url/to/image &quot;Optional title attribute&quot;\n</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li></ul><p>它们的优劣与链接相同。</p><div class="custom-container tip"><p class="custom-container-title">提示</p><p>Markdown 无法指定图片的宽高，如果您需要的话，您可以使用普通的 <code>&lt;img&gt;</code> 标签。</p></div>',29),A={},H=(0,a(82831).Z)(A,[["render",function(e,n){const a=(0,s.up)("ExternalLinkIcon");return(0,s.wg)(),(0,s.iD)(s.HY,null,[r,(0,s._)("details",l,[t,(0,s._)("p",null,[i,(0,s._)("a",o,[d,(0,s.Wm)(a)]),p]),(0,s._)("p",null,[(0,s._)("a",c,[m,(0,s.Wm)(a)]),u])]),g,(0,s._)("details",b,[h,(0,s._)("p",null,[v,(0,s._)("a",k,[w,(0,s.Wm)(a)]),f,(0,s._)("a",x,[q,(0,s.Wm)(a)]),_,(0,s._)("a",y,[T,(0,s.Wm)(a)]),M]),S]),U],64)}]])},82831:(e,n)=>{n.Z=(e,n)=>{const a=e.__vccOpts||e;for(const[e,s]of n)a[e]=s;return a}},54597:(e,n,a)=>{a.r(n),a.d(n,{data:()=>s});const s={key:"v-32c10f2e",path:"/code/language/markdown/inline.html",title:"Markdown 行内元素",lang:"zh-CN",frontmatter:{title:"Markdown 行内元素",icon:"markdown",category:["Markdown"],tag:["Markdown"],summary:"链接 Markdown 支持两种形式的链接语法: 行内和参考。 不管是哪一种，链接的文字都是用 [方括号] 来标记。 行内链接 要建立一个行内形式的链接，只要在方块括号后输入圆括号并插入网址链接即可，如果您还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可。 例子 输入: 渲染结果: 输出: This is an ex",head:[["meta",{property:"og:url",content:"https://mrhope.site/code/language/markdown/inline.html"}],["meta",{property:"og:site_name",content:"Mr.Hope"}],["meta",{property:"og:title",content:"Markdown 行内元素"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:updated_time",content:"2022-02-12T05:50:30.000Z"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{property:"article:tag",content:"Markdown"}],["meta",{property:"article:modified_time",content:"2022-02-12T05:50:30.000Z"}]]},excerpt:"",headers:[{level:2,title:"链接",slug:"链接",children:[{level:3,title:"行内链接",slug:"行内链接",children:[]},{level:3,title:"参考链接",slug:"参考链接",children:[]}]},{level:2,title:"强调",slug:"强调",children:[{level:3,title:"转义",slug:"转义",children:[]}]},{level:2,title:"代码",slug:"代码",children:[{level:3,title:"转义",slug:"转义-1",children:[]}]},{level:2,title:"图片",slug:"图片",children:[]}],git:{createdTime:1616318554e3,updatedTime:164464503e4,contributors:[{name:"Mr.Hope",email:"zhangbowang1998@gmail.com",commits:6}]},readingTime:{minutes:6.9,words:2070},filePathRelative:"code/language/markdown/inline.md"}}}]);