"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[19343],{1817:(e,r,o)=>{o.r(r),o.d(r,{default:()=>vr});var t=o(66252);const n=(0,t.Uk)("此处记录了"),a={href:"http://www.typescriptlang.org/docs/handbook/basic-types.html",target:"_blank",rel:"noopener noreferrer"},l=(0,t.Uk)("官方手册"),p=(0,t.Uk)("("),s={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/",target:"_blank",rel:"noopener noreferrer"},h=(0,t.Uk)("中文版"),i=(0,t.Uk)(")中包含，但是本书未涉及的概念。"),k=(0,t._)("p",null,"我认为它们是一些不重要或者不属于 TypeScript 的概念，所以这里只给出一个简单的释义，详细内容可以点击链接深入理解。",-1),c={href:"http://www.typescriptlang.org/docs/handbook/basic-types.html#never",target:"_blank",rel:"noopener noreferrer"},d=(0,t.Uk)("Never"),g=(0,t.Uk)("("),b={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Basic%20Types.html#never",target:"_blank",rel:"noopener noreferrer"},m=(0,t.Uk)("中文版"),f=(0,t.Uk)("): 永远不存在值的类型，一般用于错误处理函数"),_={href:"http://www.typescriptlang.org/docs/handbook/variable-declarations.html",target:"_blank",rel:"noopener noreferrer"},y=(0,t.Uk)("Variable Declarations"),U=(0,t.Uk)("("),E={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Variable%20Declarations.html",target:"_blank",rel:"noopener noreferrer"},u=(0,t.Uk)("中文版"),w=(0,t.Uk)("): 使用 "),B=(0,t._)("code",null,"let",-1),W=(0,t.Uk)(" 和 "),A=(0,t._)("code",null,"const",-1),z=(0,t.Uk)(" 替代 "),T=(0,t._)("code",null,"var",-1),v=(0,t.Uk)("，这是 "),C={href:"http://es6.ruanyifeng.com/#docs/let",target:"_blank",rel:"noopener noreferrer"},S=(0,t.Uk)("ES6 的知识"),x={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Functions.html#this",target:"_blank",rel:"noopener noreferrer"},D=(0,t._)("code",null,"this",-1),F=(0,t.Uk)(": 箭头函数的运用，这是 "),I={href:"http://es6.ruanyifeng.com/#docs/function",target:"_blank",rel:"noopener noreferrer"},M=(0,t.Uk)("ES6 的知识"),G={href:"http://www.typescriptlang.org/docs/handbook/generics.html#using-class-types-in-generics",target:"_blank",rel:"noopener noreferrer"},N=(0,t.Uk)("Using Class Types in Generics"),H=(0,t.Uk)("("),L={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Generics.html#%E5%9C%A8%E6%B3%9B%E5%9E%8B%E9%87%8C%E4%BD%BF%E7%94%A8%E7%B1%BB%E7%B1%BB%E5%9E%8B",target:"_blank",rel:"noopener noreferrer"},P=(0,t.Uk)("中文版"),V=(0,t.Uk)("): 创建工厂函数时，需要引用构造函数的类类型"),q={href:"http://www.typescriptlang.org/docs/handbook/type-inference.html#best-common-type",target:"_blank",rel:"noopener noreferrer"},R=(0,t.Uk)("Best common type"),Y=(0,t.Uk)("("),Z={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Type%20Inference.html#%E6%9C%80%E4%BD%B3%E9%80%9A%E7%94%A8%E7%B1%BB%E5%9E%8B",target:"_blank",rel:"noopener noreferrer"},j=(0,t.Uk)("中文版"),J=(0,t.Uk)("): 数组的类型推论"),K={href:"http://www.typescriptlang.org/docs/handbook/type-inference.html#contextual-type",target:"_blank",rel:"noopener noreferrer"},O=(0,t.Uk)("Contextual Type"),Q=(0,t.Uk)("("),X={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Type%20Inference.html#%E4%B8%8A%E4%B8%8B%E6%96%87%E7%B1%BB%E5%9E%8B",target:"_blank",rel:"noopener noreferrer"},$=(0,t.Uk)("中文版"),ee=(0,t.Uk)("): 函数输入的类型推论"),re={href:"http://www.typescriptlang.org/docs/handbook/type-compatibility.html",target:"_blank",rel:"noopener noreferrer"},oe=(0,t.Uk)("Type Compatibility"),te=(0,t.Uk)("("),ne={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Type%20Compatibility.html",target:"_blank",rel:"noopener noreferrer"},ae=(0,t.Uk)("中文版"),le=(0,t.Uk)("): 允许不严格符合类型，只需要在一定规则下兼容即可"),pe={href:"http://www.typescriptlang.org/docs/handbook/advanced-types.html#intersection-types",target:"_blank",rel:"noopener noreferrer"},se=(0,t.Uk)("Advanced Types"),he=(0,t.Uk)("("),ie={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Advanced%20Types.html#%E4%BA%A4%E5%8F%89%E7%B1%BB%E5%9E%8B(intersection-types)",target:"_blank",rel:"noopener noreferrer"},ke=(0,t.Uk)("中文版"),ce=(0,t.Uk)("): 使用 "),de=(0,t._)("code",null,"&",-1),ge=(0,t.Uk)(" 将多种类型的共有部分叠加成一种类型"),be={href:"http://www.typescriptlang.org/docs/handbook/advanced-types.html#type-guards-and-differentiating-types",target:"_blank",rel:"noopener noreferrer"},me=(0,t.Uk)("Type Guards and Differentiating Types"),fe=(0,t.Uk)("("),_e={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Advanced%20Types.html#%E7%B1%BB%E5%9E%8B%E4%BF%9D%E6%8A%A4%E4%B8%8E%E5%8C%BA%E5%88%86%E7%B1%BB%E5%9E%8B(type-guards-and-differentiating-types)",target:"_blank",rel:"noopener noreferrer"},ye=(0,t.Uk)("中文版"),Ue=(0,t.Uk)("): 联合类型在一些情况下被识别为特定的类型"),Ee={href:"http://www.typescriptlang.org/docs/handbook/advanced-types.html#discriminated-unions",target:"_blank",rel:"noopener noreferrer"},ue=(0,t.Uk)("Discriminated Unions"),we=(0,t.Uk)("("),Be={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Advanced%20Types.html#%E5%8F%AF%E8%BE%A8%E8%AF%86%E8%81%94%E5%90%88(discriminated-unions)",target:"_blank",rel:"noopener noreferrer"},We=(0,t.Uk)("中文版"),Ae=(0,t.Uk)("): 使用 "),ze=(0,t._)("code",null,"|",-1),Te=(0,t.Uk)(" 联合多个接口的时候，通过一个共有的属性形成可辨识联合"),ve={href:"http://www.typescriptlang.org/docs/handbook/advanced-types.html#polymorphic-this-types",target:"_blank",rel:"noopener noreferrer"},Ce=(0,t.Uk)("Polymorphic "),Se=(0,t._)("code",null,"this",-1),xe=(0,t.Uk)(" types"),De=(0,t.Uk)("("),Fe={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Advanced%20Types.html#%E5%A4%9A%E6%80%81%E7%9A%84this%E7%B1%BB%E5%9E%8B",target:"_blank",rel:"noopener noreferrer"},Ie=(0,t.Uk)("中文版"),Me=(0,t.Uk)("): 父类的某个方法返回 "),Ge=(0,t._)("code",null,"this",-1),Ne=(0,t.Uk)("，当子类继承父类后，子类的实例调用此方法，返回的 "),He=(0,t._)("code",null,"this",-1),Le=(0,t.Uk)(" 能够被 TypeScript 正确的识别为子类的实例。"),Pe={href:"http://www.typescriptlang.org/docs/handbook/symbols.html",target:"_blank",rel:"noopener noreferrer"},Ve=(0,t.Uk)("Symbols"),qe=(0,t.Uk)("("),Re={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Symbols.html",target:"_blank",rel:"noopener noreferrer"},Ye=(0,t.Uk)("中文版"),Ze=(0,t.Uk)("): 新原生类型，这是 "),je={href:"http://es6.ruanyifeng.com/#docs/symbol",target:"_blank",rel:"noopener noreferrer"},Je=(0,t.Uk)("ES6 的知识"),Ke={href:"http://www.typescriptlang.org/docs/handbook/iterators-and-generators.html",target:"_blank",rel:"noopener noreferrer"},Oe=(0,t.Uk)("Iterators and Generators"),Qe=(0,t.Uk)("("),Xe={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Iterators%20and%20Generators.html",target:"_blank",rel:"noopener noreferrer"},$e=(0,t.Uk)("中文版"),er=(0,t.Uk)("): 迭代器，这是 "),rr={href:"http://es6.ruanyifeng.com/#docs/iterator",target:"_blank",rel:"noopener noreferrer"},or=(0,t.Uk)("ES6 的知识"),tr={href:"http://www.typescriptlang.org/docs/handbook/namespaces.html",target:"_blank",rel:"noopener noreferrer"},nr=(0,t.Uk)("Namespaces"),ar=(0,t.Uk)("("),lr={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Namespaces.html",target:"_blank",rel:"noopener noreferrer"},pr=(0,t.Uk)("中文版"),sr=(0,t.Uk)("): 避免全局污染，现在已被 "),hr={href:"http://es6.ruanyifeng.com/#docs/module",target:"_blank",rel:"noopener noreferrer"},ir=(0,t.Uk)("ES6 Module"),kr=(0,t.Uk)(" 替代"),cr={href:"http://www.typescriptlang.org/docs/handbook/decorators.html",target:"_blank",rel:"noopener noreferrer"},dr=(0,t.Uk)("Decorators"),gr=(0,t.Uk)("("),br={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Decorators.html",target:"_blank",rel:"noopener noreferrer"},mr=(0,t.Uk)("中文版"),fr=(0,t.Uk)("): 修饰器，这是 "),_r={href:"http://es6.ruanyifeng.com/#docs/decorator",target:"_blank",rel:"noopener noreferrer"},yr=(0,t.Uk)("ES2016 的一个提案"),Ur={href:"http://www.typescriptlang.org/docs/handbook/mixins.html",target:"_blank",rel:"noopener noreferrer"},Er=(0,t.Uk)("Mixins"),ur=(0,t.Uk)("("),wr={href:"https://zhongsp.gitbooks.io/typescript-handbook/content/doc/handbook/Mixins.html",target:"_blank",rel:"noopener noreferrer"},Br=(0,t.Uk)("中文版"),Wr=(0,t.Uk)("): 一种编程模式，与 TypeScript 没有直接关系，可以参考 "),Ar={href:"http://es6.ruanyifeng.com/#docs/class#Mixin%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%AE%9E%E7%8E%B0",target:"_blank",rel:"noopener noreferrer"},zr=(0,t.Uk)("ES6 中 Mixin 模式的实现"),Tr={},vr=(0,o(83744).Z)(Tr,[["render",function(e,r){const o=(0,t.up)("ExternalLinkIcon");return(0,t.wg)(),(0,t.iD)(t.HY,null,[(0,t._)("p",null,[n,(0,t._)("a",a,[l,(0,t.Wm)(o)]),p,(0,t._)("a",s,[h,(0,t.Wm)(o)]),i]),k,(0,t._)("ul",null,[(0,t._)("li",null,[(0,t._)("a",c,[d,(0,t.Wm)(o)]),g,(0,t._)("a",b,[m,(0,t.Wm)(o)]),f]),(0,t._)("li",null,[(0,t._)("a",_,[y,(0,t.Wm)(o)]),U,(0,t._)("a",E,[u,(0,t.Wm)(o)]),w,B,W,A,z,T,v,(0,t._)("a",C,[S,(0,t.Wm)(o)])]),(0,t._)("li",null,[(0,t._)("a",x,[D,(0,t.Wm)(o)]),F,(0,t._)("a",I,[M,(0,t.Wm)(o)])]),(0,t._)("li",null,[(0,t._)("a",G,[N,(0,t.Wm)(o)]),H,(0,t._)("a",L,[P,(0,t.Wm)(o)]),V]),(0,t._)("li",null,[(0,t._)("a",q,[R,(0,t.Wm)(o)]),Y,(0,t._)("a",Z,[j,(0,t.Wm)(o)]),J]),(0,t._)("li",null,[(0,t._)("a",K,[O,(0,t.Wm)(o)]),Q,(0,t._)("a",X,[$,(0,t.Wm)(o)]),ee]),(0,t._)("li",null,[(0,t._)("a",re,[oe,(0,t.Wm)(o)]),te,(0,t._)("a",ne,[ae,(0,t.Wm)(o)]),le]),(0,t._)("li",null,[(0,t._)("a",pe,[se,(0,t.Wm)(o)]),he,(0,t._)("a",ie,[ke,(0,t.Wm)(o)]),ce,de,ge]),(0,t._)("li",null,[(0,t._)("a",be,[me,(0,t.Wm)(o)]),fe,(0,t._)("a",_e,[ye,(0,t.Wm)(o)]),Ue]),(0,t._)("li",null,[(0,t._)("a",Ee,[ue,(0,t.Wm)(o)]),we,(0,t._)("a",Be,[We,(0,t.Wm)(o)]),Ae,ze,Te]),(0,t._)("li",null,[(0,t._)("a",ve,[Ce,Se,xe,(0,t.Wm)(o)]),De,(0,t._)("a",Fe,[Ie,(0,t.Wm)(o)]),Me,Ge,Ne,He,Le]),(0,t._)("li",null,[(0,t._)("a",Pe,[Ve,(0,t.Wm)(o)]),qe,(0,t._)("a",Re,[Ye,(0,t.Wm)(o)]),Ze,(0,t._)("a",je,[Je,(0,t.Wm)(o)])]),(0,t._)("li",null,[(0,t._)("a",Ke,[Oe,(0,t.Wm)(o)]),Qe,(0,t._)("a",Xe,[$e,(0,t.Wm)(o)]),er,(0,t._)("a",rr,[or,(0,t.Wm)(o)])]),(0,t._)("li",null,[(0,t._)("a",tr,[nr,(0,t.Wm)(o)]),ar,(0,t._)("a",lr,[pr,(0,t.Wm)(o)]),sr,(0,t._)("a",hr,[ir,(0,t.Wm)(o)]),kr]),(0,t._)("li",null,[(0,t._)("a",cr,[dr,(0,t.Wm)(o)]),gr,(0,t._)("a",br,[mr,(0,t.Wm)(o)]),fr,(0,t._)("a",_r,[yr,(0,t.Wm)(o)])]),(0,t._)("li",null,[(0,t._)("a",Ur,[Er,(0,t.Wm)(o)]),ur,(0,t._)("a",wr,[Br,(0,t.Wm)(o)]),Wr,(0,t._)("a",Ar,[zr,(0,t.Wm)(o)])])])],64)}]])},89247:(e,r,o)=>{o.r(r),o.d(r,{data:()=>t});const t={key:"v-251c5e07",path:"/code/language/typescript/advanced/further-reading.html",title:"扩展阅读",lang:"zh-CN",frontmatter:{title:"扩展阅读",icon:"quote",category:["TypeScript"],summary:"此处记录了官方手册(中文版)中包含，但是本书未涉及的概念。\n",head:[["meta",{property:"og:url",content:"https://mrhope.site/code/language/typescript/advanced/further-reading.html"}],["meta",{property:"og:site_name",content:"Mr.Hope"}],["meta",{property:"og:title",content:"扩展阅读"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:locale",content:"zh-CN"}]]},excerpt:'<p>此处记录了<a href="http://www.typescriptlang.org/docs/handbook/basic-types.html" target="_blank" rel="noopener noreferrer">官方手册<ExternalLinkIcon/></a>(<a href="https://zhongsp.gitbooks.io/typescript-handbook/content/" target="_blank" rel="noopener noreferrer">中文版<ExternalLinkIcon/></a>)中包含，但是本书未涉及的概念。</p>\n',headers:[],git:{createdTime:1591204114e3,updatedTime:1615351323e3,contributors:[{name:"Mr.Hope",email:"zhangbowang1998@gmail.com",commits:3}]},readingTime:{minutes:2.63,words:788},filePathRelative:"code/language/typescript/advanced/further-reading.md"}}}]);